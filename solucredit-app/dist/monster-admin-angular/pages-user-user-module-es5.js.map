{"version":3,"sources":["webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/user/multiselect/multiselect.component.ts","webpack:///src/app/pages/user/multiselect/multiselect.component.html","webpack:///src/app/pages/user/spinner/spinner.component.ts","webpack:///src/app/pages/user/spinner/spinner.component.html","webpack:///src/app/pages/user/user.component.ts","webpack:///src/app/pages/user/user.component.html","webpack:///src/app/pages/user/user.module.ts"],"names":["User","user_id","firstname","lastname","email","gender","mobile_phone","address","rols","img","MultiselectComponent","dropdownList","cities","selectedItems","singleselectedItems","dropdownSettings","singledropdownSettings","closeDropdownSelection","item_id","item_text","singleSelection","selectAllText","unSelectAllText","allowSearchFilter","closeDropDownOnSelection","idField","textField","itemsShowLimit","item","items","onItemSelect","onSelectAll","selector","templateUrl","styleUrls","SpinnerComponent","validate_auth0","UserComponent","notifier","userService","fb","modalService","datePipe","spinner","autorization","mysqlService","vals","config","label","tipo","range","labelsAux","options","restart","header","IdUsertoDelete","rolesMap","page","pageSize","generos","isEditing","pageName","multidropdownSettings","editPassword","group","newPassword","required","confirm","forbiddenNameValidator","newUserForm","FirstName","LastName","Email","Gen","Phone","pattern","Address","Rols","newUserForm2","editUser","GenFalso","userList","roles","rolesitems","dataFilter","searchField","searchItem","push","sub","getUsers","pipe","response","data","usersTotal","count","hide","err","notify","console","log","subscribe","unsubscribe","a","window","localStorage","getItem","resource","havePermission","show","filter","isCalculatingRoles","isLoadingInEdition","isEmailUnique","isEmailInputFocus","formArray","get","clear","e","event","target","checked","value","i","controls","forEach","ctrl","removeAt","userid","modal","reset","getNewRules","open","centered","backdrop","keyboard","size","control","forbidden","forbiddenName","suscription","changePassword","resp","closeBtnClick","message","getRols","map","name","rolsaux","rol_id","newuser","saveUser","dismissAll","setValue","ngOnInit","iduser","openSingleModal","modalDelete","targetModal","userID","deleteUser","us","isExistEmail","valid","user","subscription1","getUser","userActual","disable","userinfo","subscription2","getUserROls","rolesactuales","newrols","suscription1","modUserInfo","suscription2","modRolsUser","enable","rolestotales","rol","armarCheckBoxes","estate","rolesSistema","rolesUsuario","observer","length","rolesModificados","Object","values","next","routes","path","title","urls","url","component","UserModule","forChild","declarations","imports","exports","providers"],"mappings":"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","file":"pages-user-user-module-es5.js","sourcesContent":["import { Rol } from './rol.model';\r\nexport interface UserPagination {\r\n    count: number,\r\n    data: User[]\r\n}\r\nexport interface GetUsersResponse {\r\n    success: boolean;\r\n    data: UserPagination\r\n}\r\n\r\nexport interface GetUserResponse {\r\n    success: boolean;\r\n    data: User;\r\n}\r\n\r\nexport interface SaveUserResponse {\r\n    success: boolean;\r\n    data: User;\r\n}\r\n\r\n\r\nexport interface GetUsersArrayResponse {\r\n    success: boolean\r\n    data: User[]\r\n}\r\n\r\n\r\n\r\nexport class User {\r\n\r\n    user_id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n\r\n    email: string;\r\n    gender: number;\r\n    mobile_phone: string;\r\n    address: string;\r\n    /* birthdate: string; */\r\n    rols: any[]\r\n    /* home_phone: string;\r\n    office_home: string;\r\n     */\r\n    img: string;\r\n\r\n    constructor(\r\n        user_id: number,\r\n        firstname: string,\r\n        lastname: string,\r\n        email: string,\r\n        gender: number,\r\n        mobile_phone: string,\r\n        address: string,\r\n        rols: any[],\r\n        img: string = '/assets/images/users/noImage.png',\r\n    ) {\r\n\r\n        this.user_id = user_id;\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n        this.email = email;\r\n        this.gender = gender;\r\n        this.img = img;\r\n        this.rols = rols;\r\n        this.mobile_phone = mobile_phone;\r\n\r\n        this.address = address;\r\n\r\n\r\n    }\r\n\r\n}","import { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-multiselect',\r\n  templateUrl: './multiselect.component.html',\r\n  styleUrls: ['./multiselect.component.css']\r\n})\r\nexport class MultiselectComponent implements OnInit {\r\n  dropdownList = [];\r\n  cities = [];\r\n  selectedItems = [];\r\n  singleselectedItems = [];\r\n  dropdownSettings = {};\r\n  singledropdownSettings = {};\r\n  closeDropdownSelection = false;\r\n  ngOnInit() {\r\n    \r\n    this.dropdownList = [\r\n      { item_id: 1, item_text: 'Administrador' },\r\n      { item_id: 2, item_text: 'Auditor' },\r\n      { item_id: 3, item_text: 'Colaborador' },\r\n      { item_id: 4, item_text: 'Contador' },\r\n      { item_id: 5, item_text: 'Gerencia' }\r\n    ];\r\n    this.cities = ['Mumbai', 'New Delhi', 'Bangaluru', 'Pune', 'Navsari'];\r\n    this.selectedItems = [\r\n    ];\r\n    this.singleselectedItems = ['Pune'];\r\n    this.singledropdownSettings = {\r\n      singleSelection: true,\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: this.closeDropdownSelection\r\n    };\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'rol_id',\r\n      textField: 'name',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3\r\n      /* allowSearchFilter: true */\r\n    };\r\n  }\r\n  onItemSelect(item: any) {\r\n    \r\n  }\r\n  onSelectAll(items: any) {\r\n \r\n  }\r\n}\r\n","<ng-multiselect-dropdown [settings]=\"dropdownSettings\" [placeholder]=\"'roles'\" [data]=\"dropdownList\" [(ngModel)]=\"selectedItems\" [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\">\r\n</ng-multiselect-dropdown>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-spinner\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators, FormControl, ValidatorFn, AbstractControl, AsyncValidatorFn } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { map, mergeMap, catchError, exhaustMap, withLatestFrom,} from 'rxjs/operators';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { UserService } from './servicio/user.service';\r\nimport { User } from '../../models/user.model';\r\nimport { of, Observable, Subscription } from 'rxjs';\r\nimport { Rol } from 'src/app/models/rol.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { MysqlService } from '../../services/mysql/mysql.service';\r\nimport { ValidatePasswordAuth0Service } from 'src/app/services/auth0/validate-password-auth0.service';\r\ninterface checkRol {\r\n    value: boolean;\r\n    rol:Rol\r\n}\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n\r\n    //PARA FILTROS\r\n\r\n    vals: any[] = ['', '', '', '', '', '', '', ''];\r\n\r\n   \r\n    config = [\r\n        \r\n        {\r\n            label: 'Email:',\r\n            tipo: 'TEXT',\r\n            range: false,\r\n            labelsAux: []\r\n\r\n        },\r\n        {\r\n            label: 'Nombres:',\r\n            tipo: 'TEXT',\r\n            range: false,\r\n            labelsAux: []\r\n\r\n        },\r\n        {\r\n            label: 'Apellidos:',\r\n            tipo: 'TEXT',\r\n            range: false,\r\n            labelsAux: []\r\n\r\n        },\r\n        {\r\n\r\n            tipo: 'OPTIONS',\r\n            options: {\r\n                restart: false,\r\n                header: false\r\n\r\n            }\r\n\r\n        }\r\n    ];\r\n\r\n    filter(dataFilter) {\r\n\r\n        let searchField = [];\r\n        let searchItem = [];\r\n\r\n\r\n        /* if (this.vals[0] && this.vals[1]) {\r\n          searchField.push('FECINI');\r\n          let fecini = this.vals[0].year + '-' + this.vals[0].month + '-' + this.vals[0].day + ' 00:00:00';\r\n          searchItem.push(fecini);\r\n          searchField.push('FECEND');\r\n          let fecend = this.vals[1].year + '-' + this.vals[1].month + '-' + this.vals[1].day + ' 23:59:59';\r\n          searchItem.push(fecend);\r\n        } */\r\n\r\n\r\n        if (this.vals[2] != \"\") {\r\n            searchField.push('NAME');\r\n            searchItem.push('%' + this.vals[2] + '%');\r\n            \r\n        }\r\n        if (this.vals[4] != \"\") {\r\n            searchField.push('NAME2');\r\n            searchItem.push('%' + this.vals[4] + '%');\r\n            \r\n        }\r\n        if (this.vals[0] != \"\") {\r\n            searchField.push('EMAIL');\r\n            searchItem.push('%' + this.vals[0] + '%');\r\n        }\r\n        \r\n        let sub = this.userService.getUsers(this.pageSize, (this.page - 1) * this.pageSize, searchItem, searchField).pipe(\r\n            map((response) => {\r\n\r\n                this.userList = response.data;\r\n                this.usersTotal = response.count;\r\n                this.spinner.hide();\r\n/* \r\n                this.supplierList = response.data;\r\n                this.suppliersTotal = response.count;\r\n                this.spinner.hide(); */\r\n\r\n\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n\r\n        ).subscribe(() => {\r\n            //console.log('................');\r\n            sub.unsubscribe()\r\n        });\r\n\r\n    }\r\n    constructor(\r\n        private notifier: NotifierService,\r\n        private userService: UserService,\r\n        private fb: FormBuilder,\r\n        private modalService: NgbModal,\r\n        private datePipe: DatePipe,\r\n        private spinner: NgxSpinnerService,\r\n        private autorization: AuthorizationService,\r\n        private mysqlService: MysqlService,\r\n        private validate_auth0: ValidatePasswordAuth0Service\r\n    ) { }\r\n    \r\n\r\n    getCurrentuser():string {\r\n        let a = window.localStorage.getItem('email');\r\n        if (!a)\r\n            return \"\"\r\n        else\r\n            return a;\r\n    }\r\n    canDelete(): boolean { \r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'DELETE');\r\n    }\r\n    \r\n    canUpdate(): boolean {\r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'UPDATE');\r\n    }\r\n    canCreate(): boolean {\r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'CREATE');\r\n    }\r\n    canList(): boolean { \r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'LIST');\r\n    }\r\n    canEditPass(): boolean {\r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'PASS_EDITION');\r\n    }\r\n\r\n    //SUSCRIPCIONES\r\n    suscripcionUsers: Subscription;\r\n    //FLAGS DE COMPOTAMIENTO\r\n    isEmailUnique: boolean;\r\n    isEmailInputFocus: boolean;\r\n    \r\n    \r\n\r\n    //aux to delete\r\n    IdUsertoDelete=-1;\r\n    @ViewChild('modalDelete') private modalDelete: TemplateRef<{}>;\r\n    \r\n    \r\n    \r\n    //COSAS PAR EL CHECKBOX...\r\n    // For example, an array of choices\r\n    //public checks: Array<Rol> = [];\r\n    public rolesModificados: Array<checkRol>;\r\n    public isCalculatingRoles: boolean;\r\n    public rolesMap = {};\r\n    isLoadingInEdition: boolean;\r\n\r\n\r\n\r\n\r\n    //PAGINACION\r\n    page=1;\r\n    pageSize = 10;\r\n    userActual: User;\r\n    rolestotales: Rol[];\r\n    rolesactuales: Rol[];\r\n    //searchTerm = '';\r\n    \r\n    \r\n    generos = ['Femenino', 'Masculino'];\r\n    /* singleselectedItems = []; */\r\n    isEditing = false;\r\n   \r\n    pageName = 'Personal';\r\n    singledropdownSettings = {};\r\n    multidropdownSettings = {};\r\n    \r\n    //FORMULARIOS\r\n\r\n    editPassword = this.fb.group({\r\n        \r\n        newPassword: ['', [Validators.required]],\r\n        confirm: ['', [Validators.required, this.forbiddenNameValidator()]]\r\n        \r\n    });\r\n    newUserForm = this.fb.group({\r\n        FirstName: ['', Validators.required],\r\n        LastName: ['', Validators.required],\r\n        Email: ['', [Validators.required, Validators.email]],\r\n        Gen: ['', Validators.required],\r\n        Phone: ['', [Validators.pattern(\"(^[0-9]{8})|(^[+][0-9]{11}$)\")]],\r\n        Address: [''],\r\n        Rols:[]\r\n    });\r\n    newUserForm2 = this.fb.group({\r\n        \r\n        Rols:[]\r\n    });\r\n    \r\n\r\n    editUser = this.fb.group({\r\n            FirstName: ['', Validators.required],\r\n            LastName: ['', Validators.required],\r\n            Email: ['', [Validators.required, Validators.email]],\r\n            GenFalso: [],\r\n            Gen: [],\r\n            Phone: [''],\r\n            Address: [''],\r\n        Rols: new FormArray([])\r\n        });\r\n    \r\n    //LISTA DE USUARIO PRINCIPAL\r\n    userList: User[] = [];\r\n    usersTotal: number;\r\n    //PARA LOS ROLES CARGADOR DURANTE LA SECCION DE CREACION\r\n    roles: Rol[] = [];\r\n\r\n    //ESTRUCTURAS ROL PARA EL DROPDOWN DE CREACION DEL USUARIO\r\n    rolesitems = [];\r\n    getUsers() {\r\n        this.spinner.show();\r\n        /* this.suscripcionUsers = this.userService.getUsers(this.pageSize, (this.page-1)*this.pageSize).pipe(\r\n            map((response) => {\r\n                this.userList = response.users;\r\n                this.usersTotal = response.count;\r\n                this.spinner.hide();\r\n                \r\n                \r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n            \r\n        ).subscribe((lol) => {\r\n            //console.log('................');\r\n            this.suscripcionUsers.unsubscribe()\r\n        }); */\r\n        this.filter(null);\r\n    }\r\n    ngOnInit() {\r\n        //CHECKBOXES\r\n        this.isCalculatingRoles = false;\r\n        this.isLoadingInEdition = false;\r\n        //-----------------\r\n        //FLAG PARA VALIDACION DE CORREO\r\n        this.isEmailUnique = true;\r\n        this.isEmailInputFocus = false;\r\n        this.getUsers();\r\n    \r\n        this.singledropdownSettings = {\r\n          singleSelection: true,\r\n          selectAllText: 'Select All',\r\n          unSelectAllText: 'UnSelect All',\r\n          allowSearchFilter: false,\r\n          closeDropDownOnSelection: false\r\n        };\r\n        this.multidropdownSettings = {\r\n          singleSelection: false,\r\n          idField: 'item_id',\r\n          textField: 'item_text',\r\n          selectAllText: 'Select All',\r\n          unSelectAllText: 'UnSelect All',\r\n          itemsShowLimit: 3\r\n          /* allowSearchFilter: true */\r\n        };\r\n            \r\n        this.pageName = 'Personal';\r\n        const formArray: FormArray = this.editUser.get('Rols') as FormArray;\r\n        formArray.clear();\r\n        \r\n    }\r\n    pageChange(e) { \r\n        //console.log(e);\r\n        this.getUsers();\r\n    }\r\n    \r\n    //SEARCHING.................\r\n   \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n    onCheckChange(event) {\r\n        //console.log(\"EL VALOR DEL EVENTO DEL CHECK\");\r\n        //console.log(event.target.value);\r\n      const formArray: FormArray = this.editUser.get('Rols') as FormArray;\r\n    \r\n      /* Selected */\r\n      if(event.target.checked){\r\n        // Add a new control in the arrayForm\r\n          formArray.push(new FormControl(event.target.value));\r\n          //console.log(\"SE CHECKIO\");\r\n          //console.log(formArray);\r\n      }\r\n        \r\n      /* unselected */\r\n      else {\r\n          //console.log(\"SE DESCHEKIO\");\r\n        // find the unselected element\r\n        let i: number = 0;\r\n    \r\n        formArray.controls.forEach((ctrl: FormControl) => {\r\n          if(ctrl.value == event.target.value) {\r\n            // Remove the unselected element from the arrayForm\r\n            formArray.removeAt(i);\r\n            return;\r\n          }\r\n    \r\n          i++;\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    changePwd(userid: number,modal) {\r\n        //console.log('SE QUIERE CAMBIAR EL PASSWORD..');\r\n        this.IdUsertoDelete = userid;\r\n        this.editPassword.reset({})\r\n        this.validate_auth0.getNewRules();\r\n        this.modalService.open(modal, {\r\n            centered: true,\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n\r\n            size: 'lg'\r\n        });\r\n\r\n    }\r\n\r\n    forbiddenNameValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        const forbidden = this.editPassword? control.value == this.editPassword.controls.newPassword.value:false;\r\n        return !forbidden ? { forbiddenName: { value: control.value } } : null;\r\n    };\r\n}\r\n    changePassword() {\r\n        let suscription = this.userService.changePassword(this.IdUsertoDelete,this.editPassword.controls.newPassword.value).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se cambio la contraseña satisfactoriamente');\r\n                this.closeBtnClick();\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema' + err.message);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(() => suscription.unsubscribe());\r\n    }\r\n    //OBTIENE LOS ROLES DEL SISTEMA Y LOS MAPEA AL LOS COMPONENTES DEL DROPDOWN\r\n    getRols() {\r\n        let suscription = this.userService.getRols(100, 0).pipe(\r\n            map((response) => {\r\n                this.roles = response;\r\n                //this.rolesitems = this.roles;\r\n                //console.log(this.rolesitems);\r\n                this.rolesitems = this.roles.map((item, i) => {\r\n                    return { item_id: i, item_text: item.name }\r\n                })\r\n                //console.log(this.rolesitems);\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema al obtener los roles' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(() => suscription.unsubscribe());\r\n    }\r\n    //SUBMIT DEL NUEVO USUARIO\r\n    onSubmit() {\r\n        \r\n        let rolsaux: string[] = [];\r\n        //POR SI NO SE SELECCIONO NINGUN ROL EN EL DROPDOW DE CREACION\r\n        if (this.newUserForm2.controls.Rols.value != null) { \r\n            //console.log('EL VALOR DE Rol no es nulo');\r\n            //console.log(this.newUserForm2.controls.Rols.value);\r\n            //console.log(this.roles);\r\n            rolsaux = this.newUserForm2.controls.Rols.value.map((item) => {\r\n            \r\n                //console.log(item);\r\n                return this.roles[item.item_id].rol_id;\r\n            })\r\n         }\r\n        let newuser = new User(\r\n            -1,\r\n            this.newUserForm.controls.FirstName.value,\r\n            this.newUserForm.controls.LastName.value,\r\n            this.newUserForm.controls.Email.value,\r\n            this.newUserForm.controls.Gen.value=='Masculino'?0:1,\r\n            this.newUserForm.controls.Phone.value,\r\n            this.newUserForm.controls.Address.value,\r\n            rolsaux,\r\n        );\r\n        //console.log(\".....EL USERQUE VOY A MANDAR AL SERVER::\")\r\n        //console.log(newuser);\r\n        let suscription = this.userService.saveUser(newuser).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se creo el usuario satisfactoriamente');\r\n                this.userList.push(resp);\r\n                this.closeBtnClick();\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(() => suscription.unsubscribe());\r\n    }\r\n    //PARA CERRAR LOS MODALES, TAMBIEN SE UTILIZA PARA REINICIAR DE NUEVO LOS DOS MODALES DE ESTA VISTA\r\n    closeBtnClick() {\r\n        //console.log('Se va a cerrar el modal');\r\n        this.modalService.dismissAll();\r\n        this.newUserForm.reset();\r\n        this.newUserForm2.reset()\r\n        this.newUserForm.controls.Phone.setValue('');\r\n        this.newUserForm.controls.Address.setValue('');\r\n        this.editUser.reset();\r\n        this.IdUsertoDelete = -1;\r\n        //this.singleselectedItems = [];\r\n        /* this.rolesitems = []; */\r\n        this.pageName = 'Personal';\r\n\r\n        this.isEditing = false;\r\n        this.ngOnInit();\r\n        \r\n    }\r\n\r\n    deleteUserModal(iduser: number){\r\n        this.IdUsertoDelete = iduser;\r\n        this.openSingleModal(this.modalDelete)\r\n      }\r\n\r\n    openSingleModal(targetModal) {\r\n        this.modalService.open(targetModal, {\r\n          centered: true,\r\n          backdrop: 'static',\r\n          keyboard: false\r\n        });\r\n    }\r\n\r\n\r\n    //BORRADO DE USUARIOS\r\n    deleteUser() {\r\n        let userID = this.IdUsertoDelete;\r\n        let suscription = this.userService.deleteUser(userID).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se elimino el Usuario');\r\n                  this.userList = this.userList.filter((us) => {\r\n                    return us.user_id != userID;\r\n                   })\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la eliminacion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(()=> suscription.unsubscribe());  \r\n        this.closeBtnClick();\r\n    }\r\n\r\n\r\n    emailFocus() {\r\n        console.log('EmailFOcus');\r\n        this.isEmailInputFocus = true;\r\n        this.isEmailUnique = true;\r\n        \r\n    }\r\n    //SIGUIENTE PARA AVANZAR EN EL MODAL DE CREACION\r\n    siguiente() {\r\n        this.mysqlService.isExistEmail(this.newUserForm.controls.Email.value).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                //this.emailAlreadyInUse = resp.data;\r\n\r\n\r\n                if (!resp.data) {\r\n                    this.pageName = 'Rol';\r\n                    this.getRols();\r\n                    this.isEmailUnique = true;\r\n                }\r\n                else {\r\n                    this.isEmailUnique = false;\r\n                }\r\n                return of();\r\n\r\n            })\r\n        ).subscribe();\r\n        /* this.userService.searchUser(['email'], [this.newUserForm.controls.Email.value]).subscribe(resp => {\r\n            if (resp.data.length == 0) {\r\n                this.pageName = 'Rol';\r\n                this.getRols();\r\n                this.isEmailUnique = true;\r\n            }\r\n            else {\r\n                this.isEmailUnique = false;\r\n            }\r\n        }); */\r\n        \r\n        \r\n    }\r\n    //ATRAS PARA RETROCEDER EN EL MODAL DE CREACION\r\n    atras() {\r\n        this.pageName = 'Personal';\r\n    }\r\n    //METODOS PARA LOS BOTONES DE SUBMIT SE ABILITEN O NO\r\n    isCorrect(): boolean { return !this.newUserForm.valid; }\r\n    isCorrect2(): boolean { return !this.editUser.valid; }\r\n    \r\n    //HABRE EL MODAL DE LA CREACION DE USUARIO\r\n    openModal2(targetModal, user: User) {\r\n        this.modalService.open(targetModal, {\r\n            centered: true,\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n            size:'lg'\r\n            /* size: 'sm' */\r\n        });\r\n    }\r\n    //HABRE EL MODAL DE LA EDICION\r\n    openModal(targetModal, user: User) {\r\n        this.modalService.open(targetModal, {\r\n            centered: true,\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n            size:'lg'\r\n            \r\n            /* size: 'sm' */\r\n        });\r\n\r\n\r\n    //OBTENGO TOLA LA INFO DE ESE..\r\n        this.isLoadingInEdition = true;\r\n        const subscription1 = this.userService.getUser(user.user_id).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.isEditing = false;\r\n                this.userActual = resp;\r\n                this.editUser.controls.FirstName.setValue(resp.firstname);\r\n                this.editUser.controls.FirstName.disable();\r\n                this.editUser.controls.LastName.setValue(resp.lastname);\r\n                this.editUser.controls.LastName.disable();\r\n                this.editUser.controls.Email.setValue(resp.email);\r\n                this.editUser.controls.Email.disable();\r\n                this.editUser.controls.GenFalso.setValue(resp.gender == 0 ? \"Masculino\" : \"Femenino\");\r\n                this.editUser.controls.GenFalso.disable();\r\n                return resp;\r\n                //this.getRolesUserActual();\r\n            }),catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema a recupar la info de ' + user.firstname+\" \"+user.lastname);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe((userinfo) => {\r\n            //console.log(\"#######INFO EN EL SUSCRIBE DE getUserInfo\")\r\n            //console.log(userinfo)\r\n            //console.log('###############################')\r\n            subscription1.unsubscribe()\r\n            const subscription2 = this.userService.getUserROls(this.userActual.user_id).pipe(\r\n                map((response) => {\r\n                    this.rolesactuales = response;\r\n                    this.userActual.rols = response;\r\n                    this.isLoadingInEdition = false\r\n                    return response;\r\n                    \r\n\r\n                })\r\n\r\n            ).subscribe(()=> subscription2.unsubscribe());\r\n         }\r\n             \r\n        );\r\n       \r\n\r\n    }\r\n\r\n   \r\n    saveUserChanges() {\r\n        //console.log(\"SAVE CHNANGES\");\r\n        //console.log(this.editUser.controls.Rols.value);\r\n        let newrols = this.editUser.controls.Rols.value;\r\n        //console.log(\"LOS ROLES QUE VOY A MANDAR::\")\r\n        //console.log(this.editUser.controls.Rols.value);\r\n        /* let newuser = new User(\r\n            this.userActual.user_id,\r\n            this.editUser.controls.FirstName.value,\r\n            this.editUser.controls.LasName.value,\r\n            this.editUser.controls.Email.value,\r\n            this.editUser.controls.Gen.value == 'Masculino' ? 0 : 1,\r\n            this.userActual.mobile_phone,\r\n            this.userActual.address,\r\n            []\r\n        );  */\r\n        this.userActual.firstname = this.editUser.controls.FirstName.value;\r\n        this.userActual.lastname = this.editUser.controls.LastName.value;\r\n        this.userActual.gender = this.editUser.controls.Gen.value;\r\n        const suscription1 = this.userService.modUserInfo(this.userActual).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se modifico');\r\n                this.closeBtnClick();\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(()=> suscription1.unsubscribe()); \r\n\r\n        const suscription2 = this.userService.modRolsUser(this.userActual, newrols).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se modificaron los roles');\r\n                this.closeBtnClick();\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(()=> suscription2.unsubscribe());\r\n\r\n    }\r\n    \r\n    startMod() {\r\n        this.isEditing = true;\r\n        \r\n        this.editUser.controls.FirstName.enable()\r\n        this.editUser.controls.LastName.enable();\r\n        this.editUser.controls.Gen.setValue(this.userActual.gender == 0 ? \"Masculino\" : \"Femenino\");\r\n        \r\n        //this.getrolesActuales();.\r\n        //console.log(\"SE LLAMO A LOS getrolesActuales\");\r\n         let suscription = this.userService.getRols(100, 0).pipe(\r\n            map(response => {\r\n                \r\n                this.rolestotales = response;\r\n                this.rolestotales.forEach((item) => {\r\n                    this.rolesMap[item.rol_id] = {\r\n                        value: false,\r\n                        rol: item\r\n                    };\r\n                });\r\n                \r\n               \r\n            })\r\n         ).subscribe(() => {\r\n             this.isCalculatingRoles = true;\r\n             suscription.unsubscribe();\r\n            let suscription2 = this.armarCheckBoxes(this.rolestotales, this.userActual.rols).subscribe((estate) => {\r\n                //console.log(\"En teoria ya termino de hacer lo del mapeo de los roles\");\r\n                this.isCalculatingRoles = false;\r\n                //suscription2.unsubscribe();\r\n            }); \r\n           \r\n        });\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        \r\n        //console.log(\"SE termino de armar los boxes, como habran quedo????\");\r\n        //console.log(this.rolesModificados)\r\n\r\n                \r\n                //this.editUser.controls.Email.enable();\r\n                \r\n                //this.editUser.controls.Gen.enable();\r\n    }\r\n\r\n    modificarRoles() {\r\n        //console.log(\"LOS ROLES QUE SE VAN A INGRESAR A USUARIO\");\r\n        //console.log(this.editUser.controls.Rols.value);\r\n\r\n        //this.userService.modRolsUser(this.userActual,this.editUser.controls.Rols.value)\r\n    }\r\n\r\n     \r\n\r\n   \r\n\r\n    armarCheckBoxes(rolesSistema: Rol[], rolesUsuario: Rol[]): Observable<boolean> {\r\n\r\n        return new Observable((observer) => {\r\n            const formArray: FormArray = this.editUser.get('Rols') as FormArray;\r\n            \r\n            for (let i = 0; i < this.rolesactuales.length; i++) {\r\n                let rol = this.rolesactuales[i];\r\n                \r\n                this.rolesMap[rol.rol_id].value = true;\r\n                formArray.push(new FormControl(rol.rol_id));\r\n                \r\n            }\r\n            this.rolesModificados = Object.values(this.rolesMap);\r\n            \r\n            observer.next(true);\r\n            //observer.complete();\r\n          \r\n        }); \r\n\r\n    }\r\n    \r\n        \r\n     \r\n onItemSelect(item: any) {\r\n    \r\n  }\r\n    \r\n\r\n\r\n}\r\n\r\n","<div class=\"col-12\">\r\n    <div class=\"card card-body\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n        </ngx-spinner>\r\n        <div style=\"margin-top: 0.5 rem;\" class=\"d-flex mb-3 mt-3\">\r\n\r\n            <!-- <input type=\"text\" class=\"form-control w-25\" placeholder=\"Busca a un empleado\" [(ngModel)]='searchTerm'> -->\r\n            <button *ngIf=\"canCreate()\" class=\"btn btn btn-info ml-auto h-25 btn-color-solucredit\" (click)=\"openModal2(createUserModal, null)\">Nuevo Usuario</button>\r\n\r\n\r\n        </div>\r\n\r\n        <app-reportfilters [config]=\"config\" [(vals)]=\"vals\" (onFilter)=\"filter($event)\"></app-reportfilters>\r\n        <div *ngIf=\"canList()\" class=\"table-responsive table-bordered\">\r\n            <table class=\"table table-striped mb-0 no-wrap v-middle\">\r\n                <thead>\r\n                    <tr>\r\n                        <!-- <th class=\"text-center\" scope=\"col\">#</th> -->\r\n                        <th scope=\"col\" style=\"text-align: center;\">Nombres</th>\r\n                        <th scope=\"col\" style=\"text-align: center;\">Apellidos</th>\r\n                        <th scope=\"col\" style=\"text-align: center;\">Correo</th>\r\n                        <th scope=\"col\" style=\"text-align: center;\">Acciones</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let user of userList;let i = index\">\r\n\r\n                        <!-- <td class=\"text-center\">\r\n                            {{i}}\r\n                        </td> -->\r\n\r\n\r\n                        <!-- <div class=\"d-flex align-items-center\">\r\n                                <img class=\"rounded-circle\" src=\"https://wrappixel.com/demos/angular-admin-templates/monster-angular/main/assets/images/users/2.jpg\" height=\" 50px\" width=\"50px\" alt=\"profile-image-generic\">\r\n                                <div class=\"ml-3\">\r\n                                    <p class=\"mb-0\">{{ user.firstname }}</p>\r\n                                    <small class=\"rol-section\">\r\n                                            <span class=\"label label-rol\">Administrador</span>\r\n                                             <span class=\"label label-rol\">Contador</span>\r\n                                        </small>\r\n                                </div>\r\n                            </div> -->\r\n                        <td style=\"text-align: center;\">{{user.firstname}}</td>\r\n                        <td style=\"text-align: center;\">{{ user.lastname}}</td>\r\n                        <td style=\"text-align: center;\">{{ user.email }}</td>\r\n\r\n\r\n                        <td>\r\n                            <div class=\"div-table-actions\">\r\n                                <button *ngIf=\"canUpdate()\" (click)=\"openModal(editUserModal, user)\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit\" type=\"button\"><span class=\"btn-label m-r-5\"><i class=\"mdi mdi-eye-outline\"></i></span>Editar</button>\r\n                                <button *ngIf=\"canEditPass()\" ngbTooltip=\"Cambio de contraseña\" (click)=\"changePwd(user.user_id,modalChangePassword)\" class=\"btn   btn-color-solucredit\" type=\"button\"><span class=\"btn-label m-r-5\"><i class=\" icon-lock\"></i></span>Editar Contraseña</button>\r\n                                <button [disabled]=\"getCurrentuser() == user.email\" *ngIf=\"canDelete()\" ngbTooltip=\"Eliminar\" (click)=\"deleteUserModal(user.user_id)\" class=\"btn btn-danger waves-effect waves-light\" type=\"button\"><span class=\"btn-label m-r-5\"><i class=\"mdi mdi-delete\"></i></span>Eliminar</button>\r\n\r\n                            </div>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <ngb-pagination [collectionSize]=\"this.usersTotal\" [pageSize]=\"pageSize\" [(page)]=\"page\" aria-label=\"Default pagination\" (pageChange)=\"pageChange($event)\"></ngb-pagination>\r\n        </div>\r\n        <!-- <div class=\"d-flex justify-content-center mt-5\">\r\n                <ngb-pagination [(page)]=\"page\" [pageSize]=\"pageSize\" [collectionSize]=\"userList.length\"></ngb-pagination>\r\n            </div> -->\r\n    </div>\r\n</div>\r\n<notifier-container></notifier-container>\r\n\r\n<ng-template #createUserModal let-modal>\r\n\r\n    <div class=\"modal-header\">\r\n\r\n        <h3 class=\"modal-title\" id=\"editUserLabel\">Crea un nuevo usuario</h3>\r\n\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n        <!-- Navbar for Wizard Starts -->\r\n        <ul class=\"wizard-navbar\">\r\n            <div class=\"liner\"></div>\r\n\r\n            <li class=\"active flex-fill\">\r\n                <a [ngClass]=\"(pageName==='Personal')?'nav-link active':'nav-link'\" uiSrefActive=\"active\" uiSref=\"personal\" data-toggle=\"tab\" title=\"personal\">\r\n                    <span class=\"round-tabs one\">\r\n                    <i class=\"icon-user\"></i>\r\n                </span>\r\n                </a>\r\n            </li>\r\n            <li class=\"flex-fill\">\r\n                <a [ngClass]=\"(pageName==='Rol')?'nav-link active':'nav-link'\" uiSrefActive=\"active\" uiSref=\"work\" data-toggle=\"tab\" title=\"work\">\r\n                    <span class=\"round-tabs two\">\r\n                    <i class=\"icon-notebook\"></i>\r\n                </span>\r\n                </a>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n        <div [ngSwitch]=\"pageName\">\r\n            <div *ngSwitchCase=\"'Personal'\">\r\n                <form class=\"form-horizontal\" [formGroup]=\"newUserForm\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Información Requerida</h4>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"fname\" class=\"col-sm-3 text-right control-label col-form-label\">Nombres: </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input formControlName=\"FirstName\" type=\"text\" class=\"form-control\" id=\"fname\" placeholder=\"Nombres del Nuevo Usuario\">\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.FirstName.valid && (newUserForm.controls.FirstName.dirty || newUserForm.controls.FirstName.touched)\">Ingresa los nombre</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"lname\" class=\"col-sm-3 text-right control-label col-form-label\">Apellidos: </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input formControlName=\"LastName\" type=\"text\" class=\"form-control\" id=\"lname\" placeholder=\"Apellidos del Nuevo Usuario\">\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.LastName.valid && (newUserForm.controls.LastName.dirty || newUserForm.controls.LastName.touched)\">Ingresa los apellidos</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"email1\" class=\"col-sm-3 text-right control-label col-form-label\">Correo: </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input (focus)=\"emailFocus()\" formControlName=\"Email\" type=\"email\" class=\"form-control\" id=\"email1\" placeholder=\"Correo Electrónico\">\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.Email.valid && (newUserForm.controls.Email.dirty || newUserForm.controls.Email.touched)\">Ingresa un correo valido</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"cono1\" class=\"col-sm-3 text-right control-label col-form-label\">Género: </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <ng-multiselect-dropdown formControlName=\"Gen\" placeholder=\"Selecciona\" name=\"genero\" [data]=\"generos\" [settings]=\"singledropdownSettings\" (onSelect)=\"onItemSelect($event)\">\r\n\r\n                                </ng-multiselect-dropdown>\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.Gen.valid && (newUserForm.controls.Gen.dirty || newUserForm.controls.Gen.touched)\">Selecciona un género</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Información Opcional</h4>\r\n                        <details class=\"default square\">\r\n                            <summary><span class=\"open\">Ver más</span><span class=\"close\"></span></summary>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"com1\" class=\"col-sm-3 text-right control-label col-form-label\">Teléfono</label>\r\n                                <div class=\"col-sm-9\">\r\n                                    <input formControlName=\"Phone\" type=\"text\" class=\"form-control\" id=\"com1\" placeholder=\"celular\">\r\n                                </div>\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.Phone.valid && (newUserForm.controls.Phone.dirty || newUserForm.controls.Phone.touched)\">Ingresa un telefono valido</small>\r\n                            </div>\r\n                            <!-- <div class=\"form-group row\">\r\n                                <label for=\"com1\" class=\"col-sm-3 text-right control-label col-form-label\">Telefono casa</label>\r\n                                <div class=\"col-sm-9\">\r\n                                    <input type=\"text\" class=\"form-control\" id=\"com1\" placeholder=\"Numero casa\">\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"com1\" class=\"col-sm-3 text-right control-label col-form-label\">Dirección Residencia</label>\r\n                                <div class=\"col-sm-9\">\r\n                                    <input formControlName=\"Address\" type=\"text\" class=\"form-control\" id=\"com1\" placeholder=\"dirección residencia\">\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </details>\r\n\r\n\r\n\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"card-body\">\r\n                        <small class=\"form-text text-danger\" *ngIf=\"!isEmailUnique && isEmailInputFocus\">El correo ya esta registrado</small>\r\n                        <div class=\"form-group m-b-0 text-right\">\r\n\r\n                            <button class=\"btn btn-raised mr-1 text-white btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n                            <button class=\"btn btn-raised mr-1 text-white btn-color-solucredit\" (click)=\"siguiente()\" [disabled]=\"isCorrect()\">Siguiente</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div *ngSwitchCase=\"'Rol'\">\r\n                <form [formGroup]=\"newUserForm2\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Agrega roles al nuevo usuario</h4>\r\n                        <!-- <div class=\"alert alert-info alert-dismissible fade show m-t-25\" role=\"alert\">\r\n                            <span class=\"badge badge-info\">\r\n                            <i class=\"fas fa-info\"></i>\r\n                        </span>\r\n                            <strong>Form Action at mulitple space top,bottom and left,right.</strong>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                        </div> -->\r\n                        <h6 class=\"card-subtitle\">Los roles tienen definidos las acciones que los usuarios pueden realizar en la plataforma.\r\n                            <code>Para mas información ir a la seccion de roles</code>\r\n                        </h6>\r\n\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row m-auto\">\r\n                            <div class=\"col-12\">\r\n\r\n\r\n                                <label for=\"fname3\" class=\"control-label col-form-label\">Roles disponibles</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Rols\" [settings]=\"multidropdownSettings\" placeholder=\"Selecciona\" name=\"roles\" [data]=\"rolesitems\" (onSelect)=\"onItemSelect($event)\">\r\n\r\n                                </ng-multiselect-dropdown>\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"d-flex no-block align-items-center\">\r\n                                <div class=\"action-form\">\r\n                                    <div class=\"form-group m-b-0 text-center\">\r\n                                        <button (click)=\"atras()\" type=\"submit\" class=\"btn btn-raised mr-1 text-white btn-color-solucredit-secondary\">Atras</button>\r\n                                        <button (click)=\"onSubmit()\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit\">Crear usuario</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</ng-template>\r\n<ng-template #editUserModal let-modal>\r\n\r\n    <div class=\"modal-header\">\r\n\r\n        <h4 class=\"modal-title\" id=\"editUserLabel\">Edición de Usuario</h4>\r\n\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n        <form class=\"form-horizontal\" [formGroup]=\"editUser\">\r\n            <div class=\"form-group row col-md-12\">\r\n                <div class=\"col-md-2\">\r\n                    <label for=\"fname\" class=\"text-center control-label col-form-label\">Nombres: </label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <input formControlName=\"FirstName\" type=\"text\" class=\"form-control\" id=\"fname\" placeholder=\"nombres del nuevo usuario\" [disabled]=\"!isEditing\">\r\n                    <small class=\"form-text text-danger\" *ngIf=\"!editUser.controls.FirstName.valid && (editUser.controls.FirstName.dirty || editUser.controls.FirstName.touched)\">Ingresa un Nombre</small>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <label for=\"lname\" class=\"col-lg-12 text-center control-label col-form-label\">Apellidos: </label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <input formControlName=\"LastName\" type=\"text\" class=\"form-control\" id=\"lname\" placeholder=\"apellidos del nuevo usuario\" [disabled]=\"!isEditing\">\r\n                    <small class=\"form-text text-danger\" *ngIf=\"!editUser.controls.LastName.valid && (editUser.controls.LastName.dirty || editUser.controls.LastName.touched)\">Ingresa los Apellidos</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row col-md-12\">\r\n                <div class=\"col-md-2\">\r\n                    <label for=\"email1\" class=\"col-lg-12 text-center control-label col-form-label\">Correo: </label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <input formControlName=\"Email\" type=\"email\" class=\"form-control\" id=\"email1\" placeholder=\"correo\">\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <label for=\"cono1\" class=\"col-lg-12 text-center control-label col-form-label\">Género: </label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                     <div *ngIf=\"!isEditing\" class=\"col-lg-12\">\r\n                        <input formControlName=\"GenFalso\" type=\"email\" class=\"form-control\" id=\"email1\" placeholder=\"genero\" [disabled]=\"!isEditing\">\r\n                    </div>\r\n                    <div *ngIf=\"isEditing\" class=\"col-lg-12\">\r\n                        <ng-multiselect-dropdown formControlName=\"Gen\" placeholder=\"Escoge un Género\" name=\"genero\" [data]=\"generos\" [(ngModel)]=\"singleselectedItems\" [settings]=\"singledropdownSettings\" (onSelect)=\"onItemSelect($event)\">\r\n\r\n                        </ng-multiselect-dropdown>\r\n                        <small class=\"form-text text-danger\" *ngIf=\"!editUser.controls.Gen.valid && (editUser.controls.Gen.dirty || editUser.controls.Gen.touched)\">Selecciona un Género</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n        <div class=\"card-body div-con-flex-col\">\r\n            <h4>Roles</h4>\r\n            <app-spinner *ngIf=\"isLoadingInEdition\"></app-spinner>\r\n            <div *ngIf=\"!isEditing && !isLoadingInEdition\" class=\"col-sm-9\">\r\n                <div *ngFor=\"let rol of rolesactuales\" class=\"card card-roles \">\r\n\r\n                    <div class=\"card-body card\" style=\"text-align: center;\">\r\n                        <h4 class=\"card-text\">{{rol.name}}</h4>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div *ngIf=\"isEditing\" class=\"col-sm-9\">\r\n                <h4 *ngIf=\"isCalculatingRoles\">.....CARGANDO....</h4>\r\n\r\n                <div  *ngFor=\"let rol of rolesModificados; let i=index\">\r\n                    <label>\r\n                        <!-- <input type=\"checkbox\" [(ngModel)]=\"rol.value\" (change)=\"onCheckChange($event)\"> -->\r\n                        <input type=\"checkbox\" [checked]= \"rol.value\" [value]=\"rol.rol.rol_id\" (change)=\"onCheckChange($event)\">\r\n                            {{rol.rol.name}}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"div-con-flex\">\r\n                <button [ngClass]=\"isEditing === true?'btn-hide':'btn-show'\" type=\"submit\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit\" (click)=\"startMod()\">Modificar</button>\r\n                <button [ngClass]=\"isEditing === false?'btn-hide':'btn-show'\" type=\"submit\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit\" (click)=\"saveUserChanges()\">Guardar Cambios</button>\r\n                <button [ngClass]=\"isEditing === false?'btn-hide':'btn-show'\" type=\"submit\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #modalDelete let-modal>\r\n\r\n    <div class=\"modal-header border-bottom-0\">\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeBtnClick()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n        <ng-container [ngSwitch]=\"IdUsertoDelete\">\r\n            <ng-container *ngSwitchCase=\"null\">\r\n                <h6>Cargando</h6>\r\n            </ng-container>\r\n            <ng-container *ngSwitchDefault>\r\n                <div class=\"row mb-2\">\r\n                    <div class=\"col-12\">\r\n                        <h4 class=\"ml-4\">¿Esta seguro de eliminar este registro?</h4>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"modal-footer border-top-0\">\r\n        <button type=\"button\" (click)=\"deleteUser()\" class=\"btn btn-danger mr-1 text-white\">Confirmar</button>\r\n        <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #modalChangePassword let-modal>\r\n\r\n    <div class=\"modal-header border-bottom-0\">\r\n        <h4 class=\"modal-title\">Cambiar contraseña</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeBtnClick()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n        <form class=\"form-horizontal\" [formGroup]=\"editPassword\">\r\n            <div class=\"form-group row\">\r\n                <label for=\"fname\" class=\"col-sm-3 text-right control-label col-form-label\">Nueva Contraseña:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <div class=\"input-group col-sm-12\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                <i class=\"fas fa-lock\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input formControlName=\"newPassword\" class=\"form-control\" id=\"realnew\" placeholder=\"nueva contraseña\" type=\"password\" autocomplete=\"current-password\"\r\n                        (keyup)=\"validate_auth0.checkPasswordRules($event.target.value)\"\r\n                        >\r\n                    </div>\r\n                    <small class=\"form-text text-danger\" *ngIf=\"!editPassword.controls.newPassword.valid && (editPassword.controls.newPassword.dirty || editPassword.controls.newPassword.touched)\">Ingresa una contraseña.</small>\r\n                    <div class=\"progress col-sm-12 mt-2\">\r\n                        <div id=\"password-strength\" class=\"progress-bar\"\r\n                            role=\"progressbar\" aria-valuenow=\"40\"\r\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                            [style]=\"validate_auth0.getProgress()\"\r\n                        >\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row col-sm-12 mt-2\" style=\"justify-content:flex-end; \">\r\n                        <label for=\"fname\" class=\"control-label\" [style]=\"validate_auth0.getProgress(true)\">{{validate_auth0.statusProgressBar}}</label>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <label for=\"lname\" class=\"col-sm-3 text-right control-label col-form-label\">Confirmar contraseña:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <div class=\"input-group col-sm-12\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                <i class=\"fa fa-lock\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input formControlName=\"confirm\" class=\"form-control\" id=\"fconfirm\" placeholder=\"confirmar nueva contraseña\" type=\"password\">\r\n                    </div>\r\n                    <small class=\"form-text text-danger\" *ngIf=\"editPassword.controls.confirm.value != editPassword.controls.newPassword.value && !editPassword.controls.confirm.valid && (editPassword.controls.confirm.dirty || editPassword.controls.confirm.touched)\">Las contraseñas no coinciden.</small>\r\n                    <ul class=\"list-unstyled mt-5\">\r\n                        <li *ngFor=\"let item of validate_auth0.checkrules\">\r\n                            <span class=\"lower-upper-case\">\r\n                                <div style=\"font-size: 1rem;\">\r\n                                    <i  [ngClass]=\"item.status?'fas icon-check':'fas icon-close'\" [style]=\"item.status?'color:green;':'color: red;'\" aria-hidden=\"true\"></i>\r\n                                    {{item.rule}}\r\n                                </div>\r\n                            </span>\r\n                        </li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n\r\n    <div class=\"modal-footer border-top-0\">\r\n        <button [disabled]=\"!editPassword.valid || (validate_auth0.getRulesCorrect()==false)\" type=\"button\" (click)=\"changePassword()\" class=\"btn btn btn-info ml-auto h-25 btn-color-solucredit\">Cambiar</button>\r\n        <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\n\r\nimport { CommonModule,DatePipe } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserService } from './servicio/user.service';\r\nimport { UserComponent } from './user.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport {MultiselectComponent} from './multiselect/multiselect.component'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { NotifierModule} from 'angular-notifier';\r\nimport { PipesModule } from '../../pipes/pipes.module'\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { SharedModule } from '../../shared/shared.module'\r\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Usuarios',\r\n      urls: [\r\n        { title: 'Usuarios', url: '/usuarios' },\r\n        { title: 'Lista de usuarios' }\r\n      ]\r\n    },\r\n    component: UserComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [UserComponent,MultiselectComponent,SpinnerComponent],\r\n  imports: [NgxSpinnerModule, PipesModule, NotifierModule, FormsModule, ReactiveFormsModule, NgMultiSelectDropDownModule, NgbModule, SharedModule ,CommonModule, RouterModule.forChild(routes)],\r\n  exports: [NgMultiSelectDropDownModule,PipesModule],\r\n  providers: [\r\n    UserService,\r\n    DatePipe,\r\n\r\n  ]\r\n\r\n\r\n})\r\nexport class UserModule { }\r\n"]}