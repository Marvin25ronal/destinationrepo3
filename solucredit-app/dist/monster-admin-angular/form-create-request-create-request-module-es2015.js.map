{"version":3,"sources":["./src/app/form/create-request/create-request.component.ts","./src/app/form/create-request/create-request.component.html","./src/app/form/create-request/create-request.module.ts"],"names":[],"mappings":"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","file":"form-create-request-create-request-module-es2015.js","sourcesContent":["import { AfterViewInit, Component } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { isNitValid } from \"src/app/Validators/NitValidator\";\r\nimport { MysqlService } from \"../../services/mysql/mysql.service\";\r\n\r\n@Component({\r\n  selector: \"app-create-request\",\r\n  templateUrl: \"./create-request.component.html\",\r\n  styleUrls: [\"./create-request.component.css\"],\r\n})\r\nexport class CreateRequestComponent implements AfterViewInit {\r\n  optionsCountries = [];\r\n  optionsDepartments = [];\r\n  optionsMunicipalities = [];\r\n  optionsTypeRequest = [];\r\n  optionsCategories = [];\r\n  selecionCountry: string[] = [];\r\n  selecionDepartment: string[] = [];\r\n  selecionMunicipality: string[] = [];\r\n  dataCurrentCustomer = [];\r\n  user_id;\r\n  dataCurrentuser;\r\n  user_solucredit;\r\n  localUrl: any[];\r\n  filelogo;\r\n  constructor(\r\n    private mysqlService: MysqlService,\r\n    private toastr: ToastrService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService\r\n  ) { }\r\n\r\n  createRequest = new FormGroup({\r\n    name: new FormControl(null, [Validators.required]),\r\n    nit: new FormControl(null, [Validators.required,\r\n      isNitValid\r\n    ]),\r\n    address1: new FormControl(null, [Validators.required]),\r\n    address2: new FormControl(null, []),\r\n    phone: new FormControl(null, [\r\n      Validators.required,\r\n      Validators.pattern(\"(^[0-9]{8})|(^[+][0-9]{11}$)\"),\r\n    ]),\r\n    email: new FormControl(null, [Validators.required, Validators.email]),\r\n    municipality_id: new FormControl(\"\", [Validators.required]),\r\n    type: new FormControl(\"\", [Validators.required]),\r\n    inputPais: new FormControl(\"\", [Validators.required]),\r\n    inputDepartamento: new FormControl(\"\", [Validators.required]),\r\n    inputTipoSolicitud: new FormControl(\"\", [Validators.required]),\r\n  });\r\n\r\n  getDataCurrentCustomer() {\r\n\r\n    this.mysqlService.GetOneCustomer(this.user_id).subscribe(\r\n      (response) => {\r\n        this.dataCurrentCustomer = response.data.customer;\r\n        this.createRequest.patchValue({\r\n          name: response.data.customer.name,\r\n          nit: response.data.customer.nit,\r\n          address1: response.data.customer.address1,\r\n          address2: response.data.customer.address2,\r\n          type: response.data.customer.type,\r\n          phone: response.data.customer.phone,\r\n          email: response.data.customer.email,\r\n        });\r\n        this.localUrl = response.data.customer.logotipo;\r\n        this.selecionMunicipality = response.data.customer.municipality_id;\r\n        this.loadDataTerritorial(this.selecionMunicipality);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async getCountries() {\r\n    const res = this.mysqlService\r\n      .GetCountries()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsCountries = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  async getDepartments() {\r\n    const res = this.mysqlService\r\n      .GetDepartments()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsDepartments = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  async getTypeRequest() {\r\n    const res = this.mysqlService\r\n      .GetTypeRequest()\r\n      .toPromise()\r\n      .then((response) => {\r\n        console.log('rest', response);\r\n        this.optionsTypeRequest = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  async getMunicipalities() {\r\n    const res = this.mysqlService\r\n      .GetMunicipalities()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsMunicipalities = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  async getCategories() {\r\n    const res = this.mysqlService\r\n      .GetAllCustomerCategories()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsCategories = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  onCountrySelected(value: string) {\r\n    this.selecionDepartment = [];\r\n    this.selecionMunicipality = [];\r\n  }\r\n  onDepartmentSelected(value: string) {\r\n    this.selecionMunicipality = [];\r\n  }\r\n\r\n  async loadDataTerritorial(data) {\r\n    let cont = 0;\r\n    switch (cont) {\r\n      case 0: {\r\n        Object.entries(this.optionsMunicipalities).forEach(([key, value]) => {\r\n          if (value.municipality_id === data) {\r\n            this.selecionDepartment = value.department_id;\r\n            return false;\r\n          }\r\n        });\r\n        cont = 1;\r\n      }\r\n      // tslint:disable-next-line: no-switch-case-fall-through\r\n      case 1: {\r\n        Object.entries(this.optionsDepartments).forEach(([key, value]) => {\r\n          if (value.department_id === this.selecionDepartment) {\r\n            this.selecionCountry = value.country_id;\r\n            return false;\r\n          }\r\n        });\r\n        this.spinner.hide();\r\n        cont = 2;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  BackCustomer() {\r\n    if (this.activatedRoute.snapshot.url.length > 0) {\r\n      if (\r\n        this.activatedRoute.snapshot.url[0].path !== undefined &&\r\n        this.activatedRoute.snapshot.url[0].path === \"cliente\"\r\n      ) {\r\n        this.router.navigate([`/list-customer`]);\r\n      }\r\n    } else {\r\n      this.router.navigate([`/customer`]);\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line: use-lifecycle-interface\r\n  async ngOnInit() {\r\n    this.spinner.show();\r\n    this.createRequest.get(\"name\").disable();\r\n    this.createRequest.get(\"nit\").disable();\r\n    this.createRequest.get(\"address1\").disable();\r\n    this.createRequest.get(\"address2\").disable();\r\n    this.createRequest.get(\"phone\").disable();\r\n    this.createRequest.get(\"email\").disable();\r\n    this.createRequest.get(\"municipality_id\").disable();\r\n    this.createRequest.get(\"type\").disable();\r\n    this.createRequest.get(\"inputPais\").disable();\r\n    this.createRequest.get(\"inputDepartamento\").disable();\r\n\r\n    if (this.activatedRoute.snapshot.url.length > 0) {\r\n      if (\r\n        this.activatedRoute.snapshot.url[0].path !== undefined &&\r\n        this.activatedRoute.snapshot.url[0].path === \"cliente\"\r\n      ) {\r\n        this.user_solucredit = false;\r\n        this.user_id = this.activatedRoute.snapshot.params.id;\r\n      }\r\n    } else {\r\n      this.user_solucredit = true;\r\n      this.dataCurrentuser = JSON.parse(localStorage.getItem(\"Usuario\"));\r\n      this.user_id = this.dataCurrentuser.customer_id;\r\n    }\r\n    await this.getMunicipalities();\r\n    await this.getDepartments();\r\n    await this.getCountries();\r\n    await this.getDataCurrentCustomer();\r\n    await this.getCategories();\r\n    await this.getTypeRequest();\r\n  }\r\n\r\n  async CreateRequest() {\r\n    const myDate = new Date();\r\n    const body = {\r\n      customer_id: this.user_id,\r\n      documents: 0,\r\n      verifications: 0,\r\n      warranties: 0,\r\n      status: 0,\r\n      type: this.createRequest.value.inputTipoSolicitud,\r\n      create_date: myDate,\r\n    };\r\n    await this.mysqlService\r\n      .CreateCustomerRequest(body)\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.toastr.success(\r\n          \"La solicitud fue creada con éxito.\",\r\n          \"Solicitud Creada!\"\r\n        );\r\n        this.router.navigate([`/list-customer`]);\r\n        console.log('response', response);\r\n      })\r\n      .catch((error) => {\r\n        this.toastr.error(\r\n          \"La información fue guardada con exito.\",\r\n          \"Opss!\"\r\n        );\r\n        console.log(\"error\", error);\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void { }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header \" style=\"background-color: #3473da;\">\r\n                <h4 class=\"card-title mb-0 text-white\">Crear una nueva solicitud al cliente </h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n                    <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n                </ngx-spinner>\r\n                <div class=\"card-block\">\r\n                    <form [formGroup]=\"createRequest\" class=\"form-horizontal\" (ngSubmit)=\"CreateRequest()\">\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"name\" class=\"col-sm-12\">Nombre Completo</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\"far fa-user\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"text\" class=\"form-control\" aria-label=\"Username\" id=\"name\"\r\n                                                formControlName=\"name\" required\r\n                                                placeholder=\"Ej. Roberto Elias Peres Ramirez\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('name').valid && (createRequest.get('name').dirty || createRequest.get('name').touched)\">El\r\n                                            nombre es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"nit\" class=\"col-sm-12\">Nit</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\"far fa-address-card\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"number\" class=\"form-control\" id=\"nit\" maxlength=\"13\"  formControlName=\"nit\"\r\n                                                required placeholder=\"Ej. 12345678\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('nit').valid && (createRequest.get('nit').dirty || createRequest.get('nit').touched)\">El\r\n                                            nit es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"address1\" class=\"col-sm-12\">Dirección 1</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\" far fa-address-book\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"address1\"\r\n                                                formControlName=\"address1\" required\r\n                                                placeholder=\"Ej. 8va. calle 35-40 zona 4\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('address1').valid && (createRequest.get('address1').dirty || createRequest.get('address1').touched)\">La\r\n                                            dirección es requerida.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"address2\" class=\"col-sm-12\">Dirección 2</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\" far fa-address-book\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"address2\"\r\n                                                formControlName=\"address2\" placeholder=\"Ej. Ciudad Vieja, Guatemala\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('address2').valid && (createRequest.get('address2').dirty || createRequest.get('address2').touched)\">La\r\n                                            dirección es requerida.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"phone\" class=\"col-sm-12\">Número de celular</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\"fas fa-mobile-alt\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"number\" class=\"form-control\" id=\"phone\" formControlName=\"phone\"\r\n                                                required placeholder=\"Ej. 45826578\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('phone').valid && (createRequest.get('phone').dirty || createRequest.get('phone').touched)\">El\r\n                                            número de celular es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"email\" class=\"col-sm-12\">Correo electrónico</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\"fas fa-envelope\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"\r\n                                                required placeholder=\"Ej. email@email.com\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('email').valid && (createRequest.get('email').dirty || createRequest.get('email').touched)\">Ingresar\r\n                                            un correo electrónico válido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <label for=\"type\" class=\"col-sm-12\">Seleccionar Tipo de Negocio</label>\r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label\r\n                                                    _ngcontent-bpb-c164=\"\" for=\"inputGroupSelect01\"\r\n                                                    class=\"input-group-text\"><i class=\"far fa-building\"></i></label>\r\n                                            </div>\r\n                                            <select class=\"custom-select col-sm-12\" id=\"type\" formControlName=\"type\">\r\n                                                <option value=\"\" selected disabled>Selecionar...</option>\r\n                                                <option value=\"0\">Individual</option>\r\n                                                <option value=\"1\">Jurídico</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('type').valid && (createRequest.get('type').dirty || createRequest.get('type').touched)\">Seleccione\r\n                                            un tipo de negocio valido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"inputPais\" class=\"col-sm-12\">Seleccionar país</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label\r\n                                                    _ngcontent-bpb-c164=\"\" for=\"inputGroupSelect01\"\r\n                                                    class=\"input-group-text\"><i class=\"far fa-id-card\"></i></label>\r\n                                            </div>\r\n                                            <select #mySelect class=\"custom-select col-sm-12\" id=\"inputPais\"\r\n                                                formControlName=\"inputPais\" [(ngModel)]=\"selecionCountry\"\r\n                                               >\r\n                                                <option value=\"\" selected disabled>Seleccionar...</option>\r\n                                                <option *ngFor=\"let order of optionsCountries; let i = index\"\r\n                                                   [value]=\"order.country_id\">{{order.name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('inputPais').valid && (createRequest.get('inputPais').dirty || createRequest.get('inputPais').touched)\">El\r\n                                            país es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"inputDepartamento\" class=\"col-sm-12\">Seleccionar\r\n                                            departamento</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label\r\n                                                    _ngcontent-bpb-c164=\"\" for=\"inputGroupSelect01\"\r\n                                                    class=\"input-group-text\"><i class=\"far fa-id-card\"></i></label>\r\n                                            </div>\r\n                                            <select #mySelectDepartment class=\"custom-select col-sm-12\"\r\n                                                id=\"inputDepartamento\" formControlName=\"inputDepartamento\"\r\n                                                [(ngModel)]=\"selecionDepartment\"\r\n                                                (change)='onDepartmentSelected(mySelectDepartment.value)'>\r\n                                                <option value=\"\" selected disabled>Selecionar...</option>\r\n                                                <ng-container *ngFor=\"let order of optionsDepartments; let i = index\">\r\n                                                    <option *ngIf=\"selecionCountry==order.country_id\" [value]=\"order.department_id\">\r\n                                                        {{order.name}}</option>\r\n                                                </ng-container>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('inputDepartamento').valid && (createRequest.get('inputDepartamento').dirty || createRequest.get('inputDepartamento').touched)\">El\r\n                                            departamento es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"municipality_id\" class=\"col-sm-12\">Seleccionar Municipio</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label\r\n                                                    _ngcontent-bpb-c164=\"\" for=\"inputGroupSelect01\"\r\n                                                    class=\"input-group-text\"><i class=\"far fa-id-card\"></i></label>\r\n                                            </div>\r\n                                            <select class=\"custom-select col-sm-12\" id=\"municipality_id\"\r\n                                                formControlName=\"municipality_id\" [(ngModel)]=\"selecionMunicipality\">\r\n                                                <option value=\"\" selected disabled>Selecionar...</option>\r\n                                                <ng-container\r\n                                                    *ngFor=\"let order of optionsMunicipalities; let i = index\">\r\n                                                    <option *ngIf=\"selecionDepartment==order.department_id\" [value]=\"order.municipality_id\">\r\n                                                        {{order.name}}</option>\r\n                                                </ng-container>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger  col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('municipality_id').valid && (createRequest.get('municipality_id').dirty || createRequest.get('municipality_id').touched)\">El\r\n                                            municipio es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"inputTipoSolicitud\" class=\"col-sm-12\">Tipo de solicitud</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label _ngcontent-bpb-c164=\"\"\r\n                                                    for=\"inputGroupSelect01\" class=\"input-group-text\"><i class=\"far fa-id-card\"></i></label>\r\n                                            </div>\r\n                                            <select class=\"custom-select col-sm-12\" id=\"inputTipoSolicitud\" formControlName=\"inputTipoSolicitud\">\r\n                                                <option value=\"\" selected disabled>Seleccionar...</option>\r\n                                                <option *ngFor=\"let order of optionsTypeRequest; let i = index\" [value]=\"order.type_id\">\r\n                                                    {{order.name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('inputTipoSolicitud').valid && (createRequest.get('inputTipoSolicitud').dirty || createRequest.get('inputTipoSolicitud').touched)\">El\r\n                                            El tipo de solicitud es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"form-group m-b-0 text-left\">\r\n                                <button type=\"submit\" class=\"btn btn-raised mr-1 text-white\"\r\n                                    style=\"background-color: #3473da;\"\r\n                                    [disabled]=\"!createRequest.valid\">Crear Solicitud</button>\r\n                                <button (click)=\"BackCustomer()\" class=\"btn btn-gray waves-effect waves-light\">Regresar</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Reactive Form Validaton Ends -->","import { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CreateRequestComponent } from \"./create-request.component\";\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"cliente/:id\",\r\n    data: {\r\n      title: \"Crear una nueva solicitud\",\r\n      urls: [\r\n        { title: \"Listado de Clientes\", url: \"/list-customer\" },\r\n        { title: \"Datos de cliente\" },\r\n      ],\r\n    },\r\n    component: CreateRequestComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [CreateRequestComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class DashboardModule {}\r\n"],"sourceRoot":"webpack:///"}