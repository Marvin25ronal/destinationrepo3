{"version":3,"sources":["webpack:///src/app/pages/list-customer/list-customer.component.html","webpack:///src/app/pages/list-customer/list-customer.component.ts","webpack:///src/app/pages/list-customer/list-customer.module.ts"],"names":["ListCustomerComponent","mysqlService","toastr","router","spinner","autorization","page","pageSize","search","q","show","selectUser","GetListCustomer","getCategories","resource","havePermission","GetAllCustomer","toPromise","then","response","allData","data","customer","dataAllCustomer","dataCountRequest","count","hide","tempdata","totalData","error","getList","controls","value","e","id","navigate","v","console","log","filter","x","name","toLowerCase","indexOf","Number","res","GetAllCustomerCategories","optionsCategories","selectcategory","deviceValue","filtertest","_searchTerm","val","searchTermM","onChangeCategory","selector","templateUrl","styleUrls","routes","path","title","urls","url","component","DashboardModule","forChild","imports","declarations","schemas"],"mappings":"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","file":"pages-list-customer-list-customer-module-es5.js","sourcesContent":["<div class=\"col-12\">\r\n    <div class=\"card card-body\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">Cargando Informaci√≥n...</p>\r\n        </ngx-spinner>\r\n        <div class=\"d-flex mb-3 mt-3\">\r\n            <form class=\"m-t-20\" [formGroup]=\"search\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-lg-6\">\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"input-group col-sm-12\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                        <i class=\"ti-search\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <input formControlName=\"q\" class=\"form-control\" placeholder=\"Buscar Cliente\" type=\"text\"\r\n                                    (change)=\"searchTermM()\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-lg-6\">\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"input-group col-sm-12\">\r\n                                <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label _ngcontent-bpb-c164=\"\"\r\n                                        for=\"inputGroupSelect01\" class=\"input-group-text\"><i\r\n                                            class=\"far fa-id-card\"></i></label></div>\r\n                                <select class=\"custom-select col-sm-12\" id=\"category\" name=\"category\"\r\n                                    [(ngModel)]=\"selectcategory\" (change)=\"onChangeCategory($event.target.value)\"\r\n                                    [ngModelOptions]=\"{standalone: true}\">\r\n                                    <option value=\"\" selected disabled>Selecionar Categor√≠a</option>\r\n                                    <option value=\"0\">Todos</option>\r\n                                    <option *ngFor=\"let order of optionsCategories\" [value]=\"order.category_id\">\r\n                                        {{order.name}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <button *ngIf=\"canCreate()\" (click)=\"NewCustomer()\"\r\n                class=\"btn btn ml-auto h-25 text-white custom_btn1\">Nuevo prospecto</button>\r\n        </div>\r\n        <div *ngIf=\"canList()\" class=\"table-responsive table-hover\">\r\n            <table class=\"table table-responsive-lg no-wrap v-middle\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\" class=\"text-center\">Tipo de Cliente</th>\r\n                        <th scope=\"col\" class=\"text-center\">Nombre Completo</th>\r\n                        <!--<th scope=\"col\" width=\"160px\">NIT</th>-->\r\n                        <th scope=\"col\" class=\"text-center\">Direcci√≥n</th>\r\n                        <th scope=\"col\" class=\"text-center\">Categor√≠a</th>\r\n                       \r\n                        <!-- <th scope=\"col\" class=\"text-center\">No. de Solicitudes</th> -->\r\n                        <th scope=\"col\" class=\"text-center\">Acciones</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr\r\n                        *ngFor=\"let user of dataAllCustomer\">\r\n                         <!--TIPO DE CLIENTE-->\r\n                         <td *ngIf=\"user.type === 0\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Individual\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.type === 1\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Jur√≠dico\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <!--NOMBRE COMPLETO-->\r\n                        <td width=\"250px\">\r\n                            <div>\r\n                                <ngb-highlight *ngIf=\"user.type === 0\"\r\n                                    [result]=\"user.name\"\r\n                                    [term]=\"searchTerm\"></ngb-highlight>\r\n                                <ngb-highlight *ngIf=\"user.type === 1\" [result]=\"user.businessname\" [term]=\"searchTerm\">\r\n                                </ngb-highlight>\r\n                            </div>\r\n\r\n                        </td>\r\n                        <!-- <td>\r\n                            <ngb-highlight [result]=\"user.nit\" [term]=\"searchTerm\"></ngb-highlight>\r\n                        </td>-->\r\n                        <!--DIRECCI√ìN-->\r\n                        <td>\r\n\r\n                            <div>\r\n                                <div class=\"text-left\">\r\n                                    <ngb-highlight [result]=\"(user.address1 === null ? 'No Registrada' : user.address1)\"\r\n                                        ngbTooltip=\"Direcci√≥n 1\" [term]=\"searchTerm\"></ngb-highlight>\r\n                                </div>\r\n                                <div class=\"text-left\">\r\n                                    <ngb-highlight [result]=\"user.address2\" ngbTooltip=\"Direcci√≥n 2\"></ngb-highlight>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <!--CATEGORIA-->\r\n                        <td *ngIf=\"user.category_id === 1\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Prospecto\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.category_id === 2\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"VIP\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.category_id === 3\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Tradicional\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.category_id === 4\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Otros\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.category_id === 5\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Cliente Tradicional\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                       \r\n                        <!--NO DE SOLICITUDES-->\r\n                        <!-- <td class=\"text-center\">\r\n                            <ngb-highlight [result]=\"dataCountRequest[user.customer_id]\"></ngb-highlight>\r\n                        </td> -->\r\n                        <!--BOTONES-->\r\n                        <td style=\"margin:auto;\">\r\n                            <div class=\"text-center\">\r\n                                <button *ngIf=\"canSee()\" class=\"btn text-white custom_btn1 text-center\" type=\"button\"\r\n                                    (click)=\"ViewCliente(user.customer_id)\"><span class=\"btn-label m-r-5\"><i\r\n                                            class=\"mdi mdi-eye-outline\"></i></span>Ver</button>\r\n                                <!-- <button *ngIf=\"canAddRepresentative()\" class=\"btn text-white custom_btn1\" type=\"button\" (click)=\"addnewPerson(user.customer_id)\"><i\r\n                                                        class=\"fas fa-user-plus text-white m-r-10\"></i> Agregar un nuevo\r\n                                                    representante.</button> -->\r\n                                <button *ngIf=\"canEdit()\" class=\"btn text-white custom_btn1\"\r\n                                    (click)=\"EditCliente(user.customer_id)\" type=\"button\"><span\r\n                                        class=\"btn-label m-r-5\"><i class=\" icon-pencil\"></i></span>Editar</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"d-flex justify-content-center p-2\">\r\n                <ngb-pagination *ngIf=\"dataAllCustomer\" [maxSize]=\"7\" [collectionSize]=\"this.totalData\"\r\n                    [(page)]=\"page\" [pageSize]=\"pageSize\"\r\n                    (pageChange)=\"pageChange($event)\"\r\n                    [boundaryLinks]=\"true\"\r\n                    >\r\n                </ngb-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MysqlService } from '../../services/mysql/mysql.service';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n@Component({\r\n  selector: \"app-list-customer\",\r\n  templateUrl: \"./list-customer.component.html\",\r\n  styleUrls: [\"./list-customer.component.css\"],\r\n})\r\nexport class ListCustomerComponent implements OnInit {\r\n  dataAllCustomer;\r\n  allData;\r\n  dataCountRequest;\r\n  page = 1;\r\n  pageSize = 10;\r\n  optionsCategories;\r\n  selectcategory;\r\n  tempdata;\r\n  selectUser;\r\n  totalData: number\r\n  search = new FormGroup({\r\n    q: new FormControl(null),\r\n  })\r\n  constructor(\r\n    private mysqlService: MysqlService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private autorization: AuthorizationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.selectUser = \"\";\r\n    this.GetListCustomer();\r\n    this.getCategories();\r\n  }\r\n  //METODOS PARA VERIFICACIONES DER PERMISOS\r\n  canSee(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"SEE\");\r\n  }\r\n  canCreate(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"CREATE\");\r\n  }\r\n  canAddRepresentative(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"ADD_REPRESENTATIVE\");\r\n  }\r\n  canEdit(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"EDIT\");\r\n  }\r\n  canList(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"LIST\");\r\n  }\r\n\r\n  //----------\r\n\r\n  GetListCustomer() {\r\n    this.spinner.show()\r\n    this.mysqlService\r\n      .GetAllCustomer(\r\n        this.pageSize,\r\n        0,\r\n        this.selectUser\r\n      )\r\n      .toPromise()\r\n      .then((response) => {\r\n\r\n        this.allData = response.data.customer;\r\n        this.dataAllCustomer = this.allData\r\n        //console.log(response.data.customer);\r\n        this.dataCountRequest = response.data.count;\r\n        this.spinner.hide();\r\n        this.tempdata = response.data.customer;\r\n        this.totalData = response.data.totalData\r\n      })\r\n      .catch((error) => {\r\n        this.toastr.error(\"Problemas con la conexi√≥n al servidor.\", \"Oops!\");\r\n      });\r\n  }\r\n  searchTermM() {\r\n    this.getList(this.search.controls.q.value)\r\n  }\r\n  pageChange(e) {\r\n    this.getList(this.selectUser)\r\n  }\r\n  getList(search) {\r\n    this.spinner.show()\r\n    this.mysqlService\r\n      .GetAllCustomer(\r\n        this.pageSize,\r\n        (this.page - 1) * this.pageSize,\r\n        search\r\n      )\r\n      .toPromise()\r\n      .then((response) => {\r\n\r\n        this.allData = response.data.customer;\r\n        this.dataAllCustomer = this.allData\r\n        //console.log(response.data.customer);\r\n        this.dataCountRequest = response.data.count;\r\n        this.spinner.hide();\r\n        this.tempdata = response.data.customer;\r\n        this.totalData = response.data.totalData\r\n      })\r\n      .catch((error) => {\r\n        this.toastr.error(\"Problemas con la conexi√≥n al servidor.\", \"Oops!\");\r\n        this.spinner.hide()\r\n      });\r\n  }\r\n  ViewCliente(id: string) {\r\n    this.router.navigate([`/customer/cliente/${id}`]);\r\n  }\r\n\r\n  EditCliente(id: string) {\r\n    this.router.navigate([`/edit-customer/cliente/${id}`]);\r\n  }\r\n\r\n  NewCustomer() {\r\n    this.router.navigate([`/new-user`]);\r\n  }\r\n\r\n  //Searching..........\r\n  _searchTerm: string;\r\n  get searchTerm(): string {\r\n    return this._searchTerm;\r\n  }\r\n  set searchTerm(val: string) {\r\n    this._searchTerm = val;\r\n    this.dataAllCustomer = this.filter(val);\r\n  }\r\n\r\n  filter(v: string) {\r\n    console.log(v);\r\n    if (v !== \"\") {\r\n      this.dataAllCustomer = this.allData.filter(\r\n        (x) =>\r\n          x?.name?.toLowerCase().indexOf(v.toLowerCase()) !== -1\r\n        // x?.nit.toLowerCase().indexOf(v.toLowerCase()) !== -1 ||\r\n        // x?.address1?.toLowerCase().indexOf(v.toLowerCase()) !== -1\r\n        /*x.address2.toLowerCase().indexOf(v.toLowerCase()) !== -1*/\r\n      );\r\n      console.log(this.dataAllCustomer)\r\n    } else {\r\n      return this.GetListCustomer();\r\n    }\r\n  }\r\n\r\n  filtertest(v: number) {\r\n    this.dataAllCustomer = this.tempdata;\r\n    v = Number(v);\r\n    if (v != 0) {\r\n      this.spinner.show()\r\n      this.mysqlService\r\n        .GetAllCustomer(\r\n          this.pageSize,\r\n          (this.page - 1) * this.pageSize,\r\n          this.selectUser,\r\n          v\r\n        )\r\n        .toPromise()\r\n        .then((response) => {\r\n          this.allData = response.data.customer;\r\n          this.dataAllCustomer = this.allData\r\n          //console.log(response.data.customer);\r\n          this.dataCountRequest = response.data.count;\r\n          this.spinner.hide();\r\n          this.tempdata = response.data.customer;\r\n          this.totalData = response.data.totalData\r\n        })\r\n        .catch((error) => {\r\n          this.toastr.error(\"Problemas con la conexi√≥n al servidor.\", \"Oops!\");\r\n          this.spinner.hide()\r\n        });\r\n    } else if (v == 0) {\r\n      return this.GetListCustomer();\r\n    }\r\n  }\r\n\r\n  async getCategories() {\r\n    const res = this.mysqlService\r\n      .GetAllCustomerCategories()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsCategories = response.data;\r\n        this.selectcategory = \"\";\r\n      });\r\n    return res;\r\n  }\r\n\r\n  onChangeCategory(deviceValue) {\r\n    this.filtertest(deviceValue);\r\n  }\r\n\r\n  addnewPerson(id: string) {\r\n    this.router.navigate([`/new-person/cliente/${id}`]);\r\n  }\r\n}\r\n","import { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { ListCustomerComponent } from \"./list-customer.component\";\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    data: {\r\n      title: \"Listado de clientes y prospetos\",\r\n      urls: [\r\n        { title: \"Clientes\", url: \"/list-customer\" },\r\n        { title: \"Informaci√≥n de clientes y prospecto\" },\r\n      ],\r\n    },\r\n    component: ListCustomerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [ListCustomerComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class DashboardModule {}\r\n"]}