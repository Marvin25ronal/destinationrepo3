{"version":3,"sources":["./src/app/pages/upload-onu-list/upload-onu-list.component.ts","./src/app/pages/upload-onu-list/upload-onu-list.component.html","./src/app/pages/upload-onu-list/upload-onu-list.module.ts"],"names":[],"mappings":"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","file":"pages-upload-onu-list-upload-onu-list-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { MysqlService } from '../../services/mysql/mysql.service';\r\n\r\n@Component({\r\n  selector: \"app-upload-onu-list\",\r\n  templateUrl: \"./upload-onu-list.component.html\",\r\n  styleUrls: [\"./upload-onu-list.component.css\"],\r\n})\r\nexport class UploadOnuListComponent implements OnInit {\r\n  data = [];\r\n  page = 1;\r\n  pageSize = 10;\r\n  binnaclelist = [];\r\n  currentUser;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private mysqlService: MysqlService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService,\r\n    private autorization: AuthorizationService\r\n  ) {}\r\n\r\n  canUpload(): boolean { \r\n    let resource = 'ONU';\r\n    return this.autorization.havePermission(resource, 'UPLOAD');\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  formListaONU = new FormGroup({\r\n    file_name: new FormControl(\"\", [Validators.required]),\r\n    description: new FormControl(\"\", [Validators.required]),\r\n  });\r\n\r\n  _searchTerm: string;\r\n  get searchTerm(): string {\r\n    return this._searchTerm;\r\n  }\r\n  set searchTerm(val: string) {\r\n    this._searchTerm = val;\r\n    this.binnaclelist = this.filter(val);\r\n  }\r\n\r\n  filter(v: string) {\r\n    if (v !== \"\") {\r\n      return this.binnaclelist.filter(\r\n        (x) =>\r\n          x.file_name.toLowerCase().indexOf(v.toLowerCase()) !== -1 ||\r\n          x.username.toLowerCase().indexOf(v.toLowerCase()) !== -1 ||\r\n          x.description.toLowerCase().indexOf(v.toLowerCase()) !== -1\r\n        /*x.address2.toLowerCase().indexOf(v.toLowerCase()) !== -1*/\r\n      );\r\n    } else {\r\n      this.GetONUList();\r\n    }\r\n  }\r\n\r\n  openModal2(targetModal) {\r\n    this.modalService.open(targetModal, {\r\n      centered: true,\r\n      backdrop: \"static\",\r\n      keyboard: false,\r\n      windowClass:'my-modal'\r\n    });\r\n  }\r\n\r\n  closeBtnClick() {\r\n    //console.log('Se va a cerrar el modal');\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  async GetONUList() {\r\n    this.spinner.show();\r\n    await this.mysqlService\r\n      .GetONUList()\r\n      .toPromise()\r\n      .then((res) => {\r\n        this.binnaclelist = res.data;\r\n        this.spinner.hide();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n        this.toastr.error(\"Problemas con el servidor.\", \"Oops!\");\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  async SaveNewListONU() {\r\n    this.spinner.show();\r\n    this.formListaONU.value.username = this.currentUser;\r\n    await this.mysqlService\r\n      .CreateONUList(this.formListaONU.value)\r\n      .toPromise()\r\n      .then((res) => {\r\n        this.GetONUList();\r\n        //console.log('res',res);\r\n        this.toastr.success(\"Se creo una lista nueva.\", \"Lista Creada\");\r\n        this.modalService.dismissAll();\r\n        this.formListaONU.reset({});\r\n        this.spinner.hide();\r\n      })\r\n      .catch((err) => {\r\n        this.toastr.error(\"Problemas con el servidor.\", \"Oops!\");\r\n        console.log(\"err\", err);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.currentUser = localStorage.getItem(\"email\");\r\n    await this.GetONUList();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n        <p style=\"font-size: 20px; color:#fff\">Subiendo información de la lista ONU...</p>\r\n    </ngx-spinner>\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card-body\" style=\"background-color: #fff !important;\">\r\n            <div class=\"d-flex mb-3 mt-3\">\r\n                <form class=\"m-t-20\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-lg-12\">\r\n                            <div class=\"form-group row\">\r\n                                <div class=\"input-group col-sm-12\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                            <i class=\"ti-search\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input [(ngModel)]=\"searchTerm\" class=\"form-control\" name=\"buscador\" placeholder=\"Buscar\" type=\"text\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <!-- <h4 class=\"card-title m-t-10 p-b-20\" style=\"font-weight: 700;\">Información exclusivos de solucredit</h4> -->\r\n            <button *ngIf=\"canUpload()\" class=\"btn text-white custom_btn1\" type=\"button\" style=\"float: right;width: auto;margin-bottom: 15px;margin-right: 0;\" (click)=\"openModal2(uploadlist)\"><span class=\"btn-label m-r-5\"><i class=\"icon-cloud-upload\" ></i></span>Subir una nueva lista</button>\r\n            <div class=\"table-responsive table-bordered\" style=\"background-color: #fff !important;\">\r\n                <table class=\"table table-striped mb-0 no-wrap v-middle\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">ID</th>\r\n                            <th scope=\"col\">Nombre del archivo</th>\r\n                            <th scope=\"col\">Fecha de creación</th>\r\n                            <th scope=\"col\">Usuario</th>\r\n                            <th scope=\"col\">Cantidad de registros</th>\r\n                            <th scope=\"col\">Descripción</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let request of binnaclelist | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\">\r\n\r\n                            <td class=\"text-center\">\r\n                                <a>{{request.id}}</a>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                                <ngb-highlight [result]=\"request.file_name\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                                {{request.creation_date | date: 'dd/MM/yyyy'}}\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                                <ngb-highlight [result]=\"request.username\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                                <ngb-highlight [result]=\"request.number_of_records\"></ngb-highlight>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                                <ngb-highlight [result]=\"request.description\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"d-flex justify-content-center p-2\">\r\n                    <ngb-pagination *ngIf=\"binnaclelist\" [maxSize]=\"5\" [collectionSize]=\"binnaclelist.length\" [(page)]=\"page\" [pageSize]=\"pageSize\">\r\n                    </ngb-pagination>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #uploadlist let-modal>\r\n    <div class=\"modal-header\">\r\n\r\n        <h5 class=\"modal-title\" id=\"editUserLabel\">Subir una lista nueva</h5>\r\n\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form class=\"form-horizontal\" [formGroup]=\"formListaONU\" (ngSubmit)=\"SaveNewListONU()\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-lg-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"file_name\" class=\"col-sm-12\">Nombre del archivo</label>\r\n                            <div class=\"input-group col-sm-12\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                        <i class=\"far fa-id-card\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"file_name\" required placeholder=\"ej: Archivo\">\r\n                            </div>\r\n                            <small class=\"form-text text-danger col-sm-12\" *ngIf=\"!formListaONU.get('file_name').valid && (formListaONU.get('file_name').dirty || formListaONU.get('file_name').touched)\">El nombre es requerido.</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-lg-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"description\" class=\"col-sm-12\">Comentario</label>\r\n                            <div class=\"input-group col-sm-12\">\r\n                                <textarea style=\"width: 100%;height: 100px;\" formControlName=\"description\" required></textarea>\r\n                            </div>\r\n                            <small class=\"form-text text-danger col-sm-12\" *ngIf=\"!formListaONU.get('description').valid && (formListaONU.get('description').dirty || formListaONU.get('description').touched)\">El\r\n                                        La descripción es requerida.</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body div-con-flex-col div-confirmation\">\r\n                <button type=\"submit\" class=\"btn btn-raised mr-1 text-white\" style=\"background-color: #3473da;\" [disabled]=\"!formListaONU.valid\">Subir Lista</button>\r\n                <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</ng-template>","import { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { UploadOnuListComponent } from \"./upload-onu-list.component\";\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { QuillModule } from \"ngx-quill\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    data: {\r\n      title: \"Cargar listado de la ONU\",\r\n      urls: [{ title: \"Tablero\", url: \"/dashboard\" }, { title: \"Listado ONU\" }],\r\n    },\r\n    component: UploadOnuListComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    QuillModule.forRoot(),\r\n  ],\r\n  declarations: [UploadOnuListComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class DashboardModule {}\r\n"],"sourceRoot":"webpack:///"}