{"version":3,"sources":["webpack:///src/app/models/rol.model.ts","webpack:///src/app/pages/rol/multiselect/multiselect.component.ts","webpack:///src/app/pages/rol/multiselect/multiselect.component.html","webpack:///src/app/pages/rol/rol.component.ts","webpack:///src/app/pages/rol/rol.component.html","webpack:///src/app/pages/rol/rol.module.ts","webpack:///src/app/pages/rol/spinner/spinner.component.ts","webpack:///src/app/pages/rol/spinner/spinner.component.html"],"names":["Permission","Rol","rol_id","name","permissions","usuarios","usercount","permissioncount","MultiselectComponent","dropdownList","cities","selectedItems","singleselectedItems","dropdownSettings","singledropdownSettings","closeDropdownSelection","item_id","item_text","singleSelection","selectAllText","unSelectAllText","allowSearchFilter","closeDropDownOnSelection","idField","textField","itemsShowLimit","item","items","onItemSelect","onSelectAll","selector","templateUrl","styleUrls","RolComponent","notifier","_service","fb","modalService","spinner","autorization","nzTabPosition","selectedIndex","vals","search","q","placeholder","config","label","tipo","range","labelsAux","options","restart","header","spinnerMessage","page","pageSize","permissionsMap","tabs","checks","IdRoltoDelete","spinLoader","marcarvarios","newRolForm","group","RolName","required","Permissions","Users","RolForm","isEditing","roles","dropdownListUser","searchField","searchItem","controls","value","push","sub","getRols","pipe","response","data","rolesTotal","count","hide","unsubscribe","err","notify","console","log","subscribe","resource","havePermission","isCancelCreationAbailable","isLoadingInEdition","permisosActuales","permisosActualesV2","formArray","get","clear","i","disabled","content","event","target","checked","forEach","ctrl","removeAt","show","rolssub","rols","e","idrol","openSingleModal","modalDelete","deleteRol","resp","filter","rol","closeBtnClick","valid","length","getPermissions","permis","permisos","map","getUsuarios","users","user_id","firstname","lastname","permission_id","usersid","saveRol","message","dismissAll","reset","ngOnInit","actualRol","setValue","disable","openEditRolModal","modalMod","getRol","r","p","category","split","isCalculatinPermissions","enable","permission","armarCheckBoxes","estate","newpermis","modRolInfo","targetModal","open","centered","backdrop","keyboard","windowClass","size","observer","keys","Object","key","next","complete","args","routes","path","title","urls","url","component","RolModule","forChild","declarations","imports","SpinnerComponent"],"mappings":"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","file":"pages-rol-rol-module-es5.js","sourcesContent":["import { User } from './user.model'\r\nexport interface RolPagination {\r\n    count: number,\r\n    data: Rol[]\r\n}\r\n\r\nexport interface GetRolsResponse {\r\n    success: boolean;\r\n    data: RolPagination;\r\n}\r\nexport interface GetRolResponse {\r\n    success: boolean;\r\n    data: Rol;\r\n}\r\nexport interface GetRol2Response {\r\n    success: boolean;\r\n    data: Rol[];\r\n}\r\n\r\nexport interface GetPermissionsResponse {\r\n    success: boolean;\r\n    data: Permission[];\r\n}\r\nexport class Permission {\r\n    permission_id: string;\r\n    name: string;\r\n}\r\nexport class Rol {\r\n\r\n    rol_id: string;\r\n    name: string;\r\n    usercount: number;\r\n    permissioncount: number;\r\n    permissions: Permission[];\r\n    usuarios: User[];\r\n\r\n    constructor(\r\n        rol_id: string,\r\n        name: string,\r\n        permissions: Permission[],\r\n        usuarios: User[],\r\n        usercount: number,\r\n        permissioncount: number\r\n\r\n    ) {\r\n        this.rol_id = rol_id;\r\n        this.name = name;\r\n        this.permissions = permissions;\r\n        this.usuarios = usuarios;\r\n        this.usercount = usercount;\r\n        this.permissioncount = permissioncount;\r\n\r\n    }\r\n}","import { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-multiselect',\r\n  templateUrl: './multiselect.component.html',\r\n  styleUrls: ['./multiselect.component.css']\r\n})\r\nexport class MultiselectComponent implements OnInit {\r\n  dropdownList = [];\r\n  cities = [];\r\n  selectedItems = [];\r\n  singleselectedItems = [];\r\n  dropdownSettings = {};\r\n  singledropdownSettings = {};\r\n  closeDropdownSelection = false;\r\n  ngOnInit() {\r\n    \r\n    this.dropdownList = [\r\n      { item_id: 1, item_text: 'Administrador' },\r\n      { item_id: 2, item_text: 'Auditor' },\r\n      { item_id: 3, item_text: 'Colaborador' },\r\n      { item_id: 4, item_text: 'Contador' },\r\n      { item_id: 5, item_text: 'Gerencia' }\r\n    ];\r\n    this.cities = ['Mumbai', 'New Delhi', 'Bangaluru', 'Pune', 'Navsari'];\r\n    this.selectedItems = [\r\n    ];\r\n    this.singleselectedItems = ['Pune'];\r\n    this.singledropdownSettings = {\r\n      singleSelection: true,\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: this.closeDropdownSelection\r\n    };\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3\r\n      /* allowSearchFilter: true */\r\n    };\r\n  }\r\n  onItemSelect(item: any) {\r\n    \r\n  }\r\n  onSelectAll(items: any) {\r\n \r\n  }\r\n}\r\n","<ng-multiselect-dropdown [settings]=\"dropdownSettings\" [placeholder]=\"'roles'\" [data]=\"dropdownList\" [(ngModel)]=\"selectedItems\" [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\">\r\n</ng-multiselect-dropdown>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError, of, Subscription } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { Permission, Rol } from '../../models/rol.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RolService } from './services/rol.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n\r\ninterface checkPermission {\r\n  value: boolean;\r\n  permission: Permission\r\n}\r\n\r\n\r\n\r\n\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\n\r\ninterface permissionV2 {\r\n  name: string;\r\n  permissions: Permission[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-rol',\r\n  templateUrl: './rol.component.html',\r\n  styleUrls: ['./rol.component.scss']\r\n})\r\nexport class RolComponent implements OnInit {\r\n\r\n  //PARA FILTROS\r\n  nzTabPosition = 'top';\r\n  selectedIndex = 27;\r\n  vals: any[] = ['', '', '', '', '', '', '', ''];\r\n\r\n  search = new FormGroup({\r\n    q: new FormControl(null),\r\n  })\r\n  placeholder = 'Buscar rol';\r\n  config = [\r\n\r\n    {\r\n      label: 'Nombre:',\r\n      tipo: 'TEXT',\r\n      range: false,\r\n      labelsAux: []\r\n\r\n    },\r\n\r\n    {\r\n\r\n      tipo: 'OPTIONS',\r\n      options: {\r\n        restart: true,\r\n        header: false\r\n\r\n      }\r\n\r\n    }\r\n  ];\r\n\r\n  filter() {\r\n\r\n    let searchField = [];\r\n    let searchItem = [];\r\n\r\n\r\n    /* if (this.vals[0] && this.vals[1]) {\r\n      searchField.push('FECINI');\r\n      let fecini = this.vals[0].year + '-' + this.vals[0].month + '-' + this.vals[0].day + ' 00:00:00';\r\n      searchItem.push(fecini);\r\n      searchField.push('FECEND');\r\n      let fecend = this.vals[1].year + '-' + this.vals[1].month + '-' + this.vals[1].day + ' 23:59:59';\r\n      searchItem.push(fecend);\r\n    } */\r\n\r\n\r\n    if (this.search.controls['q'].value != \"\") {\r\n      searchField.push('NAME');\r\n      searchItem.push('%' + this.search.controls['q'].value + '%');\r\n\r\n    }\r\n\r\n    let sub = this._service.getRols(this.pageSize, (this.page - 1) * this.pageSize, searchItem, searchField).pipe(\r\n      map((response) => {\r\n\r\n        this.roles = response.data;\r\n        this.rolesTotal = response.count;\r\n        this.spinner.hide();\r\n        sub.unsubscribe()\r\n\r\n\r\n      }),\r\n      catchError((err) => {\r\n        this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n        console.log(err);\r\n        return of();\r\n      })\r\n\r\n    ).subscribe(() => {\r\n      //console.log('................');\r\n      sub.unsubscribe()\r\n    });\r\n\r\n  }\r\n\r\n\r\n  constructor(\r\n    private notifier: NotifierService,\r\n    private _service: RolService,\r\n    public fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private spinner: NgxSpinnerService,\r\n    private autorization: AuthorizationService) { }\r\n\r\n  spinnerMessage = 'Cargando Información...';\r\n  //SUBSCRIPCIONES\r\n  rolssub: Subscription;\r\n  //PAGINACION\r\n  page = 1;\r\n  pageSize = 10;\r\n  rolesTotal: number;\r\n  //COSAS PARA EL CHECKBOX\r\n  public permisosModificados: Array<checkPermission>;\r\n  public isCalculatinPermissions: boolean;\r\n  public permissionsMap = {};\r\n  tabs: Array<{ name: string; content: string; disabled: boolean }> = [];\r\n\r\n\r\n  //ESTADOS PARA LOS BOTONES\r\n  //BOTONES PARA EL MOELS DE CREACION DE UN NUEVO ROL\r\n  public isCancelCreationAbailable: boolean;\r\n  public isLoadingInEdition: boolean;\r\n  public checks: Array<Permission> = [];\r\n\r\n  //auxiliar para eliminar Rol\r\n  IdRoltoDelete = '';\r\n\r\n\r\n  spinLoader = false;\r\n  actualRol: Rol;\r\n  @ViewChild('modalMod') private modalMod: TemplateRef<{}>;\r\n  @ViewChild('modalDelete') private modalDelete: TemplateRef<{}>;\r\n  marcarvarios: boolean = false;\r\n  newRolForm = this.fb.group({\r\n    RolName: [, [Validators.required]],\r\n    Permissions: [, [Validators.required]],\r\n    Users: [],\r\n  });\r\n  RolForm = this.fb.group({\r\n    RolName: ['', [Validators.required]],\r\n    Permissions: new FormArray([])\r\n\r\n  });\r\n\r\n  isEditing = false;\r\n  roles: Rol[] = [] /* [\r\n        new Rol('dsadsad', 'Administrador', 5, 7),\r\n        new Rol('dsadsadas', 'Ventas', 5, 7),\r\n        new Rol('dsadsadas', 'Contador', 5, 7),\r\n      new Rol('dsadsadas', 'Auditoria', 1, 7),\r\n      new Rol('dsadsadas', 'Auditoria', 1, 7),\r\n      new Rol('dsadsadas', 'Auditoria', 1, 7),\r\n      new Rol('dsadsadas', 'Auditoria', 1, 7),\r\n      new Rol('dsadsadas', 'Auditoria', 1, 7),\r\n        new Rol('dsadsadas', 'Auditorddsadsadasdia', 1, 7)\r\n    ]; */\r\n\r\n  dropdownSettings = {};\r\n  dropdownList = [];\r\n  permisos: Permission[];\r\n  dropdownListUser = [];\r\n  permisosActuales: Permission[];\r\n  permisosActualesV2: any;\r\n\r\n\r\n  canCreate(): boolean {\r\n    let resource = 'ROL';\r\n    return this.autorization.havePermission(resource, 'CREATE');\r\n  }\r\n  canDelete(): boolean {\r\n    let resource = 'ROL';\r\n    return this.autorization.havePermission(resource, 'DELETE');\r\n  }\r\n  canUpdate(): boolean {\r\n    let resource = 'ROL';\r\n    return this.autorization.havePermission(resource, 'UPDATE');\r\n  }\r\n  canList(): boolean {\r\n    let resource = 'ROL';\r\n    return this.autorization.havePermission(resource, 'LIST');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isCancelCreationAbailable = false;\r\n    this.isLoadingInEdition = false;\r\n    this.getRols();\r\n\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3\r\n      /* allowSearchFilter: true */\r\n    };\r\n    this.dropdownList = [];\r\n    this.dropdownListUser = [];\r\n    this.permisosActuales = [];\r\n    this.permisosActualesV2 = null;\r\n    const formArray: FormArray = this.RolForm.get('Permissions') as FormArray;\r\n    formArray.clear();\r\n    for (let i = 0; i < 30; i++) {\r\n      this.tabs.push({\r\n        name: `Tab ${i}`,\r\n        disabled: i === 28,\r\n        content: `Content of tab ${i}`\r\n      });\r\n    }\r\n  }\r\n\r\n  onCheckChange(event) {\r\n    const formArray: FormArray = this.RolForm.get('Permissions') as FormArray;\r\n\r\n    /* Selected */\r\n    if (event.target.checked) {\r\n      // Add a new control in the arrayForm\r\n      if (event.target.value != null) {\r\n        //console.log('Checkiado'+event.target.value)\r\n        formArray.push(new FormControl(event.target.value));\r\n      }\r\n\r\n    }\r\n    /* unselected */\r\n    else {\r\n      // find the unselected element\r\n      let i: number = 0;\r\n\r\n      formArray.controls.forEach((ctrl: FormControl) => {\r\n        if (ctrl.value == event.target.value) {\r\n          // Remove the unselected element from the arrayForm\r\n          //console.log('Deschequiado::'+formArray[i]);\r\n          formArray.removeAt(i);\r\n          return;\r\n        }\r\n\r\n        i++;\r\n      });\r\n    }\r\n  }\r\n  getRols() {\r\n    this.spinner.show();\r\n    this.rolssub = this._service.getRols(this.pageSize, (this.page - 1) * this.pageSize, [], []).subscribe((rols) => {\r\n      this.roles = rols.data;\r\n      this.rolesTotal = rols.count;\r\n\r\n      this.spinner.hide();\r\n      this.rolssub.unsubscribe()\r\n    });\r\n  }\r\n  pageChange(e) {\r\n    //console.log(e);\r\n    this.getRols();\r\n  }\r\n\r\n  deleteRolModal(idrol: string) {\r\n    this.IdRoltoDelete = idrol;\r\n    this.openSingleModal(this.modalDelete)\r\n  }\r\n\r\n\r\n  deleteRol() {\r\n    let idrol = this.IdRoltoDelete;\r\n    this._service.deleteRol(idrol).pipe(\r\n      map((resp) => {\r\n        //console.log(resp);\r\n        this.notifier.notify('success', 'Se elimino el Rol');\r\n        this.roles = this.roles.filter((rol) => {\r\n          return rol.rol_id != idrol;\r\n        })\r\n      }),\r\n      catchError((err) => {\r\n        this.notifier.notify('error', 'Ocurrio un problema con la eliminacion' + err);\r\n        console.log(err);\r\n        return of();\r\n      })\r\n    ).subscribe();\r\n\r\n    this.closeBtnClick();\r\n  }\r\n\r\n\r\n\r\n  escorrecto1() { return !this.newRolForm.valid }\r\n\r\n\r\n  onPermisosClick() {\r\n    //console.log('PermisoLink');\r\n    if (this.dropdownList.length == 0) {\r\n      this._service.getPermissions(100, 0).subscribe((permis) => {\r\n        this.permisos = permis;\r\n        this.dropdownList = permis.map((item, i) => {\r\n          //console.log(item);\r\n          return { item_id: i, item_text: item.name }\r\n        })\r\n      });\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  onUsersClick() {\r\n    if (this.dropdownListUser.length == 0) {\r\n      this._service.getUsuarios(1000, 0).subscribe(\r\n        (users) => {\r\n          this.dropdownListUser = users.map((item) => {\r\n            //console.log(item);\r\n            return { item_id: item.user_id, item_text: item.firstname + item.lastname }\r\n          })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    //console.log('ON onItemSelect: ',item); \r\n  }\r\n  onSelectAll(items: any) {\r\n    //console.log('ON onSelectAll: ',items);\r\n  }\r\n  onFilterChange(items: any) {\r\n    //console.log('ON onFilterChange: ',items);\r\n  }\r\n  crearRol() {\r\n    this.spinLoader = true;\r\n    const permis = this.newRolForm.controls.Permissions.value.map((item, i) => {\r\n      return this.permisos[item.item_id].permission_id;\r\n    });\r\n\r\n    let usersid = [];\r\n    if (this.newRolForm.controls.Users.value != null)\r\n      usersid = this.newRolForm.controls.Users.value.map((item) => (item.item_id))\r\n\r\n    const rol = new Rol(\r\n      '',\r\n      this.newRolForm.controls.RolName.value,\r\n      permis,\r\n      usersid,\r\n      usersid.length,\r\n      permis.length\r\n    );\r\n\r\n\r\n    this._service.saveRol(rol).pipe(\r\n      map((resp) => {\r\n\r\n        this.notifier.notify('success', 'Se creo el rol satisfactoriamente');\r\n        this.roles.push(rol);\r\n        this.closeBtnClick();\r\n      }),\r\n      catchError((err) => {\r\n        this.notifier.notify('error', 'Ocurrio un problema durante la creacion del rol' + err.message);\r\n        //console.log(err);\r\n        return of();\r\n      })\r\n    ).subscribe();\r\n\r\n  }\r\n  closeBtnClick() {\r\n    this.modalService.dismissAll();\r\n    this.newRolForm.reset();\r\n    this.RolForm.reset();\r\n    this.IdRoltoDelete = '';\r\n    this.ngOnInit();\r\n    this.isEditing = false;\r\n  }\r\n  editar(rol: Rol) {\r\n    this.isLoadingInEdition = true;\r\n    this.isEditing = false;\r\n    //console.log('editar: ',rol);\r\n    this.actualRol = rol;\r\n    this.RolForm.controls.RolName.setValue(rol.name)\r\n    this.RolForm.controls.RolName.disable();\r\n    this.openEditRolModal(this.modalMod);\r\n    //this.RolForm.controls.Name.setValue(rol.name);\r\n    //this.RolForm.controls.Name.disable();\r\n    this._service.getRol(rol.rol_id).subscribe((r) => {\r\n      this.permisosActuales = r.permissions;\r\n      for (let i = 0; i < this.permisosActuales.length; i++) {\r\n        let p = this.permisosActuales[i];\r\n        let category = p.name.split('-')[0];\r\n        if (!this.permisosActualesV2) {\r\n          this.permisosActualesV2 = {};\r\n          console.log(`La categoria ${category} no existe`);\r\n          this.permisosActualesV2[category] = { name: category, permissions: [p] }\r\n        }\r\n        else if (!this.permisosActualesV2[category]) {\r\n          console.log(`La categoria ${category} no existe`);\r\n          this.permisosActualesV2[category] = { name: category, permissions: [p] }\r\n        }\r\n        else {\r\n          console.log(`La categoria ${category} ya existe`);\r\n          this.permisosActualesV2[category] = { ...this.permisosActualesV2[category], permissions: [...this.permisosActualesV2[category].permissions, p] }\r\n        }\r\n      }\r\n\r\n      console.log(this.permisosActualesV2);\r\n\r\n      //console.log(this.permisosActuales);\r\n      //console.log(this.permisosActuales.length);\r\n      this.isLoadingInEdition = false;\r\n\r\n    });\r\n\r\n  }\r\n  startMod() {\r\n    this.isEditing = true;\r\n    this.isLoadingInEdition = true;\r\n    this.isCalculatinPermissions = true;\r\n    this.RolForm.controls.RolName.enable();\r\n    this.permisosActualesV2 = {};\r\n    this._service.getPermissions(1000, 0).pipe(\r\n      map(response => {\r\n        //console.log(response);\r\n        this.permisos = response;\r\n        //this.permisosActualesV2 = {};\r\n        this.permisos.forEach((item) => {\r\n\r\n          this.permissionsMap[item.permission_id] = {\r\n            value: false,\r\n            permission: item\r\n          }\r\n        })\r\n      }),\r\n      catchError((err) => {\r\n        this.notifier.notify('error', '' + err.message);\r\n        console.log(err);\r\n        return of();\r\n      })\r\n    ).subscribe((permis) => {\r\n\r\n\r\n      this.armarCheckBoxes().pipe(\r\n        catchError((err) => {\r\n          this.notifier.notify('error', 'Ocurrio un problema' + err.message);\r\n          console.log(err);\r\n          return of();\r\n        })\r\n      ).subscribe((estate) => {\r\n\r\n        this.isCalculatinPermissions = false;\r\n        this.isLoadingInEdition = false;\r\n      });\r\n\r\n\r\n    });\r\n  }\r\n  saveChanges() {\r\n\r\n    //console.log('Los permisos que voy a mandar');\r\n    let newpermis = this.RolForm.controls.Permissions.value;\r\n    //console.log(newpermis);\r\n    this.spinner.show();\r\n    this.spinnerMessage = 'Modificando rol...';\r\n    this._service.modRolInfo(this.actualRol.rol_id, this.RolForm.controls.RolName.value, newpermis).pipe(\r\n      map((resp) => {\r\n        //console.log(resp);\r\n        this.spinnerMessage = 'Cargando Información...';\r\n        this.notifier.notify('success', 'Se modifico el satisfactoriamente');\r\n        this.spinner.hide()\r\n        this.closeBtnClick();\r\n      }),\r\n      catchError((err) => {\r\n        this.spinner.hide();\r\n        this.spinnerMessage = 'Cargando Información...';\r\n        this.notifier.notify('error', 'Ocurrio un problema' + err.message);\r\n        console.log(err);\r\n\r\n        return of();\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  openModal(targetModal, rol) {\r\n    this.modalService.open(targetModal, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      windowClass: 'my-modal',\r\n      size: \"xl\",\r\n      /* size: 'sm' */\r\n      // size: \"lg\",\r\n      // windowClass: 'my-modal'\r\n    });\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  openSingleModal(targetModal) {\r\n    this.modalService.open(targetModal, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      windowClass: 'my-modal',\r\n      size: \"xl\",\r\n    });\r\n  }\r\n\r\n  openEditRolModal(targetModal) {\r\n    this.modalService.open(targetModal, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      windowClass: 'my-modal',\r\n      size: \"xl\",\r\n    });\r\n  }\r\n\r\n\r\n  armarCheckBoxes(): Observable<boolean> {\r\n\r\n    return new Observable((observer) => {\r\n      const formArray: FormArray = this.RolForm.get('Permissions') as FormArray;\r\n      debugger\r\n      for (let i = 0; i < this.permisosActuales.length; i++) {\r\n        let rol = this.permisosActuales[i];\r\n        //console.log('observable::'+rol)select * from permission where permission_id = '58168bdf-efad-480d-a16f-52eacdc029c9'\r\n        this.permissionsMap[rol.permission_id].value = true;\r\n        formArray.push(new FormControl(rol.permission_id));\r\n      }\r\n      //this.permisosModificados = Object.values(this.permissionsMap);\r\n      let keys = Object.keys(this.permissionsMap);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        let key = keys[i];\r\n        let category = this.permissionsMap[key].permission.name.split('-')[0];\r\n        if (!this.permisosActualesV2[category]) {\r\n          this.permisosActualesV2[category] = { name: category, data: [{ value: this.permissionsMap[key].value, permission: this.permissionsMap[key].permission }] }\r\n        }\r\n        else {\r\n          this.permisosActualesV2[category] = { name: category, data: [...this.permisosActualesV2[category].data, { value: this.permissionsMap[key].value, permission: this.permissionsMap[key].permission }] }\r\n        }\r\n      }\r\n      console.log('Despues de armar checkboxes');\r\n      console.log(this.permisosActualesV2);\r\n\r\n      observer.next(true);\r\n      observer.complete();\r\n\r\n    });\r\n\r\n  }\r\n  searchTerm() {\r\n    // this.getCoverage(this.search.controls.q.value);\r\n  }\r\n\r\n\r\n\r\n  log(args: any[]): void {\r\n    console.log(args);\r\n  }\r\n}\r\n","<div class=\"col-12\">\r\n    <div class=\"card card-body\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">{{spinnerMessage}}</p>\r\n        </ngx-spinner>\r\n\r\n        <div class=\"d-flex mb-3 mt-3 col-lg-12\">\r\n            <!-- <input type=\"text\" class=\"form-control w-25\" placeholder=\"Busca a un empleado\" [(ngModel)]='searchTerm'> -->\r\n            <div class=\"col-lg-3\">\r\n                <form [formGroup]=\"search\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-lg-12\">\r\n                            <div class=\"form-group row\">\r\n                                <div class=\"input-group col-sm-12\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                            <i class=\"ti-search\"></i>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <input class=\"form-control\" formControlName=\"q\" (change)=\"filter()\"\r\n                                        [placeholder]=\"placeholder\" type=\"text\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <button *ngIf=\"canCreate()\" class=\"btn btn btn-info ml-auto h-25 btn-color-solucredit\"\r\n                (click)=\"openModal(createModal,null)\">Nuevo rol</button>\r\n\r\n        </div>\r\n\r\n        <!-- <div class=\"d-flex mb-3 mt-3 p-1\"> -->\r\n        <!-- <app-reportfilters [config]=\"config\" [(vals)]=\"vals\" (onFilter)=\"filter($event)\"></app-reportfilters> -->\r\n        <div *ngIf=\"canList()\" class=\"table-responsive table-hover\">\r\n            <table class=\"table table-responsive-lg  v-middle white-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <!-- <th *ngIf=\"marcarvarios\" class=\"text-center\" scope=\"col\">#</th> -->\r\n                        <th scope=\"col\" class=\"text-center\">Nombres</th>\r\n                        <th scope=\"col\" class=\"text-center\">Usuarios</th>\r\n                        <th scope=\"col\" class=\"text-center\">Permisos</th>\r\n                        <th scope=\"col\" class=\"text-center\">Acciones</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let rol of roles\">\r\n\r\n                        <!--  <td *ngIf=\"marcarvarios\" class=\"text-center\">\r\n                            {{rol.rol_id}}\r\n                        </td> -->\r\n\r\n                        <td class=\"text-left\">\r\n                            {{rol.name}}\r\n                        </td>\r\n                        <td>\r\n                            <div class=\"text-right\">\r\n                                {{rol.usercount}}\r\n                            </div>\r\n\r\n\r\n\r\n                        </td>\r\n                        <td>\r\n                            <div class=\"text-right\">\r\n                                {{rol.permissioncount}}\r\n                            </div>\r\n\r\n\r\n\r\n                        </td>\r\n\r\n                        <td>\r\n                            <div class=\"div-table-actions\">\r\n                                <button *ngIf=\"canUpdate()\" (click)=\"editar(rol)\" class=\"btn  btn-color-solucredit\"\r\n                                    type=\"button\"><span class=\"btn-label m-r-5\"><i\r\n                                            class=\"mdi mdi-eye-outline\"></i></span>Editar</button>\r\n\r\n                                <button *ngIf=\"canDelete()\" ngbTooltip=\"Eliminar\" (click)=\"deleteRolModal(rol.rol_id)\"\r\n                                    class=\"btn btn-danger waves-effect waves-light\" type=\"button\"><span\r\n                                        class=\"btn-label m-r-5\"><i class=\"mdi mdi-delete\"></i></span>Eliminar</button>\r\n                            </div>\r\n\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"d-flex justify-content-center p-2\">\r\n\r\n                <ngb-pagination [collectionSize]=\"this.rolesTotal\" [pageSize]=\"pageSize\" [(page)]=\"page\"\r\n                    aria-label=\"Default pagination\" (pageChange)=\"pageChange($event)\"></ngb-pagination>\r\n            </div>\r\n            <!-- <div class=\"d-flex justify-content-center mt-5\">\r\n                <ngb-pagination [(page)]=\"page\" [pageSize]=\"pageSize\" [collectionSize]=\"userList.length\"></ngb-pagination>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n    <notifier-container></notifier-container>\r\n\r\n    <ng-template #createModal let-modal>\r\n\r\n        <div class=\"modal-header\">\r\n\r\n            <h5 class=\"modal-title\" id=\"editUserLabel\">Crea un nuevo rol</h5>\r\n\r\n            <button (click)=\"closeBtnClick()\" type=\"button\" class=\"close\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-body\">\r\n            <form class=\"form\" [formGroup]=\"newRolForm\">\r\n                <div class=\"card-body\">\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"fname\" class=\"col-sm-3 text-right control-label col-form-label\">Nombre</label>\r\n                        <div class=\"col-sm-9\">\r\n                            <input formControlName=\"RolName\" type=\"text\" class=\"form-control\" id=\"fname\"\r\n                                placeholder=\"nombre del nuevo rol\">\r\n                            <small class=\"form-text text-danger\"\r\n                                *ngIf=\"!newRolForm.controls.RolName.valid && (newRolForm.controls.RolName.dirty || newRolForm.controls.RolName.touched)\">Ingresa\r\n                                un nombre para el rol!</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"cono1\" class=\"col-sm-3 text-right control-label col-form-label\">Permisos</label>\r\n                        <div class=\"col-sm-9\">\r\n\r\n                            <ng-multiselect-dropdown formControlName=\"Permissions\" [settings]=\"dropdownSettings\"\r\n                                [placeholder]=\"'Permisos'\" [data]=\"dropdownList\" [settings]=\"dropdownSettings\"\r\n                                (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\r\n                                (onFilterChange)=\"onFilterChange($event)\" (click)=\"onPermisosClick()\">\r\n                            </ng-multiselect-dropdown>\r\n                            <small class=\"form-text text-danger\"\r\n                                *ngIf=\"!newRolForm.controls.Permissions.valid && (newRolForm.controls.Permissions.dirty || newRolForm.controls.Permissions.touched)\">Selecciona\r\n                                un permiso al menos.</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"cono1\" class=\"col-sm-3 text-right control-label col-form-label\">Usuarios</label>\r\n                        <div class=\"col-sm-9\">\r\n                            <ng-multiselect-dropdown formControlName=\"Users\" [settings]=\"dropdownSettings\"\r\n                                [placeholder]=\"'Usuarios'\" [data]=\"dropdownListUser\" (onSelect)=\"onItemSelect($event)\"\r\n                                (onSelectAll)=\"onSelectAll($event)\" (click)=\"onUsersClick()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <app-loader-button (click)=\"onSubmit()\" [spin]=\"spinLoader\">Aprietame porfi</app-loader-button> -->\r\n                </div>\r\n                <hr>\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group m-b-0 text-right\">\r\n                        <button type=\"submit\" class=\"btn btn-raised mr-1 text-white btn-color-solucredit\"\r\n                            (click)=\"crearRol()\" [disabled]=\"escorrecto1()\">Guardar</button>\r\n                        <button type=\"submit\" class=\"btn btn-raised mr-1 text-white btn-color-solucredit-secondary\"\r\n                            (click)=\"crearRol()\" [disabled]=\"isCancelCreationAbailable\">Cancelar</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #modalMod let-modal>\r\n        <div class=\"modal-header\">\r\n\r\n            <h5 class=\"modal-title\" id=\"editUserLabel\">Edicion de rol</h5>\r\n\r\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeBtnClick()\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <ngx-spinner [name]=\"'spnn'\" bdColor=\"rgba(0, 0, 0, 0.8) \" size=\"medium \" color=\"#759ee0 \"\r\n                        type=\"ball-atom \" [fullScreen]=\"false \">\r\n                        <p style=\"color: white \"> Cambiando Estatus ... </p>\r\n                    </ngx-spinner>\r\n                    <ng-container [ngSwitch]=\"actualRol\">\r\n                        <ng-container *ngSwitchCase=\"null\">\r\n                            <h6>Cargando</h6>\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchDefault>\r\n                            <form [formGroup]=\"RolForm\">\r\n                                <div class=\"form-group row\">\r\n                                    <label for=\"fname\"\r\n                                        class=\"col-sm-3 text-right control-label col-form-label\">Nombre</label>\r\n                                    <div class=\"col-sm-9\">\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend \">\r\n                                                <span class=\"input-group-text \" id=\"basic-addon1\">\r\n                                                    <i class=\" icon-note\"></i>\r\n                                                </span>\r\n                                            </div>\r\n\r\n                                            <input [value]=\"actualRol.name\" formControlName=\"RolName\" type=\"text\"\r\n                                                class=\"form-control\" id=\"fname\" placeholder=\"nombre del nuevo rol\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                            <div class=\"card-body\">\r\n\r\n                                <!--  <div class=\"div-con-flex\">\r\n                                <h4>Permisos</h4>\r\n                            </div> -->\r\n                                <div class=\"card-body div-con-flex-col\">\r\n\r\n\r\n\r\n\r\n                                    <app-spinner *ngIf=\"isLoadingInEdition\"></app-spinner>\r\n\r\n                                    <div *ngIf=\"!isEditing &&!isLoadingInEdition\" class=\"col-sm-12\">\r\n                                        <h3>Permisos</h3>\r\n                                        <nz-tabset nzSize=\"large\">\r\n                                            <nz-tab [nzTitle]=\"dat.name\"\r\n                                                *ngFor=\"let dat of permisosActualesV2|grouppiperoles;let i = index \">\r\n                                                <div class=\"bitacora-layout\">\r\n\r\n                                                    <div class=\"table-responsive table-hover\">\r\n                                                        <table class=\"table table-responsive-lg v-middle white-table\">\r\n\r\n                                                            <tbody>\r\n                                                                <tr *ngFor=\"let permission of dat.permissions\">\r\n                                                                    <td *ngIf=\"isEditing && !isCalculatinPermissions\"\r\n                                                                        width=\"50\" class=\"text-center\">\r\n                                                                        <label>\r\n                                                                            <input type=\"checkbox\"\r\n                                                                                [checked]=\"permissionsMap[permission.permission_id].value\"\r\n                                                                                [value]=\"permissionsMap[permission.permission_id].permission.permission_id\"\r\n                                                                                (change)=\"onCheckChange($event)\">\r\n\r\n                                                                        </label>\r\n\r\n                                                                    </td>\r\n                                                                    <td width=\"150\">\r\n                                                                        <div class=\"text-left\">\r\n                                                                            <label style=\"font-size:16px\">\r\n                                                                                {{permission.name}}\r\n                                                                            </label>\r\n                                                                        </div>\r\n                                                                    </td>\r\n\r\n\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </nz-tab>\r\n                                        </nz-tabset>\r\n                                        <!-- <ngb-tabset [justify]=\"currentJustify\" class=\"tabbable\">\r\n                                            <ngb-tab\r\n                                                *ngFor=\"let dat of permisosActualesV2|grouppiperoles;let i = index \">\r\n                                                <ng-template ngbTabTitle><b>{{dat.name}}</b></ng-template>\r\n                                                <ng-template ngbTabContent>\r\n                                                    <div class=\"bitacora-layout\">\r\n\r\n                                                        <div class=\"table-responsive table-hover\">\r\n                                                            <table\r\n                                                                class=\"table table-responsive-lg v-middle white-table\">\r\n\r\n                                                                <tbody>\r\n                                                                    <tr *ngFor=\"let permission of dat.permissions\">\r\n                                                                        <td *ngIf=\"isEditing && !isCalculatinPermissions\"\r\n                                                                            width=\"50\" class=\"text-center\">\r\n                                                                            <label>\r\n                                                                                <input type=\"checkbox\"\r\n                                                                                    [checked]=\"permissionsMap[permission.permission_id].value\"\r\n                                                                                    [value]=\"permissionsMap[permission.permission_id].permission.permission_id\"\r\n                                                                                    (change)=\"onCheckChange($event)\">\r\n\r\n                                                                            </label>\r\n\r\n                                                                        </td>\r\n                                                                        <td width=\"150\">\r\n\r\n                                                                            {{permission.name}}\r\n                                                                        </td>\r\n\r\n\r\n                                                                    </tr>\r\n\r\n\r\n\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                </ng-template>\r\n                                            </ngb-tab>\r\n\r\n                                        </ngb-tabset> -->\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"isEditing &&!isCalculatinPermissions\" class=\"col-sm-12\">\r\n                                        <h3>Permisos</h3>\r\n                                        <nz-tabset nzSize=\"large\">\r\n                                            <nz-tab [nzTitle]=\"dat.name\"\r\n                                                *ngFor=\"let dat of permisosActualesV2|grouppiperoles;let i = index \">\r\n                                                <div class=\"bitacora-layout\">\r\n\r\n                                                    <div class=\"table-responsive table-hover\">\r\n                                                        <table\r\n                                                            class=\"table table-responsive-lg no-wrap v-middle white-table\">\r\n                                                            <tbody>\r\n                                                                <tr *ngFor=\"let data of dat.data\">\r\n                                                                    <td *ngIf=\"isEditing && !isCalculatinPermissions\"\r\n                                                                        width=\"50\" class=\"text-center\">\r\n                                                                        <label>\r\n                                                                            <input type=\"checkbox\"\r\n                                                                                [checked]=\"data.value\"\r\n                                                                                [value]=\"data.permission.permission_id\"\r\n                                                                                (change)=\"onCheckChange($event)\">\r\n\r\n                                                                        </label>\r\n\r\n                                                                    </td>\r\n                                                                    <td width=\"150\">\r\n                                                                        <div class=\"text-left\">\r\n                                                                            <label style=\"font-size:16px\">\r\n                                                                                {{data.permission.name}}\r\n                                                                            </label>\r\n                                                                        </div>\r\n                                                                    </td>\r\n\r\n\r\n                                                                </tr>\r\n\r\n\r\n\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </nz-tab>\r\n                                        </nz-tabset>\r\n                                        <!-- <ngb-tabset [justify]=\"currentJustify\">\r\n                                            <ngb-tab\r\n                                                *ngFor=\"let dat of permisosActualesV2|grouppiperoles;let i = index \">\r\n                                                <ng-template ngbTabTitle><b>{{dat.name}}</b></ng-template>\r\n                                                <ng-template ngbTabContent>\r\n                                                    <div class=\"bitacora-layout\">\r\n\r\n                                                        <div class=\"table-responsive table-hover\">\r\n                                                            <table\r\n                                                                class=\"table table-responsive-lg no-wrap v-middle white-table\">\r\n\r\n                                                                <tbody>\r\n                                                                    <tr *ngFor=\"let data of dat.data\">\r\n                                                                        <td *ngIf=\"isEditing && !isCalculatinPermissions\"\r\n                                                                            width=\"50\" class=\"text-center\">\r\n                                                                            <label>\r\n                                                                                <input type=\"checkbox\"\r\n                                                                                    [checked]=\"data.value\"\r\n                                                                                    [value]=\"data.permission.permission_id\"\r\n                                                                                    (change)=\"onCheckChange($event)\">\r\n\r\n                                                                            </label>\r\n\r\n                                                                        </td>\r\n                                                                        <td width=\"150\">\r\n\r\n                                                                            {{data.permission.name}}\r\n                                                                        </td>\r\n\r\n\r\n                                                                    </tr>\r\n\r\n\r\n\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                </ng-template>\r\n                                            </ngb-tab>\r\n\r\n                                        </ngb-tabset> -->\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"form-group m-b-0 text-right\">\r\n                                    <button *ngIf=\"!isEditing\" type=\"submit\" class=\"btn btn-color-solucredit\"\r\n                                        (click)=\"startMod()\">Modificar</button>\r\n                                    <button *ngIf=\"isEditing\" type=\"submit\" class=\"btn btn-color-solucredit\"\r\n                                        (click)=\"saveChanges()\">Guardar cambios</button>\r\n                                    <button *ngIf=\"isEditing\" type=\"button\"\r\n                                        class=\"btn btn-raised mr-1 text-white btn-color-solucredit-secondary\"\r\n                                        (click)=\"closeBtnClick()\">Cancelar</button>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </ng-container>\r\n                    </ng-container>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template #modalDelete let-modal>\r\n\r\n        <div class=\"modal-header border-bottom-0\">\r\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeBtnClick()\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"modal-body\">\r\n            <ng-container [ngSwitch]=\"IdRoltoDelete\">\r\n                <ng-container *ngSwitchCase=\"null\">\r\n                    <h6>Cargando</h6>\r\n                </ng-container>\r\n                <ng-container *ngSwitchDefault>\r\n                    <div class=\"row mb-2\">\r\n                        <div class=\"col-12\">\r\n                            <h4 class=\"ml-4\">¿Esta seguro de eliminar este registro?</h4>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n\r\n        <div class=\"modal-footer border-top-0\">\r\n            <button type=\"button\" (click)=\"deleteRol()\" class=\"btn btn-danger mr-1 text-white\">Confirmar</button>\r\n            <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\"\r\n                (click)=\"closeBtnClick()\">Cancelar</button>\r\n        </div>\r\n    </ng-template>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RolComponent } from './rol.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MultiselectComponent } from './multiselect/multiselect.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { SharedModule } from '../../shared/shared.module'\r\nimport { NotifierModule} from 'angular-notifier';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { PipesModule } from '../../pipes/pipes.module'\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport {NzTabsModule} from 'ng-zorro-antd/tabs'\r\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Roles',\r\n      urls: [\r\n        { title: 'Roles', url: '/rol' },\r\n        { title: 'Listado de Roles'}\r\n        \r\n      ]\r\n    },\r\n    component: RolComponent\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [RolComponent, MultiselectComponent, SpinnerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    NotifierModule,\r\n    NgxSpinnerModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    PipesModule,\r\n    NgMultiSelectDropDownModule,\r\n    RouterModule.forChild(routes),\r\n    NzTabsModule,\r\n  ]\r\n})\r\nexport class RolModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-spinner\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>"]}