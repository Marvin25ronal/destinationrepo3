{"version":3,"sources":["webpack:///src/app/form/create-request/create-request.component.html","webpack:///src/app/form/create-request/create-request.component.ts","webpack:///src/app/form/create-request/create-request.module.ts"],"names":["CreateRequestComponent","mysqlService","toastr","activatedRoute","router","spinner","optionsCountries","optionsDepartments","optionsMunicipalities","optionsTypeRequest","optionsCategories","selecionCountry","selecionDepartment","selecionMunicipality","dataCurrentCustomer","createRequest","name","required","nit","address1","address2","phone","pattern","email","municipality_id","type","inputPais","inputDepartamento","inputTipoSolicitud","GetOneCustomer","user_id","subscribe","response","data","customer","patchValue","localUrl","logotipo","loadDataTerritorial","error","console","log","res","GetCountries","toPromise","then","GetDepartments","GetTypeRequest","GetMunicipalities","GetAllCustomerCategories","value","cont","Object","entries","forEach","key","department_id","country_id","hide","snapshot","url","length","path","undefined","navigate","show","get","disable","user_solucredit","params","id","dataCurrentuser","JSON","parse","localStorage","getItem","customer_id","getMunicipalities","getDepartments","getCountries","getDataCurrentCustomer","getCategories","getTypeRequest","myDate","Date","body","documents","verifications","warranties","status","create_date","CreateCustomerRequest","success","CreateRequest","onDepartmentSelected","BackCustomer","selector","templateUrl","styleUrls","routes","title","urls","component","DashboardModule","forChild","imports","declarations","schemas"],"mappings":"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","file":"form-create-request-create-request-module-es5.js","sourcesContent":["<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header \" style=\"background-color: #3473da;\">\r\n                <h4 class=\"card-title mb-0 text-white\">Crear una nueva solicitud al cliente </h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n                    <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n                </ngx-spinner>\r\n                <div class=\"card-block\">\r\n                    <form [formGroup]=\"createRequest\" class=\"form-horizontal\" (ngSubmit)=\"CreateRequest()\">\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"name\" class=\"col-sm-12\">Nombre Completo</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\"far fa-user\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"text\" class=\"form-control\" aria-label=\"Username\" id=\"name\"\r\n                                                formControlName=\"name\" required\r\n                                                placeholder=\"Ej. Roberto Elias Peres Ramirez\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('name').valid && (createRequest.get('name').dirty || createRequest.get('name').touched)\">El\r\n                                            nombre es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"nit\" class=\"col-sm-12\">Nit</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\"far fa-address-card\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"number\" class=\"form-control\" id=\"nit\" maxlength=\"13\"  formControlName=\"nit\"\r\n                                                required placeholder=\"Ej. 12345678\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('nit').valid && (createRequest.get('nit').dirty || createRequest.get('nit').touched)\">El\r\n                                            nit es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"address1\" class=\"col-sm-12\">Dirección 1</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\" far fa-address-book\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"address1\"\r\n                                                formControlName=\"address1\" required\r\n                                                placeholder=\"Ej. 8va. calle 35-40 zona 4\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('address1').valid && (createRequest.get('address1').dirty || createRequest.get('address1').touched)\">La\r\n                                            dirección es requerida.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"address2\" class=\"col-sm-12\">Dirección 2</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\" far fa-address-book\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"address2\"\r\n                                                formControlName=\"address2\" placeholder=\"Ej. Ciudad Vieja, Guatemala\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('address2').valid && (createRequest.get('address2').dirty || createRequest.get('address2').touched)\">La\r\n                                            dirección es requerida.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"phone\" class=\"col-sm-12\">Número de celular</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\"fas fa-mobile-alt\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"number\" class=\"form-control\" id=\"phone\" formControlName=\"phone\"\r\n                                                required placeholder=\"Ej. 45826578\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('phone').valid && (createRequest.get('phone').dirty || createRequest.get('phone').touched)\">El\r\n                                            número de celular es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"email\" class=\"col-sm-12\">Correo electrónico</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i class=\"fas fa-envelope\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"\r\n                                                required placeholder=\"Ej. email@email.com\">\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('email').valid && (createRequest.get('email').dirty || createRequest.get('email').touched)\">Ingresar\r\n                                            un correo electrónico válido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <label for=\"type\" class=\"col-sm-12\">Seleccionar Tipo de Negocio</label>\r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label\r\n                                                    _ngcontent-bpb-c164=\"\" for=\"inputGroupSelect01\"\r\n                                                    class=\"input-group-text\"><i class=\"far fa-building\"></i></label>\r\n                                            </div>\r\n                                            <select class=\"custom-select col-sm-12\" id=\"type\" formControlName=\"type\">\r\n                                                <option value=\"\" selected disabled>Selecionar...</option>\r\n                                                <option value=\"0\">Individual</option>\r\n                                                <option value=\"1\">Jurídico</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('type').valid && (createRequest.get('type').dirty || createRequest.get('type').touched)\">Seleccione\r\n                                            un tipo de negocio valido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"inputPais\" class=\"col-sm-12\">Seleccionar país</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label\r\n                                                    _ngcontent-bpb-c164=\"\" for=\"inputGroupSelect01\"\r\n                                                    class=\"input-group-text\"><i class=\"far fa-id-card\"></i></label>\r\n                                            </div>\r\n                                            <select #mySelect class=\"custom-select col-sm-12\" id=\"inputPais\"\r\n                                                formControlName=\"inputPais\" [(ngModel)]=\"selecionCountry\"\r\n                                               >\r\n                                                <option value=\"\" selected disabled>Seleccionar...</option>\r\n                                                <option *ngFor=\"let order of optionsCountries; let i = index\"\r\n                                                   [value]=\"order.country_id\">{{order.name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('inputPais').valid && (createRequest.get('inputPais').dirty || createRequest.get('inputPais').touched)\">El\r\n                                            país es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"inputDepartamento\" class=\"col-sm-12\">Seleccionar\r\n                                            departamento</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label\r\n                                                    _ngcontent-bpb-c164=\"\" for=\"inputGroupSelect01\"\r\n                                                    class=\"input-group-text\"><i class=\"far fa-id-card\"></i></label>\r\n                                            </div>\r\n                                            <select #mySelectDepartment class=\"custom-select col-sm-12\"\r\n                                                id=\"inputDepartamento\" formControlName=\"inputDepartamento\"\r\n                                                [(ngModel)]=\"selecionDepartment\"\r\n                                                (change)='onDepartmentSelected(mySelectDepartment.value)'>\r\n                                                <option value=\"\" selected disabled>Selecionar...</option>\r\n                                                <ng-container *ngFor=\"let order of optionsDepartments; let i = index\">\r\n                                                    <option *ngIf=\"selecionCountry==order.country_id\" [value]=\"order.department_id\">\r\n                                                        {{order.name}}</option>\r\n                                                </ng-container>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('inputDepartamento').valid && (createRequest.get('inputDepartamento').dirty || createRequest.get('inputDepartamento').touched)\">El\r\n                                            departamento es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"municipality_id\" class=\"col-sm-12\">Seleccionar Municipio</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label\r\n                                                    _ngcontent-bpb-c164=\"\" for=\"inputGroupSelect01\"\r\n                                                    class=\"input-group-text\"><i class=\"far fa-id-card\"></i></label>\r\n                                            </div>\r\n                                            <select class=\"custom-select col-sm-12\" id=\"municipality_id\"\r\n                                                formControlName=\"municipality_id\" [(ngModel)]=\"selecionMunicipality\">\r\n                                                <option value=\"\" selected disabled>Selecionar...</option>\r\n                                                <ng-container\r\n                                                    *ngFor=\"let order of optionsMunicipalities; let i = index\">\r\n                                                    <option *ngIf=\"selecionDepartment==order.department_id\" [value]=\"order.municipality_id\">\r\n                                                        {{order.name}}</option>\r\n                                                </ng-container>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger  col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('municipality_id').valid && (createRequest.get('municipality_id').dirty || createRequest.get('municipality_id').touched)\">El\r\n                                            municipio es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6\">\r\n                                    <div class=\"form-group row\">\r\n                                        <label for=\"inputTipoSolicitud\" class=\"col-sm-12\">Tipo de solicitud</label>\r\n                                        <div class=\"input-group col-sm-12\">\r\n                                            <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label _ngcontent-bpb-c164=\"\"\r\n                                                    for=\"inputGroupSelect01\" class=\"input-group-text\"><i class=\"far fa-id-card\"></i></label>\r\n                                            </div>\r\n                                            <select class=\"custom-select col-sm-12\" id=\"inputTipoSolicitud\" formControlName=\"inputTipoSolicitud\">\r\n                                                <option value=\"\" selected disabled>Seleccionar...</option>\r\n                                                <option *ngFor=\"let order of optionsTypeRequest; let i = index\" [value]=\"order.type_id\">\r\n                                                    {{order.name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <small class=\"form-text text-danger col-sm-12\"\r\n                                            *ngIf=\"!createRequest.get('inputTipoSolicitud').valid && (createRequest.get('inputTipoSolicitud').dirty || createRequest.get('inputTipoSolicitud').touched)\">El\r\n                                            El tipo de solicitud es requerido.</small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"form-group m-b-0 text-left\">\r\n                                <button type=\"submit\" class=\"btn btn-raised mr-1 text-white\"\r\n                                    style=\"background-color: #3473da;\"\r\n                                    [disabled]=\"!createRequest.valid\">Crear Solicitud</button>\r\n                                <button (click)=\"BackCustomer()\" class=\"btn btn-gray waves-effect waves-light\">Regresar</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Reactive Form Validaton Ends -->","import { AfterViewInit, Component } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { isNitValid } from \"src/app/Validators/NitValidator\";\r\nimport { MysqlService } from \"../../services/mysql/mysql.service\";\r\n\r\n@Component({\r\n  selector: \"app-create-request\",\r\n  templateUrl: \"./create-request.component.html\",\r\n  styleUrls: [\"./create-request.component.css\"],\r\n})\r\nexport class CreateRequestComponent implements AfterViewInit {\r\n  optionsCountries = [];\r\n  optionsDepartments = [];\r\n  optionsMunicipalities = [];\r\n  optionsTypeRequest = [];\r\n  optionsCategories = [];\r\n  selecionCountry: string[] = [];\r\n  selecionDepartment: string[] = [];\r\n  selecionMunicipality: string[] = [];\r\n  dataCurrentCustomer = [];\r\n  user_id;\r\n  dataCurrentuser;\r\n  user_solucredit;\r\n  localUrl: any[];\r\n  filelogo;\r\n  constructor(\r\n    private mysqlService: MysqlService,\r\n    private toastr: ToastrService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService\r\n  ) { }\r\n\r\n  createRequest = new FormGroup({\r\n    name: new FormControl(null, [Validators.required]),\r\n    nit: new FormControl(null, [Validators.required,\r\n      isNitValid\r\n    ]),\r\n    address1: new FormControl(null, [Validators.required]),\r\n    address2: new FormControl(null, []),\r\n    phone: new FormControl(null, [\r\n      Validators.required,\r\n      Validators.pattern(\"(^[0-9]{8})|(^[+][0-9]{11}$)\"),\r\n    ]),\r\n    email: new FormControl(null, [Validators.required, Validators.email]),\r\n    municipality_id: new FormControl(\"\", [Validators.required]),\r\n    type: new FormControl(\"\", [Validators.required]),\r\n    inputPais: new FormControl(\"\", [Validators.required]),\r\n    inputDepartamento: new FormControl(\"\", [Validators.required]),\r\n    inputTipoSolicitud: new FormControl(\"\", [Validators.required]),\r\n  });\r\n\r\n  getDataCurrentCustomer() {\r\n\r\n    this.mysqlService.GetOneCustomer(this.user_id).subscribe(\r\n      (response) => {\r\n        this.dataCurrentCustomer = response.data.customer;\r\n        this.createRequest.patchValue({\r\n          name: response.data.customer.name,\r\n          nit: response.data.customer.nit,\r\n          address1: response.data.customer.address1,\r\n          address2: response.data.customer.address2,\r\n          type: response.data.customer.type,\r\n          phone: response.data.customer.phone,\r\n          email: response.data.customer.email,\r\n        });\r\n        this.localUrl = response.data.customer.logotipo;\r\n        this.selecionMunicipality = response.data.customer.municipality_id;\r\n        this.loadDataTerritorial(this.selecionMunicipality);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async getCountries() {\r\n    const res = this.mysqlService\r\n      .GetCountries()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsCountries = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  async getDepartments() {\r\n    const res = this.mysqlService\r\n      .GetDepartments()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsDepartments = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  async getTypeRequest() {\r\n    const res = this.mysqlService\r\n      .GetTypeRequest()\r\n      .toPromise()\r\n      .then((response) => {\r\n        console.log('rest', response);\r\n        this.optionsTypeRequest = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  async getMunicipalities() {\r\n    const res = this.mysqlService\r\n      .GetMunicipalities()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsMunicipalities = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  async getCategories() {\r\n    const res = this.mysqlService\r\n      .GetAllCustomerCategories()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsCategories = response.data;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  onCountrySelected(value: string) {\r\n    this.selecionDepartment = [];\r\n    this.selecionMunicipality = [];\r\n  }\r\n  onDepartmentSelected(value: string) {\r\n    this.selecionMunicipality = [];\r\n  }\r\n\r\n  async loadDataTerritorial(data) {\r\n    let cont = 0;\r\n    switch (cont) {\r\n      case 0: {\r\n        Object.entries(this.optionsMunicipalities).forEach(([key, value]) => {\r\n          if (value.municipality_id === data) {\r\n            this.selecionDepartment = value.department_id;\r\n            return false;\r\n          }\r\n        });\r\n        cont = 1;\r\n      }\r\n      // tslint:disable-next-line: no-switch-case-fall-through\r\n      case 1: {\r\n        Object.entries(this.optionsDepartments).forEach(([key, value]) => {\r\n          if (value.department_id === this.selecionDepartment) {\r\n            this.selecionCountry = value.country_id;\r\n            return false;\r\n          }\r\n        });\r\n        this.spinner.hide();\r\n        cont = 2;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  BackCustomer() {\r\n    if (this.activatedRoute.snapshot.url.length > 0) {\r\n      if (\r\n        this.activatedRoute.snapshot.url[0].path !== undefined &&\r\n        this.activatedRoute.snapshot.url[0].path === \"cliente\"\r\n      ) {\r\n        this.router.navigate([`/list-customer`]);\r\n      }\r\n    } else {\r\n      this.router.navigate([`/customer`]);\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line: use-lifecycle-interface\r\n  async ngOnInit() {\r\n    this.spinner.show();\r\n    this.createRequest.get(\"name\").disable();\r\n    this.createRequest.get(\"nit\").disable();\r\n    this.createRequest.get(\"address1\").disable();\r\n    this.createRequest.get(\"address2\").disable();\r\n    this.createRequest.get(\"phone\").disable();\r\n    this.createRequest.get(\"email\").disable();\r\n    this.createRequest.get(\"municipality_id\").disable();\r\n    this.createRequest.get(\"type\").disable();\r\n    this.createRequest.get(\"inputPais\").disable();\r\n    this.createRequest.get(\"inputDepartamento\").disable();\r\n\r\n    if (this.activatedRoute.snapshot.url.length > 0) {\r\n      if (\r\n        this.activatedRoute.snapshot.url[0].path !== undefined &&\r\n        this.activatedRoute.snapshot.url[0].path === \"cliente\"\r\n      ) {\r\n        this.user_solucredit = false;\r\n        this.user_id = this.activatedRoute.snapshot.params.id;\r\n      }\r\n    } else {\r\n      this.user_solucredit = true;\r\n      this.dataCurrentuser = JSON.parse(localStorage.getItem(\"Usuario\"));\r\n      this.user_id = this.dataCurrentuser.customer_id;\r\n    }\r\n    await this.getMunicipalities();\r\n    await this.getDepartments();\r\n    await this.getCountries();\r\n    await this.getDataCurrentCustomer();\r\n    await this.getCategories();\r\n    await this.getTypeRequest();\r\n  }\r\n\r\n  async CreateRequest() {\r\n    const myDate = new Date();\r\n    const body = {\r\n      customer_id: this.user_id,\r\n      documents: 0,\r\n      verifications: 0,\r\n      warranties: 0,\r\n      status: 0,\r\n      type: this.createRequest.value.inputTipoSolicitud,\r\n      create_date: myDate,\r\n    };\r\n    await this.mysqlService\r\n      .CreateCustomerRequest(body)\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.toastr.success(\r\n          \"La solicitud fue creada con éxito.\",\r\n          \"Solicitud Creada!\"\r\n        );\r\n        this.router.navigate([`/list-customer`]);\r\n        console.log('response', response);\r\n      })\r\n      .catch((error) => {\r\n        this.toastr.error(\r\n          \"La información fue guardada con exito.\",\r\n          \"Opss!\"\r\n        );\r\n        console.log(\"error\", error);\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void { }\r\n}\r\n","import { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CreateRequestComponent } from \"./create-request.component\";\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"cliente/:id\",\r\n    data: {\r\n      title: \"Crear una nueva solicitud\",\r\n      urls: [\r\n        { title: \"Listado de Clientes\", url: \"/list-customer\" },\r\n        { title: \"Datos de cliente\" },\r\n      ],\r\n    },\r\n    component: CreateRequestComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [CreateRequestComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class DashboardModule {}\r\n"]}