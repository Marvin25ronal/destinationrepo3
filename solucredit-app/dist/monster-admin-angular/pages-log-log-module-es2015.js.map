{"version":3,"sources":["./src/app/pages/log/log.component.ts","./src/app/pages/log/log.component.html","./src/app/pages/log/log.module.ts"],"names":[],"mappings":"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","file":"pages-log-log-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Log } from 'src/app/models/log.model';\r\nimport { LogsService } from 'src/app/services/service.index';\r\nimport { PaginationTableData } from '../../interfaces/ui/pagination-table.interface'\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { UserService } from '../user/servicio/user.service';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { of } from 'rxjs';\r\nimport { NgbDateStruct, NgbCalendar, NgbDateAdapter, NgbDateNativeAdapter, NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst my = new Date();\r\n@Component({\r\n  selector: \"app-log\",\r\n  templateUrl: \"./log.component.html\",\r\n  styleUrls: [\"./ngtable.component.scss\"],\r\n})\r\nexport class LogComponent implements OnInit {\r\n  //--COSAS PARA LOS FILTROS-------\r\n  searchField = [];\r\n  searchItem = [];\r\n  vals: any[] = [null, null, \"\"];\r\n  config = [\r\n    {\r\n      label: \"Rango de fechas:\",\r\n      tipo: \"DATE\",\r\n      range: true,\r\n      labelsAux: [\"Fecha inicio:\", \"Fecha fin\"],\r\n    },\r\n    {\r\n      label: \"Usuario\",\r\n      tipo: \"DROPDOWN\",\r\n      range: false,\r\n      labelsAux: [\"Email\"],\r\n    },\r\n\r\n    {\r\n      tipo: \"OPTIONS\",\r\n      options: {\r\n        restart: true,\r\n        header: false,\r\n      },\r\n    },\r\n  ];\r\n\r\n  /* model: NgbDateStruct;\r\n  date: { year: number; month: number }; */\r\n  //\r\n\r\n  pageSize = 10;\r\n  page = 1;\r\n  totalData = 0;\r\n  Infologsold = [];\r\n  Infologsnew = [];\r\n  newdatacurrentLog = [];\r\n  olddatacurrentLog = [];\r\n  usersData: any = [];\r\n\r\n  dataList: PaginationTableData = {\r\n    metadata: [\r\n      \"Email/Usuario\",\r\n      \"Fecha\",\r\n      \"Hora\",\r\n      \"Acción realizada\",\r\n      \"Ip\",\r\n      \"Info\",\r\n    ],\r\n    data: [],\r\n  };\r\n\r\n  constructor(\r\n    private notifier: NotifierService,\r\n    private _service: LogsService,\r\n    private spinner: NgxSpinnerService,\r\n    private modalService: NgbModal,\r\n    private _userService: UserService\r\n  ) {\r\n    /* this.model = { year: my.getFullYear(), month: my.getMonth() + 1, day: my.getDate() }; */\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.pageSize = 10;\r\n    this._service.getLogs(this.pageSize, 0, [], []).subscribe((logs:any) => {\r\n      this.Infologsnew = [];\r\n      this.Infologsold = [];\r\n      this.dataList.data = logs.logs;\r\n      this.totalData = 50;\r\n      //console.log(\"logs\", logs.logs);\r\n      logs.logs.forEach((element) => {\r\n        console.log(\"old \" + element.old_data);\r\n        if (element.old_data != null && element.old_data != \"\") {\r\n          this.Infologsold.push({\r\n            id: element.user_log_id,\r\n            data: JSON.parse(element.old_data),\r\n          });\r\n        }\r\n        if (element.new_data != null && element.new_data != \"\") {\r\n          this.Infologsnew.push({\r\n            id: element.user_log_id,\r\n            data: JSON.parse(element.new_data),\r\n          });\r\n        }\r\n      });\r\n      this.spinner.hide();\r\n    });\r\n    this.getUsers();\r\n  }\r\n\r\n  getLogs() {\r\n    this.spinner.show();\r\n    this._service\r\n      .getLogs(\r\n        this.pageSize,\r\n        (this.page - 1) * this.pageSize,\r\n        this.searchItem,\r\n        this.searchField\r\n      )\r\n      .pipe(\r\n        map((logs:any) => {\r\n          //console.log(logs.logs);\r\n          this.dataList.data = logs.logs;\r\n          this.totalData = logs.count;\r\n          this.Infologsnew = [];\r\n          this.Infologsold = [];\r\n          this.dataList.data = logs.logs;\r\n          this.totalData = logs.count;\r\n          logs.logs.forEach((element) => {\r\n            console.log(\"old \" + element.old_data);\r\n            if (element.old_data != null && element.old_data != \"\") {\r\n              this.Infologsold.push({\r\n                id: element.user_log_id,\r\n                data: JSON.parse(element.old_data),\r\n              });\r\n            }\r\n            if (element.new_data != null && element.new_data != \"\") {\r\n              this.Infologsnew.push({\r\n                id: element.user_log_id,\r\n                data: JSON.parse(element.new_data),\r\n              });\r\n            }\r\n          });\r\n          this.spinner.hide();\r\n        }),\r\n        catchError((err) => {\r\n          this.notifier.notify(\r\n            \"error\",\r\n            \"Ocurrio un problema con la conexion\" + err\r\n          );\r\n          console.log(err);\r\n          return of();\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n  filter(dataFilter) {\r\n    this.searchField = [];\r\n    this.searchItem = [];\r\n\r\n    if (this.vals[0] && this.vals[1]) {\r\n      this.searchField.push(\"FECINI\");\r\n      let fecini =\r\n        this.vals[0].year +\r\n        \"-\" +\r\n        this.vals[0].month +\r\n        \"-\" +\r\n        this.vals[0].day +\r\n        \" 00:00:00\";\r\n      this.searchItem.push(fecini);\r\n      this.searchField.push(\"FECEND\");\r\n      let fecend =\r\n        this.vals[1].year +\r\n        \"-\" +\r\n        this.vals[1].month +\r\n        \"-\" +\r\n        this.vals[1].day +\r\n        \" 23:59:59\";\r\n      this.searchItem.push(fecend);\r\n    }\r\n\r\n    if (this.vals[2] != \"\") {\r\n      this.searchField.push(\"EMAIL\");\r\n      this.searchItem.push(this.vals[2]);\r\n    }\r\n    this._service\r\n      .getLogs(\r\n        this.pageSize,\r\n        (this.page - 1) * this.pageSize,\r\n        this.searchItem,\r\n        this.searchField\r\n      )\r\n      .pipe(\r\n        map((logs:any) => {\r\n          //console.log(logs.logs);\r\n          this.dataList.data = logs.logs;\r\n          this.totalData = logs.count;\r\n          this.Infologsnew = [];\r\n          this.Infologsold = [];\r\n          logs.logs.forEach((element) => {\r\n            //console.log('old '+ element.old_data);\r\n            if (element.old_data != null && element.old_data != \"\") {\r\n              this.Infologsold.push({\r\n                id: element.user_log_id,\r\n                data: JSON.parse(element.old_data),\r\n              });\r\n            }\r\n            if (element.new_data != null && element.new_data != \"\") {\r\n              this.Infologsnew.push({\r\n                id: element.user_log_id,\r\n                data: JSON.parse(element.new_data),\r\n              });\r\n            }\r\n          });\r\n          this.spinner.hide();\r\n        }),\r\n        catchError((err) => {\r\n          this.notifier.notify(\r\n            \"error\",\r\n            \"Ocurrio un problema con la conexion\" + err\r\n          );\r\n          console.log(err);\r\n          return of();\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n  getUsers() {\r\n    //console.log('LE DI CLICK AL DROPDOWN');\r\n\r\n    this._userService\r\n      .getUsers(1000, 0,[],[])\r\n      .pipe(\r\n        map((users) => {\r\n          this.usersData = users.data.map((item) => ({\r\n            value: item.email,\r\n            text: item.email,\r\n          }));\r\n        }),\r\n        catchError((err) => {\r\n          this.notifier.notify(\r\n            \"error\",\r\n            \"Ocurrio un problema con la conexion\" + err\r\n          );\r\n          console.log(err);\r\n          return of();\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n  pageChange(e) {\r\n    //console.log(e);\r\n\r\n    this.getLogs();\r\n  }\r\n\r\n  closeBtnClick() {\r\n    this.modalService.dismissAll();\r\n  }\r\n  openModal(targetModal, logid) {\r\n    this.newdatacurrentLog = [];\r\n    this.olddatacurrentLog = [];\r\n\r\n    const result1 = this.Infologsold.find((oldlog) => oldlog.id == logid);\r\n    const result2 = this.Infologsnew.find((newlog) => newlog.id == logid);\r\n\r\n    if (result2 != null && result2 != \"\") {\r\n      Object.entries(result2.data).forEach(([key, value]) => {\r\n        this.newdatacurrentLog.push({ key: key, value: value });\r\n      });\r\n    }\r\n    if (result1 != null && result1 != \"\") {\r\n      Object.entries(result1.data).forEach(([key, value]) => {\r\n        this.olddatacurrentLog.push({ key: key, value: value });\r\n      });\r\n    }\r\n    this.modalService.open(targetModal, {\r\n      centered: true,\r\n      backdrop: \"static\",\r\n      keyboard: false,\r\n      size: \"xl\",\r\n    });\r\n  }\r\n}\r\n","<!-- <h1>AQUI ESTAN LOS LOGS</h1>\r\n<app-pagination-table [dataList]=\"logsData\"></app-pagination-table> -->\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n        </ngx-spinner>\r\n        <!--- pagination Table -->\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title mb-0\"><span class=\"lstick\"></span>Bitácora del sistema </h4>\r\n                <!-- <span class=\"card-subtitle\">A continuacion de muestran las entradas en la bitacora del sistema</span> -->\r\n                <app-reportfilters [config]=\"config\" [(vals)]=\"vals\" (onFilter)=\"filter($event)\" [dataset3]=\"usersData\"></app-reportfilters>\r\n\r\n                <table class=\"table table-striped border mt-4\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th *ngFor=\"let header of dataList.metadata\">\r\n\r\n                                {{header}}\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let log of dataList.data\">\r\n                            <td>{{log.user_email}}</td>\r\n                            <td>{{log.time | date: 'dd/MM/yyyy'}}</td>\r\n                            <td>{{log.time | date: 'h:mm a'}}</td>\r\n                            <td>{{log.action | logaction}} {{log.resourcee}}</td>\r\n                            <td>{{log.ip}}</td>\r\n                            <td (click)=\"openModal(infologs,log.user_log_id)\">\r\n                                <b ngbTooltip=\"Dar click para ver más información.\" style=\"cursor: pointer;color: #2162c4;text-decoration: underline;\">{{log.description}}</b>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div class=\"d-flex justify-content-center p-2\">\r\n                    <ngb-pagination [collectionSize]=\"this.totalData\" [pageSize]=\"pageSize\" [(page)]=\"page\" aria-label=\"Default pagination\" (pageChange)=\"pageChange($event)\" [boundaryLinks]=\"true\" [maxSize]=\"7\"></ngb-pagination>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--- End pagination Table -->\r\n\r\n    </div>\r\n</div>\r\n<notifier-container></notifier-container>\r\n\r\n<ng-template #infologs let-modal>\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"editUserLabel\">Información</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"card-block\">\r\n            <table class=\"table table-striped border mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Información actual</th>\r\n                        <th>Información anterior</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"max-width: 220px;white-space: pre-wrap;\">\r\n                            <p *ngFor=\"let datanew of newdatacurrentLog\">\r\n                                <span><b>{{datanew.key}}</b>: {{datanew.value}}</span>\r\n                            </p>\r\n                        </td>\r\n                        <td style=\"max-width: 220px;white-space: pre-wrap;\">\r\n                            <p *ngFor=\"let dataold of olddatacurrentLog\">\r\n                               <span><b>{{dataold.key}}</b>: {{dataold.value}}</span>\r\n                            </p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogComponent } from './log.component';\r\n//import { ComponentsModule } from '../../component/component.module';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n//import { UserModule } from '../user/user.module'\r\nimport { NotifierModule } from 'angular-notifier';\r\nimport { PipesModule } from '../../pipes/pipes.module'\r\nimport { SharedModule } from '../../shared/shared.module'\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Bitácora',\r\n      urls: [\r\n        { title: 'Bitácora', url: '/logs' },\r\n        { title: 'Bitácora' }\r\n      ]\r\n    },\r\n    component: LogComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [FormsModule, CommonModule, NgbModule, NgxSpinnerModule, NotifierModule, PipesModule, SharedModule ,RouterModule.forChild(routes)],\r\n  declarations: [LogComponent]\r\n})\r\nexport class LogModule { }\r\n"],"sourceRoot":"webpack:///"}