{"version":3,"sources":["webpack:///src/app/services/formularios/empresa/perfil.service.ts","webpack:///src/app/services/formularios/individua/solicitud.service.ts"],"names":["httpOptions","headers","responseType","observe","PerfilService","http","newform","idApplication","uri","urlCrearFormularioPerfil","body","idCustomer","profileForm","post","pipe","response","data","idSolicitud","get","providedIn","SolicitudService","applicationID","urlCrearSolitudInidvidual","resp","idAplication","formType","form_type_id","applicationForm","re"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable, Pipe } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders,HttpResponse  } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ProfileForm, SaveFormResponse } from '../../../models/perfil-individual.model';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders(\r\n    {\r\n      'Content-Type': 'application/json',\r\n      /* 'Access-Control-Allow-Credentials': 'true' */\r\n    }),\r\n  responseType: 'json' as const,\r\n  //withCredentials: true as const,  \r\n  observe: 'response' as const\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PerfilService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveForm(newform: ProfileForm,idApplication:number): Observable<ProfileForm>{\r\n    const uri = `${environment.urlCrearFormularioPerfil}`;\r\n\r\n    let body = {\r\n      idCustomer: 1,\r\n      idApplication: idApplication,\r\n      profileForm: newform\r\n    }\r\n\r\n    return this.http.post<SaveFormResponse>(uri, body, httpOptions).pipe(\r\n      map((response) => {\r\n        //console.log('RESP saveFOrm');\r\n        //console.log(response);\r\n        return response.body.data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getForm(idSolicitud: number, idCustomer:number):Observable<ProfileForm>{\r\n    const uri = `${environment.urlCrearFormularioPerfil}?idapplication=${idSolicitud}&idcustomer=${idCustomer}`;\r\n\r\n    return this.http.get<SaveFormResponse>(uri, httpOptions).pipe(\r\n      map((response) => {\r\n        //console.log('RESP getFOrm');\r\n        //console.log(response);\r\n        return response.body.data;\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders,HttpResponse  } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Form, SaveFormResponse } from '../../../models/solicitud-individual.model';\r\n\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders(\r\n    {\r\n      'Content-Type': 'application/json',\r\n      /* 'Access-Control-Allow-Credentials': 'true' */\r\n    }),\r\n  responseType: 'json' as const,\r\n  //withCredentials: true as const,  \r\n  observe: 'response' as const\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SolicitudService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getForm(applicationID: number): Observable<Form> {\r\n    const uri = `${environment.urlCrearSolitudInidvidual}?idapplication=${applicationID}`;\r\n    return this.http.get<SaveFormResponse>(uri, httpOptions).pipe(\r\n      map(resp => {\r\n        //console.log(resp);\r\n        return resp.body.data\r\n      })\r\n    )\r\n  }\r\n\r\n  saveForm(newform: Form, idAplication: number,formType:number): Observable<Form>{\r\n    //console.log('IDAPLICATION::',idAplication);\r\n    newform.form_type_id = formType;\r\n    const uri = `${environment.urlCrearSolitudInidvidual}`;\r\n    let body = {\r\n      idCustomer: 1,\r\n      idAplication: idAplication,\r\n      applicationForm: newform\r\n    }\r\n\r\n    let re = this.http.post<SaveFormResponse>(uri, body, httpOptions).pipe(\r\n      map((response) => {\r\n        //console.log(response);\r\n        return response.body.data;\r\n      })\r\n    );\r\n\r\n    //console.log(re);\r\n    return re;\r\n\r\n  }\r\n}\r\n"]}