{"version":3,"sources":["webpack:///src/app/pages/verification-list-onu/verification-list-onu.component.html","webpack:///src/app/pages/verification-list-onu/verification-list-onu.component.ts","webpack:///src/app/pages/verification-list-onu/verification-list-onu.module.ts"],"names":["VerificationListOnuComponent","modalService","mysqlService","toastr","router","spinner","autorization","data","page","pageSize","cambiarEstadoUsuario","description","required","resource","havePermission","v","filter","x","customer","name","toLowerCase","indexOf","onu","FIRST_NAME","SECOND_NAME","customer_id","DATAID","GetVerificationList","show","GetONUMatch","toPromise","then","res","console","log","cont","forEach","element","splice","hide","err","error","id","idCustomerBlock","status_id","value","reference","idreference","employee_email","localStorage","getItem","userMatch","metadata","fiduciary","representative","UpdateCustomer","subscribe","response","dismissAll","success","targetModal","user","reset","nameCustomerBlock","id_reference","open","centered","backdrop","keyboard","_searchTerm","val","selector","templateUrl","styleUrls","routes","path","title","urls","url","component","DashboardModule","forChild","forRoot","imports","declarations","schemas"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDgC;;;;;;;;AAAiD,kGAA6B,MAA7B,EAA6B,iBAA7B;;;;;;AAEjD;;;;;;;;AAA4E,wGAAoC,MAApC,EAAoC,iBAApC;;;;;;AAC5E;;;;;;;;AAA+C,uGAAoC,MAApC,EAAoC,iBAApC;;;;;;AAE/C;;;;;;;;AAA+E,mGAA+B,MAA/B,EAA+B,kBAA/B;;;;;;AAC/E;;;;;;;;AAA+E,mGAA+B,MAA/B,EAA+B,kBAA/B;;;;;;AAC/E;;;;;;;;AAA+E,mGAA+B,MAA/B,EAA+B,kBAA/B;;;;;;AAC/E;;;;;;;;AAA+E,uGAAmC,MAAnC,EAAmC,kBAAnC;;;;;;AAC/E;;;;;;;;AAA8E,uGAAmC,MAAnC,EAAmC,kBAAnC;;;;;;AAC9E;;;;;;;;AAAkD,uGAAmC,MAAnC,EAAmC,kBAAnC;;;;;;AAuB1D;;AACI;;AAAM;;AAAyB;;AACnC;;;;;;AADU;;AAAA;;;;;;AAEV;;AACI;;AAAM;;AAAyB;;AACnC;;;;;;AADU;;AAAA;;;;;;;;AAIF;;AACI;;AAA+D;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6C;;AAA8B;;AACjG;;AAAO;;AAAQ;;AAC5D;;;;;;;;AACA;;AACI;;AAAgE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;AAA+B;;AACpG;;AAAO;;AAAW;;AAChE;;;;;;AAtDZ;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACJ;;AAEJ;;AACA;;AACI;;;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAKA;;AAGA;;AAGA;;AACI;;AACI;;AAIA;;AAIJ;;AAGJ;;AACJ;;;;;;;;AA3D4F;;AAErE;;AAAA,yGAAoC,MAApC,EAAoC,iBAApC;;AAII;;AAAA;;AAE6B;;AAAA;;AAC7B;;AAAA;;AAE6B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AAC5B;;AAAA;;AAKnB;;AAAA;;AAGe;;AAAA,+FAA0B,MAA1B,EAA0B,iBAA1B;;AAGA;;AAAA,mGAA8B,MAA9B,EAA8B,iBAA9B;;AAGA;;AAAA,oGAA+B,MAA/B,EAA+B,iBAA/B;;AAGA;;AAAA;;AAMiD;;AAAA;;AAGA;;AAAA;;AAKzB;;AAAA;;AAIA;;AAAA;;;;;;;;AAYnD;;AAA0E;AAAA;;AAAA;;AAAA;AAAA;;AAC1E;;;;;;AAD6B,+EAAa,gBAAb,EAAa,kBAAb,EAAa,MAAb,EAAa,WAAb,EAAa,UAAb,EAAa,eAAb;;;;;;AA2BjB;;AAA4M;;AACvI;;;;;;;;AArB7F;;AAEI;;AAA2C;;AAAuB;;AAElE;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAChC;;AAAyB;;AAAO;;AACpC;;AAEJ;;AACA;;AACI;;AAAwB;;AAAkD;;AAC1E;;AAAiE;AAAA;;AAAA;;AAAA;AAAA;;AAC7D;;AACI;;AACI;;AACI;;AACI;;AAA2C;;AAAW;;AACtD;;AACI;;AACJ;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACA;;AACI;;AACI;;AAAyI;;AAAS;;AAClJ;;AAA6F;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAQ;;AACnI;;AACJ;;AACJ;;AAKJ;;;;;;AA5B4B;;AAAA;;AAClB;;AAAA;;AAS6D;;AAAA;;AASyC;;AAAA;;;;;;AA+BpF;;AAA4M;;AACvI;;;;;;;;AAlBjG;;AACI;;AAA2C;;AAAmB;;AAC9D;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAChC;;AAAyB;;AAAO;;AACpC;;AACJ;;AACA;;AACI;;AACI;;AAAiE;AAAA;;AAAA;;AAAA;AAAA;;AAC7D;;AACI;;AACI;;AACI;;AACI;;AAA2C;;AAAW;;AACtD;;AACI;;AACJ;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACA;;AACI;;AACI;;AAAyI;;AAAS;;AAClJ;;AAA6F;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAQ;;AACnI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAxBc;;AAAA;;AAS6D;;AAAA;;AASyC;;AAAA;;;;QC3K3GA,4B;;;AASX,4CACUC,YADV,EAEUC,YAFV,EAGUC,MAHV,EAIUC,MAJV,EAKUC,OALV,EAMUC,YANV,EAM4C;AAAA;;AALlC,aAAAL,YAAA,GAAAA,YAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AAdV,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,CAAP;AACA,aAAAC,QAAA,GAAW,EAAX;AAwBA,aAAAC,oBAAA,GAAuB,IAAI,wDAAJ,CAAc;AACnCC,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,CAApB;AADsB,SAAd,CAAvB;AAXI;;;;qCAEM;AACR,cAAIC,QAAQ,GAAG,KAAf;AACA,iBAAO,KAAKP,YAAL,CAAkBQ,cAAlB,CAAiCD,QAAjC,EAA2C,SAA3C,CAAP;AACD;;;mCACO;AACN,cAAIA,QAAQ,GAAG,KAAf;AACA,iBAAO,KAAKP,YAAL,CAAkBQ,cAAlB,CAAiCD,QAAjC,EAA2C,OAA3C,CAAP;AACD;;;+BAeME,C,EAAW;AAChB;AACA,cAAIA,CAAC,KAAK,EAAV,EAAc;AACZ,mBAAO,KAAKR,IAAL,CAAUS,MAAV,CACL,UAACC,CAAD;AAAA,qBACEA,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBC,WAAhB,GAA8BC,OAA9B,CAAsCN,CAAC,CAACK,WAAF,EAAtC,MAA2D,CAAC,CAA5D,IACAH,CAAC,CAACK,GAAF,CAAMC,UAAN,CAAiBH,WAAjB,GAA+BC,OAA/B,CAAuCN,CAAC,CAACK,WAAF,EAAvC,MAA4D,CAAC,CAD7D,IAEAH,CAAC,CAACK,GAAF,CAAME,WAAN,CAAkBJ,WAAlB,GAAgCC,OAAhC,CAAwCN,CAAC,CAACK,WAAF,EAAxC,MAA6D,CAAC,CAF9D,IAGAH,CAAC,CAACC,QAAF,CAAWO,WAAX,IAA0BV,CAH1B,IAIAE,CAAC,CAACK,GAAF,CAAMI,MAAN,IAAgBX,CALlB;AAAA;AAMA;AAPK,aAAP;AASD,WAVD,MAUO;AACL,iBAAKY,mBAAL;AACD;AACF;;;8CAE2B;;;;;;;;;;AAC1B,yBAAKtB,OAAL,CAAauB,IAAb;;AACA,2BAAM,KAAK1B,YAAL,CACH2B,WADG,GAEHC,SAFG,GAGHC,IAHG,CAGE,UAACC,GAAD,EAAS;AACbC,6BAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,GAAlB;AACA,0BAAIG,IAAI,GAAG,CAAX;AACA,2BAAI,CAAC5B,IAAL,GAAYyB,GAAG,CAACzB,IAAhB;;AACA,2BAAI,CAACA,IAAL,CAAU6B,OAAV,CAAkB,UAAAC,OAAO,EAAI;AAE3B,4BAAGA,OAAO,CAACnB,QAAR,IAAoB,IAAvB,EAA4B;AAC1B,+BAAI,CAACX,IAAL,CAAU+B,MAAV,CAAiBH,IAAjB,EAAsBA,IAAtB;AACD;;AACDA,4BAAI;AAEL,uBAPD,EAJa,CAYb;;;AACA,2BAAI,CAAC9B,OAAL,CAAakC,IAAb;AACD,qBAjBG,WAkBG,UAACC,GAAD,EAAS;AACd,2BAAI,CAACrC,MAAL,CAAYsC,KAAZ,CAAkB,4BAAlB,EAAgD,OAAhD;;AACA,2BAAI,CAACpC,OAAL,CAAakC,IAAb;AACD,qBArBG,CAAN;;;;;;;;;AAsBD;;;oCAEW;AAAA;;AACV,eAAKlC,OAAL,CAAauB,IAAb,CAAkB,UAAlB;AACA,cAAIc,EAAE,GAAG,KAAKC,eAAd,CAFU,CAGX;;AACC,cAAIpC,IAAI,GAAG;AACTqC,qBAAS,EAAE,CADF;AAETjC,uBAAW,EAAE,KAAKD,oBAAL,CAA0BmC,KAA1B,CAAgClC,WAFpC;AAGTmC,qBAAS,EAAE,KAAKC,WAHP;AAITC,0BAAc,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAJP,WAAX;;AAOA,cAAG,KAAKC,SAAL,CAAeC,QAAf,CAAwBC,SAA3B,EAAqC;AACnC;AACA9C,gBAAI,GAAG,MAAH,OAAG,CAAH,kBAAOA,IAAP,CAAG,EAAQ;AAAC8C,uBAAS,EAAC,KAAKF,SAAL,CAAeC,QAAf,CAAwBC;AAAnC,aAAR,CAAP;AACD,WAHD,MAIK,IAAG,KAAKF,SAAL,CAAeC,QAAf,CAAwBE,cAA3B,EAA0C;AAC7C;AACA/C,gBAAI,GAAG,MAAH,OAAG,CAAH,kBAAOA,IAAP,CAAG,EAAQ;AAAC+C,4BAAc,EAAC,KAAKH,SAAL,CAAeC,QAAf,CAAwBE;AAAxC,aAAR,CAAP;AAED;;AACD,eAAKpD,YAAL,CACGqD,cADH,CAEIhD,IAFJ,EAGI,KAAKoC,eAHT,EAKGa,SALH,CAMI,UAACC,QAAD,EAAc;AACZ,kBAAI,CAAC9B,mBAAL;;AACA,kBAAI,CAAC1B,YAAL,CAAkByD,UAAlB;;AACA,kBAAI,CAACvD,MAAL,CAAYwD,OAAZ,CAAoB,wBAApB,EAA8C,oBAA9C;;AACA,kBAAI,CAACtD,OAAL,CAAakC,IAAb,CAAkB,UAAlB;AACD,WAXL,EAYI,UAACE,KAAD,EAAW;AACT,kBAAI,CAACtC,MAAL,CAAYsC,KAAZ,CAAkB,mCAAlB,EAAuD,OAAvD;;AACAR,mBAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,kBAAI,CAAC7B,OAAL,CAAakC,IAAb,CAAkB,UAAlB;AACD,WAhBL;AAkBD;;;qCAEY;AAAA;;AACX,cAAIG,EAAE,GAAG,KAAKC,eAAd;AACA,eAAKtC,OAAL,CAAauB,IAAb,CAAkB,UAAlB;AACA,cAAIrB,IAAI,GAAG;AACTqC,qBAAS,EAAE,CADF;AAETjC,uBAAW,EAAE,KAAKD,oBAAL,CAA0BmC,KAA1B,CAAgClC,WAFpC;AAGTmC,qBAAS,EAAE,KAAKC,WAHP;AAITC,0BAAc,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAJP,WAAX,CAHW,CAUX;;AACA,cAAG,KAAKC,SAAL,CAAeC,QAAf,CAAwBC,SAA3B,EAAqC;AACnC;AACA9C,gBAAI,GAAG,MAAH,OAAG,CAAH,kBAAOA,IAAP,CAAG,EAAQ;AAAC8C,uBAAS,EAAC,KAAKF,SAAL,CAAeC,QAAf,CAAwBC;AAAnC,aAAR,CAAP;AACD,WAHD,MAIK,IAAG,KAAKF,SAAL,CAAeC,QAAf,CAAwBE,cAA3B,EAA0C;AAC7C;AACA/C,gBAAI,GAAG,MAAH,OAAG,CAAH,kBAAOA,IAAP,CAAG,EAAQ;AAAC+C,4BAAc,EAAC,KAAKH,SAAL,CAAeC,QAAf,CAAwBE;AAAxC,aAAR,CAAP;AAED;;AACD,eAAKpD,YAAL,CACGqD,cADH,CAEIhD,IAFJ,EAGImC,EAHJ,EAKGc,SALH,CAMI,UAACC,QAAD,EAAc;AACZ,kBAAI,CAACxD,YAAL,CAAkByD,UAAlB;;AACA,kBAAI,CAAC/B,mBAAL;;AACA,kBAAI,CAACxB,MAAL,CAAYwD,OAAZ,CACE,2BADF,EAEE,uBAFF;;AAIA,kBAAI,CAACtD,OAAL,CAAakC,IAAb,CAAkB,UAAlB;AACD,WAdL,EAeI,UAACE,KAAD,EAAW;AACT,kBAAI,CAACtC,MAAL,CAAYsC,KAAZ,CAAkB,sCAAlB,EAA0D,OAA1D;;AACAR,mBAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,kBAAI,CAAC7B,OAAL,CAAakC,IAAb,CAAkB,UAAlB;AACD,WAnBL;AAqBD;;;mCAEUqB,W,EAAYC,I,EAAM;AAC3B;AACA,eAAKV,SAAL,GAAiBU,IAAjB,CAF2B,CAG3B;;AACA,eAAKnD,oBAAL,CAA0BoD,KAA1B,CAAgC,EAAhC;AACA,eAAKnB,eAAL,GAAuBkB,IAAI,CAAC3C,QAAL,CAAcO,WAArC;AACA,eAAKsC,iBAAL,GAAyBF,IAAI,CAAC3C,QAAL,CAAcC,IAAvC;AACA,eAAK4B,WAAL,GAAmBc,IAAI,CAACvC,GAAL,CAAS0C,YAA5B;AAEA,eAAK/D,YAAL,CAAkBgE,IAAlB,CAAuBL,WAAvB,EAAoC;AAClCM,oBAAQ,EAAE,IADwB;AAElCC,oBAAQ,EAAE,QAFwB;AAGlCC,oBAAQ,EAAE;AAHwB,WAApC;AAKD;;;wCAEe;AACd;AACA,eAAKnE,YAAL,CAAkByD,UAAlB;AACD;;;mCAEgB;;;;;;;;;AACf,2BAAM,KAAK/B,mBAAL,EAAN;;;;;;;;;AACD;;;4BA7Ja;AACZ,iBAAO,KAAK0C,WAAZ;AACD,S;0BACcC,G,EAAa;AAC1B,eAAKD,WAAL,GAAmBC,GAAnB;AACA,eAAK/D,IAAL,GAAY,KAAKS,MAAL,CAAYsD,GAAZ,CAAZ;AACD;;;;;;;uBAtCUtE,4B,EAA4B,oI,EAAA,2I,EAAA,yH,EAAA,uH,EAAA,8H,EAAA,qJ;AAAA,K;;;YAA5BA,4B;AAA4B,gD;AAAA,e;AAAA,a;AAAA,kzF;AAAA;AAAA;ADbzC;;AACI;;AACI;;AACI;;AAAuC;;AAAuB;;AAClE;;AACA;;AACI;;AAAyC;;AAAuB;;AACpE;;AACA;;AACI;;AAAyC;;AAA0B;;AACvE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACQ;;AACJ;;AACR;;AACA;;AAAO;AAAA;AAAA;;AAAP;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAe;;AAC/B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAQ;;AAC5B;;AACJ;;AACA;;AACI;;;;AA4DJ;;AACJ;;AACA;;AACI;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AA2CA;;;;AAvIuC;;AAAA;;AAuBf;;AAAA;;AA+DQ;;AAAA;;;;;;;;;;sEC/FnBA,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACTuE,kBAAQ,EAAE,2BADD;AAETC,qBAAW,EAAE,wCAFJ;AAGTC,mBAAS,EAAE,CAAC,uCAAD;AAHF,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEpE,UAAI,EAAE;AACJqE,aAAK,EAAE,0BADH;AAEJC,YAAI,EAAE,CACJ;AAAED,eAAK,EAAE,SAAT;AAAoBE,aAAG,EAAE;AAAzB,SADI,EAEJ;AAAEF,eAAK,EAAE;AAAT,SAFI;AAFF,OAFR;AASEG,eAAS,EAAE;AATb,KADqB,CAAvB;;QA2BaC,e;;;;;YAAAA;;;;yBAAAA,e;AAAe,O;AAAA,gBAZjB,CACP,0DADO,EAEP,4DAFO,EAGP,kEAHO,EAIP,6DAAaC,QAAb,CAAsBP,MAAtB,CAJO,EAKP,oEALO,EAMP,4DANO,EAOP,sDAAYQ,OAAZ,EAPO,CAYiB;;;;0HAAfF,e,EAAe;AAAA,uBAHX,6FAGW;AAHiB,kBARzC,0DAQyC,EAPzC,4DAOyC,EANzC,kEAMyC,EANtB,4DAMsB,EAJzC,oEAIyC,EAHzC,4DAGyC,EAHzB,qDAGyB;AAGjB,O;AANR,K;;;;;sEAMPA,e,EAAe;cAb3B,sDAa2B;eAblB;AACRG,iBAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,kEAHO,EAIP,6DAAaF,QAAb,CAAsBP,MAAtB,CAJO,EAKP,oEALO,EAMP,4DANO,EAOP,sDAAYQ,OAAZ,EAPO,CADD;AAURE,sBAAY,EAAE,CAAC,6FAAD,CAVN;AAWRC,iBAAO,EAAE,CAAC,oEAAD;AAXD,S;AAakB,Q","file":"pages-verification-list-onu-verification-list-onu-module-es5.js","sourcesContent":["<div class=\"col-12\">\r\n    <div class=\"card card-body\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n        </ngx-spinner>\r\n        <ngx-spinner name=\"busuario\" bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-atom\">\r\n            <p style=\"font-size: 20px;color: white\"> Bloqueando usuario ... </p>\r\n        </ngx-spinner>\r\n        <ngx-spinner name=\"dusuario\" bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-atom\">\r\n            <p style=\"font-size: 20px;color: white\"> Desbloqueando usuario ... </p>\r\n        </ngx-spinner>\r\n        <div class=\"d-flex mb-3 mt-3\">\r\n            <form class=\"m-t-20\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-lg-12\">\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"input-group col-sm-12\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                            <i class=\"ti-search\"></i>\r\n                                        </span>\r\n                                </div>\r\n                                <input [(ngModel)]=\"searchTerm\" class=\"form-control\" name=\"buscador\" placeholder=\"Buscar\" type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"table-responsive table-bordered\">\r\n            <table class=\"table table-striped mb-0 v-middle\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Código cliente</th>\r\n                        <th scope=\"col\">Nombre Completo</th>\r\n                        <th scope=\"col\">Validación</th>\r\n                        <th scope=\"col\">DATAID</th>\r\n                        <th scope=\"col\">FIRST_NAME</th>\r\n                        <th scope=\"col\">SECOND_NAME</th>\r\n                        <th scope=\"col\">COMMENT</th>\r\n                        <th scope=\"col\">COMENTARIO</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let user of data | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\" [hidden]=\"user.customer == null\">\r\n                        <td>\r\n                            <ngb-highlight [result]=\"user.customer.customer_id\" [term]=\"searchTerm\"></ngb-highlight>\r\n                        </td>\r\n                        <td>\r\n                            <div style=\"max-width: 150px; width:150px;word-wrap: break-word;\">\r\n                                <ngb-highlight *ngIf=\"user.customer.customer_id\" [result]=\"user.customer.name\" [term]=\"searchTerm\"></ngb-highlight>\r\n\r\n                                <ngb-highlight style=\"padding-right: 4px; \" *ngIf=\"user.customer.person_id\" [result]=\"user.customer.first_name \" [term]=\"searchTerm\"></ngb-highlight>\r\n                                <ngb-highlight *ngIf=\"user.customer.person_id\" [result]=\" user.customer.last_name \" [term]=\"searchTerm\"></ngb-highlight>\r\n\r\n                                <ngb-highlight style=\"padding-right: 4px; \" *ngIf=\"user.customer.id_fiduciary\" [result]=\"user.customer.name1 \" [term]=\"searchTerm\"></ngb-highlight>\r\n                                <ngb-highlight style=\"padding-right: 4px; \" *ngIf=\"user.customer.id_fiduciary\" [result]=\"user.customer.name2 \" [term]=\"searchTerm\"></ngb-highlight>\r\n                                <ngb-highlight style=\"padding-right: 4px; \" *ngIf=\"user.customer.id_fiduciary\" [result]=\"user.customer.name3 \" [term]=\"searchTerm\"></ngb-highlight>\r\n                                <ngb-highlight style=\"padding-right: 4px; \" *ngIf=\"user.customer.id_fiduciary\" [result]=\"user.customer.lastname1 \" [term]=\"searchTerm\"></ngb-highlight>\r\n                                <ngb-highlight style=\"padding-right: 4px;\" *ngIf=\"user.customer.id_fiduciary\" [result]=\"user.customer.lastname2 \" [term]=\"searchTerm\"></ngb-highlight>\r\n                                <ngb-highlight *ngIf=\"user.customer.id_fiduciary\" [result]=\"user.customer.lastname3 \" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n\r\n                        </td>\r\n                        <td>\r\n                            {{user.date | date: 'dd/MM/yyyy'}}\r\n                        </td>\r\n                        <td>\r\n                            <ngb-highlight [result]=\"user.onu.DATAID\" [term]=\"searchTerm\"></ngb-highlight>\r\n                        </td>\r\n                        <td>\r\n                            <ngb-highlight [result]=\"user.onu.FIRST_NAME\" [term]=\"searchTerm\"></ngb-highlight>\r\n                        </td>\r\n                        <td>\r\n                            <ngb-highlight [result]=\"user.onu.SECOND_NAME\" [term]=\"searchTerm\"></ngb-highlight>\r\n                        </td>\r\n                        <td style=\"width: 200px !important;white-space: normal !important;\">\r\n                            <ngb-highlight [result]=\"user.onu.COMMENTS1\"></ngb-highlight>\r\n                        </td>\r\n                        <!-- <td style=\"width: 200px !important;white-space: normal !important;\" *ngIf=\"user.customer.customer_id\">\r\n                            <span *ngIf=\"user.customer.status_id === 1\">{{user.description_lock}}</span>\r\n                            <span *ngIf=\"user.customer.status_id === 0\">{{user.description_unlock}}</span>\r\n                        </td> -->\r\n                        <td style=\"width: 200px !important;white-space: normal !important;\" *ngIf=\"user.customer.person_id\">\r\n                            <span>{{user.description_lock}}</span>\r\n                        </td>\r\n                        <td style=\"width: 200px !important;white-space: normal !important;\" *ngIf=\"user.customer.id_fiduciary\">\r\n                            <span>{{user.description_lock}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <div style=\"display: flex;flex-direction: column;\">\r\n                                <ng-container style=\"flex-grow: 1\" *ngIf=\"canBlock()\">\r\n                                    <button class=\"btn text-white btn-danger btn-sm\" type=\"button\" (click)=\"openModal2(this.confirmblock,user)\"><span class=\"btn-label m-r-5\"><i\r\n                                            class=\"far fa-times-circle\" ></i></span>Bloquear</button>\r\n                                </ng-container>\r\n                                <ng-container style=\"flex-grow: 1\" *ngIf=\"canUnblock()\">\r\n                                    <button class=\"btn text-white custom_btn1 btn-sm\" type=\"button\" (click)=\"openModal2(this.unlockcustomer,user)\"><span class=\"btn-label m-r-5\" ><i\r\n                                            class=\" far fa-check-circle\" ></i></span>Desbloquear</button>\r\n                                </ng-container>\r\n                            </div>\r\n\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"d-flex justify-content-center p-2\">\r\n                <ngb-pagination *ngIf=\"data\" [maxSize]=\"5\" [collectionSize]=\"data.length\" [(page)]=\"page\" [pageSize]=\"pageSize\">\r\n                </ngb-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #confirmblock let-modal>\r\n    <div class=\"modal-header\">\r\n\r\n        <h5 class=\"modal-title\" id=\"editUserLabel\">Confirmación de bloqueo</h5>\r\n\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <h4 class=\"text-center\">¿Desea Bloquear al usuario: {{nameCustomerBlock}}?</h4>\r\n        <form [formGroup]=\"cambiarEstadoUsuario\" class=\"form-horizontal\" (ngSubmit)=\"BlockUser()\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-lg-12\">\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"description\" class=\"col-sm-12\">Descripción</label>\r\n                            <div class=\"input-group col-sm-12\">\r\n                                <textarea class=\"form-control\" style=\"width: 100%;\" id=\"description\" formControlName=\"description\"></textarea>\r\n                            </div>\r\n                            <small class=\"form-text text-danger col-sm-12\" *ngIf=\"!cambiarEstadoUsuario.get('description').valid && (cambiarEstadoUsuario.get('description').dirty || cambiarEstadoUsuario.get('description').touched)\">La\r\n                                                                        información es requerida.</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"card-body\">\r\n                <div class=\"form-group m-b-0 text-left\">\r\n                    <button type=\"submit\" class=\"btn btn-raised mr-1 text-white\" style=\"background-color: #3473da;\" [disabled]=\"!cambiarEstadoUsuario.valid\">Confirmar</button>\r\n                    <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <!-- <div class=\"card-body div-con-flex-col div-confirmation\">\r\n            <button type=\"submit\" class=\"btn btn-raised mr-1 text-white\" style=\"background-color: #3473da;\" (click)=\"BlockUser()\">Confirmar Bloqueo</button>\r\n            <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Regresar</button>\r\n        </div> -->\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #unlockcustomer let-modal>\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"editUserLabel\">Desbloquear usuario</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"card-block\">\r\n            <form [formGroup]=\"cambiarEstadoUsuario\" class=\"form-horizontal\" (ngSubmit)=\"UnlockUser()\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-lg-12\">\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"description\" class=\"col-sm-12\">Descripción</label>\r\n                                <div class=\"input-group col-sm-12\">\r\n                                    <textarea class=\"form-control\" style=\"width: 100%;\" id=\"description\" formControlName=\"description\"></textarea>\r\n                                </div>\r\n                                <small class=\"form-text text-danger col-sm-12\" *ngIf=\"!cambiarEstadoUsuario.get('description').valid && (cambiarEstadoUsuario.get('description').dirty || cambiarEstadoUsuario.get('description').touched)\">La\r\n                                                                            información es requerida.</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group m-b-0 text-left\">\r\n                        <button type=\"submit\" class=\"btn btn-raised mr-1 text-white\" style=\"background-color: #3473da;\" [disabled]=\"!cambiarEstadoUsuario.valid\">Confirmar</button>\r\n                        <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MysqlService } from '../../services/mysql/mysql.service';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: \"app-verification-list-onu\",\r\n  templateUrl: \"./verification-list-onu.component.html\",\r\n  styleUrls: [\"./verification-list-onu.component.css\"],\r\n})\r\nexport class VerificationListOnuComponent implements OnInit {\r\n  data = [];\r\n  page = 1;\r\n  pageSize = 10;\r\n  currentUser;\r\n  idCustomerBlock;\r\n  nameCustomerBlock;\r\n  idreference;\r\n  userMatch: any;\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private mysqlService: MysqlService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private autorization: AuthorizationService\r\n  ) {}\r\n\r\n  canUnblock(): boolean {\r\n    let resource = \"ONU\";\r\n    return this.autorization.havePermission(resource, \"UNBLOCK\");\r\n  }\r\n  canBlock(): boolean {\r\n    let resource = \"ONU\";\r\n    return this.autorization.havePermission(resource, \"BLOCK\");\r\n  }\r\n\r\n  cambiarEstadoUsuario = new FormGroup({\r\n    description: new FormControl(\"\", [Validators.required]),\r\n  });\r\n\r\n  _searchTerm: string;\r\n  get searchTerm(): string {\r\n    return this._searchTerm;\r\n  }\r\n  set searchTerm(val: string) {\r\n    this._searchTerm = val;\r\n    this.data = this.filter(val);\r\n  }\r\n\r\n  filter(v: string) {\r\n    //console.log(v);\r\n    if (v !== \"\") {\r\n      return this.data.filter(\r\n        (x) =>\r\n          x.customer.name.toLowerCase().indexOf(v.toLowerCase()) !== -1 ||\r\n          x.onu.FIRST_NAME.toLowerCase().indexOf(v.toLowerCase()) !== -1 ||\r\n          x.onu.SECOND_NAME.toLowerCase().indexOf(v.toLowerCase()) !== -1 ||\r\n          x.customer.customer_id == v ||\r\n          x.onu.DATAID == v\r\n        /*x.address2.toLowerCase().indexOf(v.toLowerCase()) !== -1*/\r\n      );\r\n    } else {\r\n      this.GetVerificationList();\r\n    }\r\n  }\r\n\r\n  async GetVerificationList() {\r\n    this.spinner.show();\r\n    await this.mysqlService\r\n      .GetONUMatch()\r\n      .toPromise()\r\n      .then((res) => {\r\n        console.log('res',res);\r\n        let cont = 0;\r\n        this.data = res.data;\r\n        this.data.forEach(element => {\r\n          \r\n          if(element.customer == null){\r\n            this.data.splice(cont,cont);\r\n          }\r\n          cont++;\r\n          \r\n        });\r\n        //console.log(\"res\", this.data);\r\n        this.spinner.hide();\r\n      })\r\n      .catch((err) => {\r\n        this.toastr.error(\"Problemas con el servidor.\", \"Oops!\");\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  BlockUser() {\r\n    this.spinner.show(\"busuario\");\r\n    let id = this.idCustomerBlock;\r\n   // this.spinner.show(\"dusuario\");\r\n    let data = {\r\n      status_id: 1,\r\n      description: this.cambiarEstadoUsuario.value.description,\r\n      reference: this.idreference,\r\n      employee_email: localStorage.getItem(\"email\"),\r\n      \r\n    };\r\n    if(this.userMatch.metadata.fiduciary){\r\n      //@ts-ignore\r\n      data = {...data,fiduciary:this.userMatch.metadata.fiduciary};\r\n    }\r\n    else if(this.userMatch.metadata.representative){\r\n      //@ts-ignore\r\n      data = {...data,representative:this.userMatch.metadata.representative};\r\n\r\n    }\r\n    this.mysqlService\r\n      .UpdateCustomer(\r\n        data,\r\n        this.idCustomerBlock\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          this.GetVerificationList();\r\n          this.modalService.dismissAll();\r\n          this.toastr.success(\"Se bloqueo el usuario.\", \"Usuario Bloqueado!\");\r\n          this.spinner.hide(\"busuario\");\r\n        },\r\n        (error) => {\r\n          this.toastr.error(\"Problemas al bloquear el usuario.\", \"Oops!\");\r\n          console.log(\"error\");\r\n          this.spinner.hide(\"busuario\");\r\n        }\r\n      );\r\n  }\r\n\r\n  UnlockUser() {\r\n    let id = this.idCustomerBlock;\r\n    this.spinner.show(\"dusuario\");\r\n    let data = {\r\n      status_id: 0,\r\n      description: this.cambiarEstadoUsuario.value.description,\r\n      reference: this.idreference,\r\n      employee_email: localStorage.getItem(\"email\"),\r\n      \r\n    };\r\n    //console.log('UNLOCK',this.userMatch);\r\n    if(this.userMatch.metadata.fiduciary){\r\n      //@ts-ignore\r\n      data = {...data,fiduciary:this.userMatch.metadata.fiduciary};\r\n    }\r\n    else if(this.userMatch.metadata.representative){\r\n      //@ts-ignore\r\n      data = {...data,representative:this.userMatch.metadata.representative};\r\n\r\n    }\r\n    this.mysqlService\r\n      .UpdateCustomer(\r\n        data,\r\n        id\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          this.modalService.dismissAll();\r\n          this.GetVerificationList();\r\n          this.toastr.success(\r\n            \"Se desbloqueo el usuario.\",\r\n            \"Usuario Desbloqueado!\"\r\n          );\r\n          this.spinner.hide(\"dusuario\");\r\n        },\r\n        (error) => {\r\n          this.toastr.error(\"Problemas al desbloquear el usuario.\", \"Oops!\");\r\n          console.log(\"error\");\r\n          this.spinner.hide(\"dusuario\");\r\n        }\r\n      );\r\n  }\r\n\r\n  openModal2(targetModal,user) {\r\n    //console.log(user);\r\n    this.userMatch = user;\r\n    //this.confirmblock,user.customer.customer_id,user.customer.name, user.onu.id_reference\r\n    this.cambiarEstadoUsuario.reset({});\r\n    this.idCustomerBlock = user.customer.customer_id;\r\n    this.nameCustomerBlock = user.customer.name;\r\n    this.idreference = user.onu.id_reference;\r\n      \r\n    this.modalService.open(targetModal, {\r\n      centered: true,\r\n      backdrop: \"static\",\r\n      keyboard: false,\r\n    });\r\n  }\r\n\r\n  closeBtnClick() {\r\n    //console.log('Se va a cerrar el modal');\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await this.GetVerificationList();\r\n  }\r\n}\r\n","import { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { VerificationListOnuComponent } from \"./verification-list-onu.component\";\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { QuillModule } from \"ngx-quill\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    data: {\r\n      title: \"Verificación de clientes\",\r\n      urls: [\r\n        { title: \"Tablero\", url: \"/dashboard\" },\r\n        { title: \"Clientes en lista ONU\" },\r\n      ],\r\n    },\r\n    component: VerificationListOnuComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    QuillModule.forRoot(),\r\n  ],\r\n  declarations: [VerificationListOnuComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class DashboardModule {}\r\n"]}