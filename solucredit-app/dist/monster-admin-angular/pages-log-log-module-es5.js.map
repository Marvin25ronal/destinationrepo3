{"version":3,"sources":["webpack:///src/app/pages/log/log.component.ts","webpack:///src/app/pages/log/log.component.html","webpack:///src/app/pages/log/log.module.ts"],"names":["my","Date","LogComponent","notifier","_service","spinner","modalService","_userService","searchField","searchItem","vals","config","label","tipo","range","labelsAux","options","restart","header","pageSize","page","totalData","Infologsold","Infologsnew","newdatacurrentLog","olddatacurrentLog","usersData","dataList","metadata","data","show","getLogs","subscribe","logs","forEach","element","console","log","old_data","push","id","user_log_id","JSON","parse","new_data","hide","getUsers","pipe","count","err","notify","dataFilter","fecini","year","month","day","fecend","users","map","item","value","email","text","e","dismissAll","targetModal","logid","result1","find","oldlog","result2","newlog","Object","entries","key","open","centered","backdrop","keyboard","size","filter","pageChange","selector","templateUrl","styleUrls","routes","path","title","urls","url","component","LogModule","forChild","imports","declarations"],"mappings":"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","file":"pages-log-log-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Log } from 'src/app/models/log.model';\r\nimport { LogsService } from 'src/app/services/service.index';\r\nimport { PaginationTableData } from '../../interfaces/ui/pagination-table.interface'\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { UserService } from '../user/servicio/user.service';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { of } from 'rxjs';\r\nimport { NgbDateStruct, NgbCalendar, NgbDateAdapter, NgbDateNativeAdapter, NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst my = new Date();\r\n@Component({\r\n  selector: \"app-log\",\r\n  templateUrl: \"./log.component.html\",\r\n  styleUrls: [\"./ngtable.component.scss\"],\r\n})\r\nexport class LogComponent implements OnInit {\r\n  //--COSAS PARA LOS FILTROS-------\r\n  searchField = [];\r\n  searchItem = [];\r\n  vals: any[] = [null, null, \"\"];\r\n  config = [\r\n    {\r\n      label: \"Rango de fechas:\",\r\n      tipo: \"DATE\",\r\n      range: true,\r\n      labelsAux: [\"Fecha inicio:\", \"Fecha fin\"],\r\n    },\r\n    {\r\n      label: \"Usuario\",\r\n      tipo: \"DROPDOWN\",\r\n      range: false,\r\n      labelsAux: [\"Email\"],\r\n    },\r\n\r\n    {\r\n      tipo: \"OPTIONS\",\r\n      options: {\r\n        restart: true,\r\n        header: false,\r\n      },\r\n    },\r\n  ];\r\n\r\n  /* model: NgbDateStruct;\r\n  date: { year: number; month: number }; */\r\n  //\r\n\r\n  pageSize = 10;\r\n  page = 1;\r\n  totalData = 0;\r\n  Infologsold = [];\r\n  Infologsnew = [];\r\n  newdatacurrentLog = [];\r\n  olddatacurrentLog = [];\r\n  usersData: any = [];\r\n\r\n  dataList: PaginationTableData = {\r\n    metadata: [\r\n      \"Email/Usuario\",\r\n      \"Fecha\",\r\n      \"Hora\",\r\n      \"Acción realizada\",\r\n      \"Ip\",\r\n      \"Info\",\r\n    ],\r\n    data: [],\r\n  };\r\n\r\n  constructor(\r\n    private notifier: NotifierService,\r\n    private _service: LogsService,\r\n    private spinner: NgxSpinnerService,\r\n    private modalService: NgbModal,\r\n    private _userService: UserService\r\n  ) {\r\n    /* this.model = { year: my.getFullYear(), month: my.getMonth() + 1, day: my.getDate() }; */\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.pageSize = 10;\r\n    this._service.getLogs(this.pageSize, 0, [], []).subscribe((logs:any) => {\r\n      this.Infologsnew = [];\r\n      this.Infologsold = [];\r\n      this.dataList.data = logs.logs;\r\n      this.totalData = 50;\r\n      //console.log(\"logs\", logs.logs);\r\n      logs.logs.forEach((element) => {\r\n        console.log(\"old \" + element.old_data);\r\n        if (element.old_data != null && element.old_data != \"\") {\r\n          this.Infologsold.push({\r\n            id: element.user_log_id,\r\n            data: JSON.parse(element.old_data),\r\n          });\r\n        }\r\n        if (element.new_data != null && element.new_data != \"\") {\r\n          this.Infologsnew.push({\r\n            id: element.user_log_id,\r\n            data: JSON.parse(element.new_data),\r\n          });\r\n        }\r\n      });\r\n      this.spinner.hide();\r\n    });\r\n    this.getUsers();\r\n  }\r\n\r\n  getLogs() {\r\n    this.spinner.show();\r\n    this._service\r\n      .getLogs(\r\n        this.pageSize,\r\n        (this.page - 1) * this.pageSize,\r\n        this.searchItem,\r\n        this.searchField\r\n      )\r\n      .pipe(\r\n        map((logs:any) => {\r\n          //console.log(logs.logs);\r\n          this.dataList.data = logs.logs;\r\n          this.totalData = logs.count;\r\n          this.Infologsnew = [];\r\n          this.Infologsold = [];\r\n          this.dataList.data = logs.logs;\r\n          this.totalData = logs.count;\r\n          logs.logs.forEach((element) => {\r\n            console.log(\"old \" + element.old_data);\r\n            if (element.old_data != null && element.old_data != \"\") {\r\n              this.Infologsold.push({\r\n                id: element.user_log_id,\r\n                data: JSON.parse(element.old_data),\r\n              });\r\n            }\r\n            if (element.new_data != null && element.new_data != \"\") {\r\n              this.Infologsnew.push({\r\n                id: element.user_log_id,\r\n                data: JSON.parse(element.new_data),\r\n              });\r\n            }\r\n          });\r\n          this.spinner.hide();\r\n        }),\r\n        catchError((err) => {\r\n          this.notifier.notify(\r\n            \"error\",\r\n            \"Ocurrio un problema con la conexion\" + err\r\n          );\r\n          console.log(err);\r\n          return of();\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n  filter(dataFilter) {\r\n    this.searchField = [];\r\n    this.searchItem = [];\r\n\r\n    if (this.vals[0] && this.vals[1]) {\r\n      this.searchField.push(\"FECINI\");\r\n      let fecini =\r\n        this.vals[0].year +\r\n        \"-\" +\r\n        this.vals[0].month +\r\n        \"-\" +\r\n        this.vals[0].day +\r\n        \" 00:00:00\";\r\n      this.searchItem.push(fecini);\r\n      this.searchField.push(\"FECEND\");\r\n      let fecend =\r\n        this.vals[1].year +\r\n        \"-\" +\r\n        this.vals[1].month +\r\n        \"-\" +\r\n        this.vals[1].day +\r\n        \" 23:59:59\";\r\n      this.searchItem.push(fecend);\r\n    }\r\n\r\n    if (this.vals[2] != \"\") {\r\n      this.searchField.push(\"EMAIL\");\r\n      this.searchItem.push(this.vals[2]);\r\n    }\r\n    this._service\r\n      .getLogs(\r\n        this.pageSize,\r\n        (this.page - 1) * this.pageSize,\r\n        this.searchItem,\r\n        this.searchField\r\n      )\r\n      .pipe(\r\n        map((logs:any) => {\r\n          //console.log(logs.logs);\r\n          this.dataList.data = logs.logs;\r\n          this.totalData = logs.count;\r\n          this.Infologsnew = [];\r\n          this.Infologsold = [];\r\n          logs.logs.forEach((element) => {\r\n            //console.log('old '+ element.old_data);\r\n            if (element.old_data != null && element.old_data != \"\") {\r\n              this.Infologsold.push({\r\n                id: element.user_log_id,\r\n                data: JSON.parse(element.old_data),\r\n              });\r\n            }\r\n            if (element.new_data != null && element.new_data != \"\") {\r\n              this.Infologsnew.push({\r\n                id: element.user_log_id,\r\n                data: JSON.parse(element.new_data),\r\n              });\r\n            }\r\n          });\r\n          this.spinner.hide();\r\n        }),\r\n        catchError((err) => {\r\n          this.notifier.notify(\r\n            \"error\",\r\n            \"Ocurrio un problema con la conexion\" + err\r\n          );\r\n          console.log(err);\r\n          return of();\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n  getUsers() {\r\n    //console.log('LE DI CLICK AL DROPDOWN');\r\n\r\n    this._userService\r\n      .getUsers(1000, 0,[],[])\r\n      .pipe(\r\n        map((users) => {\r\n          this.usersData = users.data.map((item) => ({\r\n            value: item.email,\r\n            text: item.email,\r\n          }));\r\n        }),\r\n        catchError((err) => {\r\n          this.notifier.notify(\r\n            \"error\",\r\n            \"Ocurrio un problema con la conexion\" + err\r\n          );\r\n          console.log(err);\r\n          return of();\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n  pageChange(e) {\r\n    //console.log(e);\r\n\r\n    this.getLogs();\r\n  }\r\n\r\n  closeBtnClick() {\r\n    this.modalService.dismissAll();\r\n  }\r\n  openModal(targetModal, logid) {\r\n    this.newdatacurrentLog = [];\r\n    this.olddatacurrentLog = [];\r\n\r\n    const result1 = this.Infologsold.find((oldlog) => oldlog.id == logid);\r\n    const result2 = this.Infologsnew.find((newlog) => newlog.id == logid);\r\n\r\n    if (result2 != null && result2 != \"\") {\r\n      Object.entries(result2.data).forEach(([key, value]) => {\r\n        this.newdatacurrentLog.push({ key: key, value: value });\r\n      });\r\n    }\r\n    if (result1 != null && result1 != \"\") {\r\n      Object.entries(result1.data).forEach(([key, value]) => {\r\n        this.olddatacurrentLog.push({ key: key, value: value });\r\n      });\r\n    }\r\n    this.modalService.open(targetModal, {\r\n      centered: true,\r\n      backdrop: \"static\",\r\n      keyboard: false,\r\n      size: \"xl\",\r\n    });\r\n  }\r\n}\r\n","<!-- <h1>AQUI ESTAN LOS LOGS</h1>\r\n<app-pagination-table [dataList]=\"logsData\"></app-pagination-table> -->\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n        </ngx-spinner>\r\n        <!--- pagination Table -->\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title mb-0\"><span class=\"lstick\"></span>Bitácora del sistema </h4>\r\n                <!-- <span class=\"card-subtitle\">A continuacion de muestran las entradas en la bitacora del sistema</span> -->\r\n                <app-reportfilters [config]=\"config\" [(vals)]=\"vals\" (onFilter)=\"filter($event)\" [dataset3]=\"usersData\"></app-reportfilters>\r\n\r\n                <table class=\"table table-striped border mt-4\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th *ngFor=\"let header of dataList.metadata\">\r\n\r\n                                {{header}}\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let log of dataList.data\">\r\n                            <td>{{log.user_email}}</td>\r\n                            <td>{{log.time | date: 'dd/MM/yyyy'}}</td>\r\n                            <td>{{log.time | date: 'h:mm a'}}</td>\r\n                            <td>{{log.action | logaction}} {{log.resourcee}}</td>\r\n                            <td>{{log.ip}}</td>\r\n                            <td (click)=\"openModal(infologs,log.user_log_id)\">\r\n                                <b ngbTooltip=\"Dar click para ver más información.\" style=\"cursor: pointer;color: #2162c4;text-decoration: underline;\">{{log.description}}</b>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div class=\"d-flex justify-content-center p-2\">\r\n                    <ngb-pagination [collectionSize]=\"this.totalData\" [pageSize]=\"pageSize\" [(page)]=\"page\" aria-label=\"Default pagination\" (pageChange)=\"pageChange($event)\" [boundaryLinks]=\"true\" [maxSize]=\"7\"></ngb-pagination>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--- End pagination Table -->\r\n\r\n    </div>\r\n</div>\r\n<notifier-container></notifier-container>\r\n\r\n<ng-template #infologs let-modal>\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"editUserLabel\">Información</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"card-block\">\r\n            <table class=\"table table-striped border mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Información actual</th>\r\n                        <th>Información anterior</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"max-width: 220px;white-space: pre-wrap;\">\r\n                            <p *ngFor=\"let datanew of newdatacurrentLog\">\r\n                                <span><b>{{datanew.key}}</b>: {{datanew.value}}</span>\r\n                            </p>\r\n                        </td>\r\n                        <td style=\"max-width: 220px;white-space: pre-wrap;\">\r\n                            <p *ngFor=\"let dataold of olddatacurrentLog\">\r\n                               <span><b>{{dataold.key}}</b>: {{dataold.value}}</span>\r\n                            </p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogComponent } from './log.component';\r\n//import { ComponentsModule } from '../../component/component.module';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n//import { UserModule } from '../user/user.module'\r\nimport { NotifierModule } from 'angular-notifier';\r\nimport { PipesModule } from '../../pipes/pipes.module'\r\nimport { SharedModule } from '../../shared/shared.module'\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Bitácora',\r\n      urls: [\r\n        { title: 'Bitácora', url: '/logs' },\r\n        { title: 'Bitácora' }\r\n      ]\r\n    },\r\n    component: LogComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [FormsModule, CommonModule, NgbModule, NgxSpinnerModule, NotifierModule, PipesModule, SharedModule ,RouterModule.forChild(routes)],\r\n  declarations: [LogComponent]\r\n})\r\nexport class LogModule { }\r\n"]}