{"version":3,"sources":["./src/app/models/user.model.ts","./src/app/pages/user/multiselect/multiselect.component.ts","./src/app/pages/user/multiselect/multiselect.component.html","./src/app/pages/user/spinner/spinner.component.ts","./src/app/pages/user/spinner/spinner.component.html","./src/app/pages/user/user.component.ts","./src/app/pages/user/user.component.html","./src/app/pages/user/user.module.ts"],"names":[],"mappings":"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","file":"pages-user-user-module-es2015.js","sourcesContent":["import { Rol } from './rol.model';\r\nexport interface UserPagination {\r\n    count: number,\r\n    data: User[]\r\n}\r\nexport interface GetUsersResponse {\r\n    success: boolean;\r\n    data: UserPagination\r\n}\r\n\r\nexport interface GetUserResponse {\r\n    success: boolean;\r\n    data: User;\r\n}\r\n\r\nexport interface SaveUserResponse {\r\n    success: boolean;\r\n    data: User;\r\n}\r\n\r\n\r\nexport interface GetUsersArrayResponse {\r\n    success: boolean\r\n    data: User[]\r\n}\r\n\r\n\r\n\r\nexport class User {\r\n\r\n    user_id: number;\r\n    firstname: string;\r\n    lastname: string;\r\n\r\n    email: string;\r\n    gender: number;\r\n    mobile_phone: string;\r\n    address: string;\r\n    /* birthdate: string; */\r\n    rols: any[]\r\n    /* home_phone: string;\r\n    office_home: string;\r\n     */\r\n    img: string;\r\n\r\n    constructor(\r\n        user_id: number,\r\n        firstname: string,\r\n        lastname: string,\r\n        email: string,\r\n        gender: number,\r\n        mobile_phone: string,\r\n        address: string,\r\n        rols: any[],\r\n        img: string = '/assets/images/users/noImage.png',\r\n    ) {\r\n\r\n        this.user_id = user_id;\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n        this.email = email;\r\n        this.gender = gender;\r\n        this.img = img;\r\n        this.rols = rols;\r\n        this.mobile_phone = mobile_phone;\r\n\r\n        this.address = address;\r\n\r\n\r\n    }\r\n\r\n}","import { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-multiselect',\r\n  templateUrl: './multiselect.component.html',\r\n  styleUrls: ['./multiselect.component.css']\r\n})\r\nexport class MultiselectComponent implements OnInit {\r\n  dropdownList = [];\r\n  cities = [];\r\n  selectedItems = [];\r\n  singleselectedItems = [];\r\n  dropdownSettings = {};\r\n  singledropdownSettings = {};\r\n  closeDropdownSelection = false;\r\n  ngOnInit() {\r\n    \r\n    this.dropdownList = [\r\n      { item_id: 1, item_text: 'Administrador' },\r\n      { item_id: 2, item_text: 'Auditor' },\r\n      { item_id: 3, item_text: 'Colaborador' },\r\n      { item_id: 4, item_text: 'Contador' },\r\n      { item_id: 5, item_text: 'Gerencia' }\r\n    ];\r\n    this.cities = ['Mumbai', 'New Delhi', 'Bangaluru', 'Pune', 'Navsari'];\r\n    this.selectedItems = [\r\n    ];\r\n    this.singleselectedItems = ['Pune'];\r\n    this.singledropdownSettings = {\r\n      singleSelection: true,\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: this.closeDropdownSelection\r\n    };\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'rol_id',\r\n      textField: 'name',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3\r\n      /* allowSearchFilter: true */\r\n    };\r\n  }\r\n  onItemSelect(item: any) {\r\n    \r\n  }\r\n  onSelectAll(items: any) {\r\n \r\n  }\r\n}\r\n","<ng-multiselect-dropdown [settings]=\"dropdownSettings\" [placeholder]=\"'roles'\" [data]=\"dropdownList\" [(ngModel)]=\"selectedItems\" [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\">\r\n</ng-multiselect-dropdown>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-spinner\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators, FormControl, ValidatorFn, AbstractControl, AsyncValidatorFn } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { map, mergeMap, catchError, exhaustMap, withLatestFrom,} from 'rxjs/operators';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { UserService } from './servicio/user.service';\r\nimport { User } from '../../models/user.model';\r\nimport { of, Observable, Subscription } from 'rxjs';\r\nimport { Rol } from 'src/app/models/rol.model';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { MysqlService } from '../../services/mysql/mysql.service';\r\nimport { ValidatePasswordAuth0Service } from 'src/app/services/auth0/validate-password-auth0.service';\r\ninterface checkRol {\r\n    value: boolean;\r\n    rol:Rol\r\n}\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n\r\n    //PARA FILTROS\r\n\r\n    vals: any[] = ['', '', '', '', '', '', '', ''];\r\n\r\n   \r\n    config = [\r\n        \r\n        {\r\n            label: 'Email:',\r\n            tipo: 'TEXT',\r\n            range: false,\r\n            labelsAux: []\r\n\r\n        },\r\n        {\r\n            label: 'Nombres:',\r\n            tipo: 'TEXT',\r\n            range: false,\r\n            labelsAux: []\r\n\r\n        },\r\n        {\r\n            label: 'Apellidos:',\r\n            tipo: 'TEXT',\r\n            range: false,\r\n            labelsAux: []\r\n\r\n        },\r\n        {\r\n\r\n            tipo: 'OPTIONS',\r\n            options: {\r\n                restart: false,\r\n                header: false\r\n\r\n            }\r\n\r\n        }\r\n    ];\r\n\r\n    filter(dataFilter) {\r\n\r\n        let searchField = [];\r\n        let searchItem = [];\r\n\r\n\r\n        /* if (this.vals[0] && this.vals[1]) {\r\n          searchField.push('FECINI');\r\n          let fecini = this.vals[0].year + '-' + this.vals[0].month + '-' + this.vals[0].day + ' 00:00:00';\r\n          searchItem.push(fecini);\r\n          searchField.push('FECEND');\r\n          let fecend = this.vals[1].year + '-' + this.vals[1].month + '-' + this.vals[1].day + ' 23:59:59';\r\n          searchItem.push(fecend);\r\n        } */\r\n\r\n\r\n        if (this.vals[2] != \"\") {\r\n            searchField.push('NAME');\r\n            searchItem.push('%' + this.vals[2] + '%');\r\n            \r\n        }\r\n        if (this.vals[4] != \"\") {\r\n            searchField.push('NAME2');\r\n            searchItem.push('%' + this.vals[4] + '%');\r\n            \r\n        }\r\n        if (this.vals[0] != \"\") {\r\n            searchField.push('EMAIL');\r\n            searchItem.push('%' + this.vals[0] + '%');\r\n        }\r\n        \r\n        let sub = this.userService.getUsers(this.pageSize, (this.page - 1) * this.pageSize, searchItem, searchField).pipe(\r\n            map((response) => {\r\n\r\n                this.userList = response.data;\r\n                this.usersTotal = response.count;\r\n                this.spinner.hide();\r\n/* \r\n                this.supplierList = response.data;\r\n                this.suppliersTotal = response.count;\r\n                this.spinner.hide(); */\r\n\r\n\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n\r\n        ).subscribe(() => {\r\n            //console.log('................');\r\n            sub.unsubscribe()\r\n        });\r\n\r\n    }\r\n    constructor(\r\n        private notifier: NotifierService,\r\n        private userService: UserService,\r\n        private fb: FormBuilder,\r\n        private modalService: NgbModal,\r\n        private datePipe: DatePipe,\r\n        private spinner: NgxSpinnerService,\r\n        private autorization: AuthorizationService,\r\n        private mysqlService: MysqlService,\r\n        private validate_auth0: ValidatePasswordAuth0Service\r\n    ) { }\r\n    \r\n\r\n    getCurrentuser():string {\r\n        let a = window.localStorage.getItem('email');\r\n        if (!a)\r\n            return \"\"\r\n        else\r\n            return a;\r\n    }\r\n    canDelete(): boolean { \r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'DELETE');\r\n    }\r\n    \r\n    canUpdate(): boolean {\r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'UPDATE');\r\n    }\r\n    canCreate(): boolean {\r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'CREATE');\r\n    }\r\n    canList(): boolean { \r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'LIST');\r\n    }\r\n    canEditPass(): boolean {\r\n        let resource = 'USER';\r\n        return this.autorization.havePermission(resource, 'PASS_EDITION');\r\n    }\r\n\r\n    //SUSCRIPCIONES\r\n    suscripcionUsers: Subscription;\r\n    //FLAGS DE COMPOTAMIENTO\r\n    isEmailUnique: boolean;\r\n    isEmailInputFocus: boolean;\r\n    \r\n    \r\n\r\n    //aux to delete\r\n    IdUsertoDelete=-1;\r\n    @ViewChild('modalDelete') private modalDelete: TemplateRef<{}>;\r\n    \r\n    \r\n    \r\n    //COSAS PAR EL CHECKBOX...\r\n    // For example, an array of choices\r\n    //public checks: Array<Rol> = [];\r\n    public rolesModificados: Array<checkRol>;\r\n    public isCalculatingRoles: boolean;\r\n    public rolesMap = {};\r\n    isLoadingInEdition: boolean;\r\n\r\n\r\n\r\n\r\n    //PAGINACION\r\n    page=1;\r\n    pageSize = 10;\r\n    userActual: User;\r\n    rolestotales: Rol[];\r\n    rolesactuales: Rol[];\r\n    //searchTerm = '';\r\n    \r\n    \r\n    generos = ['Femenino', 'Masculino'];\r\n    /* singleselectedItems = []; */\r\n    isEditing = false;\r\n   \r\n    pageName = 'Personal';\r\n    singledropdownSettings = {};\r\n    multidropdownSettings = {};\r\n    \r\n    //FORMULARIOS\r\n\r\n    editPassword = this.fb.group({\r\n        \r\n        newPassword: ['', [Validators.required]],\r\n        confirm: ['', [Validators.required, this.forbiddenNameValidator()]]\r\n        \r\n    });\r\n    newUserForm = this.fb.group({\r\n        FirstName: ['', Validators.required],\r\n        LastName: ['', Validators.required],\r\n        Email: ['', [Validators.required, Validators.email]],\r\n        Gen: ['', Validators.required],\r\n        Phone: ['', [Validators.pattern(\"(^[0-9]{8})|(^[+][0-9]{11}$)\")]],\r\n        Address: [''],\r\n        Rols:[]\r\n    });\r\n    newUserForm2 = this.fb.group({\r\n        \r\n        Rols:[]\r\n    });\r\n    \r\n\r\n    editUser = this.fb.group({\r\n            FirstName: ['', Validators.required],\r\n            LastName: ['', Validators.required],\r\n            Email: ['', [Validators.required, Validators.email]],\r\n            GenFalso: [],\r\n            Gen: [],\r\n            Phone: [''],\r\n            Address: [''],\r\n        Rols: new FormArray([])\r\n        });\r\n    \r\n    //LISTA DE USUARIO PRINCIPAL\r\n    userList: User[] = [];\r\n    usersTotal: number;\r\n    //PARA LOS ROLES CARGADOR DURANTE LA SECCION DE CREACION\r\n    roles: Rol[] = [];\r\n\r\n    //ESTRUCTURAS ROL PARA EL DROPDOWN DE CREACION DEL USUARIO\r\n    rolesitems = [];\r\n    getUsers() {\r\n        this.spinner.show();\r\n        /* this.suscripcionUsers = this.userService.getUsers(this.pageSize, (this.page-1)*this.pageSize).pipe(\r\n            map((response) => {\r\n                this.userList = response.users;\r\n                this.usersTotal = response.count;\r\n                this.spinner.hide();\r\n                \r\n                \r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n            \r\n        ).subscribe((lol) => {\r\n            //console.log('................');\r\n            this.suscripcionUsers.unsubscribe()\r\n        }); */\r\n        this.filter(null);\r\n    }\r\n    ngOnInit() {\r\n        //CHECKBOXES\r\n        this.isCalculatingRoles = false;\r\n        this.isLoadingInEdition = false;\r\n        //-----------------\r\n        //FLAG PARA VALIDACION DE CORREO\r\n        this.isEmailUnique = true;\r\n        this.isEmailInputFocus = false;\r\n        this.getUsers();\r\n    \r\n        this.singledropdownSettings = {\r\n          singleSelection: true,\r\n          selectAllText: 'Select All',\r\n          unSelectAllText: 'UnSelect All',\r\n          allowSearchFilter: false,\r\n          closeDropDownOnSelection: false\r\n        };\r\n        this.multidropdownSettings = {\r\n          singleSelection: false,\r\n          idField: 'item_id',\r\n          textField: 'item_text',\r\n          selectAllText: 'Select All',\r\n          unSelectAllText: 'UnSelect All',\r\n          itemsShowLimit: 3\r\n          /* allowSearchFilter: true */\r\n        };\r\n            \r\n        this.pageName = 'Personal';\r\n        const formArray: FormArray = this.editUser.get('Rols') as FormArray;\r\n        formArray.clear();\r\n        \r\n    }\r\n    pageChange(e) { \r\n        //console.log(e);\r\n        this.getUsers();\r\n    }\r\n    \r\n    //SEARCHING.................\r\n   \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n    onCheckChange(event) {\r\n        //console.log(\"EL VALOR DEL EVENTO DEL CHECK\");\r\n        //console.log(event.target.value);\r\n      const formArray: FormArray = this.editUser.get('Rols') as FormArray;\r\n    \r\n      /* Selected */\r\n      if(event.target.checked){\r\n        // Add a new control in the arrayForm\r\n          formArray.push(new FormControl(event.target.value));\r\n          //console.log(\"SE CHECKIO\");\r\n          //console.log(formArray);\r\n      }\r\n        \r\n      /* unselected */\r\n      else {\r\n          //console.log(\"SE DESCHEKIO\");\r\n        // find the unselected element\r\n        let i: number = 0;\r\n    \r\n        formArray.controls.forEach((ctrl: FormControl) => {\r\n          if(ctrl.value == event.target.value) {\r\n            // Remove the unselected element from the arrayForm\r\n            formArray.removeAt(i);\r\n            return;\r\n          }\r\n    \r\n          i++;\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    changePwd(userid: number,modal) {\r\n        //console.log('SE QUIERE CAMBIAR EL PASSWORD..');\r\n        this.IdUsertoDelete = userid;\r\n        this.editPassword.reset({})\r\n        this.validate_auth0.getNewRules();\r\n        this.modalService.open(modal, {\r\n            centered: true,\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n\r\n            size: 'lg'\r\n        });\r\n\r\n    }\r\n\r\n    forbiddenNameValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        const forbidden = this.editPassword? control.value == this.editPassword.controls.newPassword.value:false;\r\n        return !forbidden ? { forbiddenName: { value: control.value } } : null;\r\n    };\r\n}\r\n    changePassword() {\r\n        let suscription = this.userService.changePassword(this.IdUsertoDelete,this.editPassword.controls.newPassword.value).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se cambio la contraseña satisfactoriamente');\r\n                this.closeBtnClick();\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema' + err.message);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(() => suscription.unsubscribe());\r\n    }\r\n    //OBTIENE LOS ROLES DEL SISTEMA Y LOS MAPEA AL LOS COMPONENTES DEL DROPDOWN\r\n    getRols() {\r\n        let suscription = this.userService.getRols(100, 0).pipe(\r\n            map((response) => {\r\n                this.roles = response;\r\n                //this.rolesitems = this.roles;\r\n                //console.log(this.rolesitems);\r\n                this.rolesitems = this.roles.map((item, i) => {\r\n                    return { item_id: i, item_text: item.name }\r\n                })\r\n                //console.log(this.rolesitems);\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema al obtener los roles' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(() => suscription.unsubscribe());\r\n    }\r\n    //SUBMIT DEL NUEVO USUARIO\r\n    onSubmit() {\r\n        \r\n        let rolsaux: string[] = [];\r\n        //POR SI NO SE SELECCIONO NINGUN ROL EN EL DROPDOW DE CREACION\r\n        if (this.newUserForm2.controls.Rols.value != null) { \r\n            //console.log('EL VALOR DE Rol no es nulo');\r\n            //console.log(this.newUserForm2.controls.Rols.value);\r\n            //console.log(this.roles);\r\n            rolsaux = this.newUserForm2.controls.Rols.value.map((item) => {\r\n            \r\n                //console.log(item);\r\n                return this.roles[item.item_id].rol_id;\r\n            })\r\n         }\r\n        let newuser = new User(\r\n            -1,\r\n            this.newUserForm.controls.FirstName.value,\r\n            this.newUserForm.controls.LastName.value,\r\n            this.newUserForm.controls.Email.value,\r\n            this.newUserForm.controls.Gen.value=='Masculino'?0:1,\r\n            this.newUserForm.controls.Phone.value,\r\n            this.newUserForm.controls.Address.value,\r\n            rolsaux,\r\n        );\r\n        //console.log(\".....EL USERQUE VOY A MANDAR AL SERVER::\")\r\n        //console.log(newuser);\r\n        let suscription = this.userService.saveUser(newuser).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se creo el usuario satisfactoriamente');\r\n                this.userList.push(resp);\r\n                this.closeBtnClick();\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(() => suscription.unsubscribe());\r\n    }\r\n    //PARA CERRAR LOS MODALES, TAMBIEN SE UTILIZA PARA REINICIAR DE NUEVO LOS DOS MODALES DE ESTA VISTA\r\n    closeBtnClick() {\r\n        //console.log('Se va a cerrar el modal');\r\n        this.modalService.dismissAll();\r\n        this.newUserForm.reset();\r\n        this.newUserForm2.reset()\r\n        this.newUserForm.controls.Phone.setValue('');\r\n        this.newUserForm.controls.Address.setValue('');\r\n        this.editUser.reset();\r\n        this.IdUsertoDelete = -1;\r\n        //this.singleselectedItems = [];\r\n        /* this.rolesitems = []; */\r\n        this.pageName = 'Personal';\r\n\r\n        this.isEditing = false;\r\n        this.ngOnInit();\r\n        \r\n    }\r\n\r\n    deleteUserModal(iduser: number){\r\n        this.IdUsertoDelete = iduser;\r\n        this.openSingleModal(this.modalDelete)\r\n      }\r\n\r\n    openSingleModal(targetModal) {\r\n        this.modalService.open(targetModal, {\r\n          centered: true,\r\n          backdrop: 'static',\r\n          keyboard: false\r\n        });\r\n    }\r\n\r\n\r\n    //BORRADO DE USUARIOS\r\n    deleteUser() {\r\n        let userID = this.IdUsertoDelete;\r\n        let suscription = this.userService.deleteUser(userID).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se elimino el Usuario');\r\n                  this.userList = this.userList.filter((us) => {\r\n                    return us.user_id != userID;\r\n                   })\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la eliminacion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(()=> suscription.unsubscribe());  \r\n        this.closeBtnClick();\r\n    }\r\n\r\n\r\n    emailFocus() {\r\n        console.log('EmailFOcus');\r\n        this.isEmailInputFocus = true;\r\n        this.isEmailUnique = true;\r\n        \r\n    }\r\n    //SIGUIENTE PARA AVANZAR EN EL MODAL DE CREACION\r\n    siguiente() {\r\n        this.mysqlService.isExistEmail(this.newUserForm.controls.Email.value).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                //this.emailAlreadyInUse = resp.data;\r\n\r\n\r\n                if (!resp.data) {\r\n                    this.pageName = 'Rol';\r\n                    this.getRols();\r\n                    this.isEmailUnique = true;\r\n                }\r\n                else {\r\n                    this.isEmailUnique = false;\r\n                }\r\n                return of();\r\n\r\n            })\r\n        ).subscribe();\r\n        /* this.userService.searchUser(['email'], [this.newUserForm.controls.Email.value]).subscribe(resp => {\r\n            if (resp.data.length == 0) {\r\n                this.pageName = 'Rol';\r\n                this.getRols();\r\n                this.isEmailUnique = true;\r\n            }\r\n            else {\r\n                this.isEmailUnique = false;\r\n            }\r\n        }); */\r\n        \r\n        \r\n    }\r\n    //ATRAS PARA RETROCEDER EN EL MODAL DE CREACION\r\n    atras() {\r\n        this.pageName = 'Personal';\r\n    }\r\n    //METODOS PARA LOS BOTONES DE SUBMIT SE ABILITEN O NO\r\n    isCorrect(): boolean { return !this.newUserForm.valid; }\r\n    isCorrect2(): boolean { return !this.editUser.valid; }\r\n    \r\n    //HABRE EL MODAL DE LA CREACION DE USUARIO\r\n    openModal2(targetModal, user: User) {\r\n        this.modalService.open(targetModal, {\r\n            centered: true,\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n            size:'lg'\r\n            /* size: 'sm' */\r\n        });\r\n    }\r\n    //HABRE EL MODAL DE LA EDICION\r\n    openModal(targetModal, user: User) {\r\n        this.modalService.open(targetModal, {\r\n            centered: true,\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n            size:'lg'\r\n            \r\n            /* size: 'sm' */\r\n        });\r\n\r\n\r\n    //OBTENGO TOLA LA INFO DE ESE..\r\n        this.isLoadingInEdition = true;\r\n        const subscription1 = this.userService.getUser(user.user_id).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.isEditing = false;\r\n                this.userActual = resp;\r\n                this.editUser.controls.FirstName.setValue(resp.firstname);\r\n                this.editUser.controls.FirstName.disable();\r\n                this.editUser.controls.LastName.setValue(resp.lastname);\r\n                this.editUser.controls.LastName.disable();\r\n                this.editUser.controls.Email.setValue(resp.email);\r\n                this.editUser.controls.Email.disable();\r\n                this.editUser.controls.GenFalso.setValue(resp.gender == 0 ? \"Masculino\" : \"Femenino\");\r\n                this.editUser.controls.GenFalso.disable();\r\n                return resp;\r\n                //this.getRolesUserActual();\r\n            }),catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema a recupar la info de ' + user.firstname+\" \"+user.lastname);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe((userinfo) => {\r\n            //console.log(\"#######INFO EN EL SUSCRIBE DE getUserInfo\")\r\n            //console.log(userinfo)\r\n            //console.log('###############################')\r\n            subscription1.unsubscribe()\r\n            const subscription2 = this.userService.getUserROls(this.userActual.user_id).pipe(\r\n                map((response) => {\r\n                    this.rolesactuales = response;\r\n                    this.userActual.rols = response;\r\n                    this.isLoadingInEdition = false\r\n                    return response;\r\n                    \r\n\r\n                })\r\n\r\n            ).subscribe(()=> subscription2.unsubscribe());\r\n         }\r\n             \r\n        );\r\n       \r\n\r\n    }\r\n\r\n   \r\n    saveUserChanges() {\r\n        //console.log(\"SAVE CHNANGES\");\r\n        //console.log(this.editUser.controls.Rols.value);\r\n        let newrols = this.editUser.controls.Rols.value;\r\n        //console.log(\"LOS ROLES QUE VOY A MANDAR::\")\r\n        //console.log(this.editUser.controls.Rols.value);\r\n        /* let newuser = new User(\r\n            this.userActual.user_id,\r\n            this.editUser.controls.FirstName.value,\r\n            this.editUser.controls.LasName.value,\r\n            this.editUser.controls.Email.value,\r\n            this.editUser.controls.Gen.value == 'Masculino' ? 0 : 1,\r\n            this.userActual.mobile_phone,\r\n            this.userActual.address,\r\n            []\r\n        );  */\r\n        this.userActual.firstname = this.editUser.controls.FirstName.value;\r\n        this.userActual.lastname = this.editUser.controls.LastName.value;\r\n        this.userActual.gender = this.editUser.controls.Gen.value;\r\n        const suscription1 = this.userService.modUserInfo(this.userActual).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se modifico');\r\n                this.closeBtnClick();\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(()=> suscription1.unsubscribe()); \r\n\r\n        const suscription2 = this.userService.modRolsUser(this.userActual, newrols).pipe(\r\n            map((resp) => {\r\n                //console.log(resp);\r\n                this.notifier.notify('success', 'Se modificaron los roles');\r\n                this.closeBtnClick();\r\n            }),\r\n            catchError((err) => {\r\n                this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n                console.log(err);\r\n                return of();\r\n            })\r\n        ).subscribe(()=> suscription2.unsubscribe());\r\n\r\n    }\r\n    \r\n    startMod() {\r\n        this.isEditing = true;\r\n        \r\n        this.editUser.controls.FirstName.enable()\r\n        this.editUser.controls.LastName.enable();\r\n        this.editUser.controls.Gen.setValue(this.userActual.gender == 0 ? \"Masculino\" : \"Femenino\");\r\n        \r\n        //this.getrolesActuales();.\r\n        //console.log(\"SE LLAMO A LOS getrolesActuales\");\r\n         let suscription = this.userService.getRols(100, 0).pipe(\r\n            map(response => {\r\n                \r\n                this.rolestotales = response;\r\n                this.rolestotales.forEach((item) => {\r\n                    this.rolesMap[item.rol_id] = {\r\n                        value: false,\r\n                        rol: item\r\n                    };\r\n                });\r\n                \r\n               \r\n            })\r\n         ).subscribe(() => {\r\n             this.isCalculatingRoles = true;\r\n             suscription.unsubscribe();\r\n            let suscription2 = this.armarCheckBoxes(this.rolestotales, this.userActual.rols).subscribe((estate) => {\r\n                //console.log(\"En teoria ya termino de hacer lo del mapeo de los roles\");\r\n                this.isCalculatingRoles = false;\r\n                //suscription2.unsubscribe();\r\n            }); \r\n           \r\n        });\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        \r\n        //console.log(\"SE termino de armar los boxes, como habran quedo????\");\r\n        //console.log(this.rolesModificados)\r\n\r\n                \r\n                //this.editUser.controls.Email.enable();\r\n                \r\n                //this.editUser.controls.Gen.enable();\r\n    }\r\n\r\n    modificarRoles() {\r\n        //console.log(\"LOS ROLES QUE SE VAN A INGRESAR A USUARIO\");\r\n        //console.log(this.editUser.controls.Rols.value);\r\n\r\n        //this.userService.modRolsUser(this.userActual,this.editUser.controls.Rols.value)\r\n    }\r\n\r\n     \r\n\r\n   \r\n\r\n    armarCheckBoxes(rolesSistema: Rol[], rolesUsuario: Rol[]): Observable<boolean> {\r\n\r\n        return new Observable((observer) => {\r\n            const formArray: FormArray = this.editUser.get('Rols') as FormArray;\r\n            \r\n            for (let i = 0; i < this.rolesactuales.length; i++) {\r\n                let rol = this.rolesactuales[i];\r\n                \r\n                this.rolesMap[rol.rol_id].value = true;\r\n                formArray.push(new FormControl(rol.rol_id));\r\n                \r\n            }\r\n            this.rolesModificados = Object.values(this.rolesMap);\r\n            \r\n            observer.next(true);\r\n            //observer.complete();\r\n          \r\n        }); \r\n\r\n    }\r\n    \r\n        \r\n     \r\n onItemSelect(item: any) {\r\n    \r\n  }\r\n    \r\n\r\n\r\n}\r\n\r\n","<div class=\"col-12\">\r\n    <div class=\"card card-body\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n        </ngx-spinner>\r\n        <div style=\"margin-top: 0.5 rem;\" class=\"d-flex mb-3 mt-3\">\r\n\r\n            <!-- <input type=\"text\" class=\"form-control w-25\" placeholder=\"Busca a un empleado\" [(ngModel)]='searchTerm'> -->\r\n            <button *ngIf=\"canCreate()\" class=\"btn btn btn-info ml-auto h-25 btn-color-solucredit\" (click)=\"openModal2(createUserModal, null)\">Nuevo Usuario</button>\r\n\r\n\r\n        </div>\r\n\r\n        <app-reportfilters [config]=\"config\" [(vals)]=\"vals\" (onFilter)=\"filter($event)\"></app-reportfilters>\r\n        <div *ngIf=\"canList()\" class=\"table-responsive table-bordered\">\r\n            <table class=\"table table-striped mb-0 no-wrap v-middle\">\r\n                <thead>\r\n                    <tr>\r\n                        <!-- <th class=\"text-center\" scope=\"col\">#</th> -->\r\n                        <th scope=\"col\" style=\"text-align: center;\">Nombres</th>\r\n                        <th scope=\"col\" style=\"text-align: center;\">Apellidos</th>\r\n                        <th scope=\"col\" style=\"text-align: center;\">Correo</th>\r\n                        <th scope=\"col\" style=\"text-align: center;\">Acciones</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let user of userList;let i = index\">\r\n\r\n                        <!-- <td class=\"text-center\">\r\n                            {{i}}\r\n                        </td> -->\r\n\r\n\r\n                        <!-- <div class=\"d-flex align-items-center\">\r\n                                <img class=\"rounded-circle\" src=\"https://wrappixel.com/demos/angular-admin-templates/monster-angular/main/assets/images/users/2.jpg\" height=\" 50px\" width=\"50px\" alt=\"profile-image-generic\">\r\n                                <div class=\"ml-3\">\r\n                                    <p class=\"mb-0\">{{ user.firstname }}</p>\r\n                                    <small class=\"rol-section\">\r\n                                            <span class=\"label label-rol\">Administrador</span>\r\n                                             <span class=\"label label-rol\">Contador</span>\r\n                                        </small>\r\n                                </div>\r\n                            </div> -->\r\n                        <td style=\"text-align: center;\">{{user.firstname}}</td>\r\n                        <td style=\"text-align: center;\">{{ user.lastname}}</td>\r\n                        <td style=\"text-align: center;\">{{ user.email }}</td>\r\n\r\n\r\n                        <td>\r\n                            <div class=\"div-table-actions\">\r\n                                <button *ngIf=\"canUpdate()\" (click)=\"openModal(editUserModal, user)\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit\" type=\"button\"><span class=\"btn-label m-r-5\"><i class=\"mdi mdi-eye-outline\"></i></span>Editar</button>\r\n                                <button *ngIf=\"canEditPass()\" ngbTooltip=\"Cambio de contraseña\" (click)=\"changePwd(user.user_id,modalChangePassword)\" class=\"btn   btn-color-solucredit\" type=\"button\"><span class=\"btn-label m-r-5\"><i class=\" icon-lock\"></i></span>Editar Contraseña</button>\r\n                                <button [disabled]=\"getCurrentuser() == user.email\" *ngIf=\"canDelete()\" ngbTooltip=\"Eliminar\" (click)=\"deleteUserModal(user.user_id)\" class=\"btn btn-danger waves-effect waves-light\" type=\"button\"><span class=\"btn-label m-r-5\"><i class=\"mdi mdi-delete\"></i></span>Eliminar</button>\r\n\r\n                            </div>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <ngb-pagination [collectionSize]=\"this.usersTotal\" [pageSize]=\"pageSize\" [(page)]=\"page\" aria-label=\"Default pagination\" (pageChange)=\"pageChange($event)\"></ngb-pagination>\r\n        </div>\r\n        <!-- <div class=\"d-flex justify-content-center mt-5\">\r\n                <ngb-pagination [(page)]=\"page\" [pageSize]=\"pageSize\" [collectionSize]=\"userList.length\"></ngb-pagination>\r\n            </div> -->\r\n    </div>\r\n</div>\r\n<notifier-container></notifier-container>\r\n\r\n<ng-template #createUserModal let-modal>\r\n\r\n    <div class=\"modal-header\">\r\n\r\n        <h3 class=\"modal-title\" id=\"editUserLabel\">Crea un nuevo usuario</h3>\r\n\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n        <!-- Navbar for Wizard Starts -->\r\n        <ul class=\"wizard-navbar\">\r\n            <div class=\"liner\"></div>\r\n\r\n            <li class=\"active flex-fill\">\r\n                <a [ngClass]=\"(pageName==='Personal')?'nav-link active':'nav-link'\" uiSrefActive=\"active\" uiSref=\"personal\" data-toggle=\"tab\" title=\"personal\">\r\n                    <span class=\"round-tabs one\">\r\n                    <i class=\"icon-user\"></i>\r\n                </span>\r\n                </a>\r\n            </li>\r\n            <li class=\"flex-fill\">\r\n                <a [ngClass]=\"(pageName==='Rol')?'nav-link active':'nav-link'\" uiSrefActive=\"active\" uiSref=\"work\" data-toggle=\"tab\" title=\"work\">\r\n                    <span class=\"round-tabs two\">\r\n                    <i class=\"icon-notebook\"></i>\r\n                </span>\r\n                </a>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n        <div [ngSwitch]=\"pageName\">\r\n            <div *ngSwitchCase=\"'Personal'\">\r\n                <form class=\"form-horizontal\" [formGroup]=\"newUserForm\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Información Requerida</h4>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"fname\" class=\"col-sm-3 text-right control-label col-form-label\">Nombres: </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input formControlName=\"FirstName\" type=\"text\" class=\"form-control\" id=\"fname\" placeholder=\"Nombres del Nuevo Usuario\">\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.FirstName.valid && (newUserForm.controls.FirstName.dirty || newUserForm.controls.FirstName.touched)\">Ingresa los nombre</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"lname\" class=\"col-sm-3 text-right control-label col-form-label\">Apellidos: </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input formControlName=\"LastName\" type=\"text\" class=\"form-control\" id=\"lname\" placeholder=\"Apellidos del Nuevo Usuario\">\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.LastName.valid && (newUserForm.controls.LastName.dirty || newUserForm.controls.LastName.touched)\">Ingresa los apellidos</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"email1\" class=\"col-sm-3 text-right control-label col-form-label\">Correo: </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input (focus)=\"emailFocus()\" formControlName=\"Email\" type=\"email\" class=\"form-control\" id=\"email1\" placeholder=\"Correo Electrónico\">\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.Email.valid && (newUserForm.controls.Email.dirty || newUserForm.controls.Email.touched)\">Ingresa un correo valido</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"cono1\" class=\"col-sm-3 text-right control-label col-form-label\">Género: </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <ng-multiselect-dropdown formControlName=\"Gen\" placeholder=\"Selecciona\" name=\"genero\" [data]=\"generos\" [settings]=\"singledropdownSettings\" (onSelect)=\"onItemSelect($event)\">\r\n\r\n                                </ng-multiselect-dropdown>\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.Gen.valid && (newUserForm.controls.Gen.dirty || newUserForm.controls.Gen.touched)\">Selecciona un género</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Información Opcional</h4>\r\n                        <details class=\"default square\">\r\n                            <summary><span class=\"open\">Ver más</span><span class=\"close\"></span></summary>\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"com1\" class=\"col-sm-3 text-right control-label col-form-label\">Teléfono</label>\r\n                                <div class=\"col-sm-9\">\r\n                                    <input formControlName=\"Phone\" type=\"text\" class=\"form-control\" id=\"com1\" placeholder=\"celular\">\r\n                                </div>\r\n                                <small class=\"form-text text-danger\" *ngIf=\"!newUserForm.controls.Phone.valid && (newUserForm.controls.Phone.dirty || newUserForm.controls.Phone.touched)\">Ingresa un telefono valido</small>\r\n                            </div>\r\n                            <!-- <div class=\"form-group row\">\r\n                                <label for=\"com1\" class=\"col-sm-3 text-right control-label col-form-label\">Telefono casa</label>\r\n                                <div class=\"col-sm-9\">\r\n                                    <input type=\"text\" class=\"form-control\" id=\"com1\" placeholder=\"Numero casa\">\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"form-group row\">\r\n                                <label for=\"com1\" class=\"col-sm-3 text-right control-label col-form-label\">Dirección Residencia</label>\r\n                                <div class=\"col-sm-9\">\r\n                                    <input formControlName=\"Address\" type=\"text\" class=\"form-control\" id=\"com1\" placeholder=\"dirección residencia\">\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </details>\r\n\r\n\r\n\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"card-body\">\r\n                        <small class=\"form-text text-danger\" *ngIf=\"!isEmailUnique && isEmailInputFocus\">El correo ya esta registrado</small>\r\n                        <div class=\"form-group m-b-0 text-right\">\r\n\r\n                            <button class=\"btn btn-raised mr-1 text-white btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n                            <button class=\"btn btn-raised mr-1 text-white btn-color-solucredit\" (click)=\"siguiente()\" [disabled]=\"isCorrect()\">Siguiente</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div *ngSwitchCase=\"'Rol'\">\r\n                <form [formGroup]=\"newUserForm2\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Agrega roles al nuevo usuario</h4>\r\n                        <!-- <div class=\"alert alert-info alert-dismissible fade show m-t-25\" role=\"alert\">\r\n                            <span class=\"badge badge-info\">\r\n                            <i class=\"fas fa-info\"></i>\r\n                        </span>\r\n                            <strong>Form Action at mulitple space top,bottom and left,right.</strong>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                        </div> -->\r\n                        <h6 class=\"card-subtitle\">Los roles tienen definidos las acciones que los usuarios pueden realizar en la plataforma.\r\n                            <code>Para mas información ir a la seccion de roles</code>\r\n                        </h6>\r\n\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row m-auto\">\r\n                            <div class=\"col-12\">\r\n\r\n\r\n                                <label for=\"fname3\" class=\"control-label col-form-label\">Roles disponibles</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Rols\" [settings]=\"multidropdownSettings\" placeholder=\"Selecciona\" name=\"roles\" [data]=\"rolesitems\" (onSelect)=\"onItemSelect($event)\">\r\n\r\n                                </ng-multiselect-dropdown>\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"d-flex no-block align-items-center\">\r\n                                <div class=\"action-form\">\r\n                                    <div class=\"form-group m-b-0 text-center\">\r\n                                        <button (click)=\"atras()\" type=\"submit\" class=\"btn btn-raised mr-1 text-white btn-color-solucredit-secondary\">Atras</button>\r\n                                        <button (click)=\"onSubmit()\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit\">Crear usuario</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</ng-template>\r\n<ng-template #editUserModal let-modal>\r\n\r\n    <div class=\"modal-header\">\r\n\r\n        <h4 class=\"modal-title\" id=\"editUserLabel\">Edición de Usuario</h4>\r\n\r\n        <button type=\"button\" class=\"close\" (click)=\"closeBtnClick()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n        <form class=\"form-horizontal\" [formGroup]=\"editUser\">\r\n            <div class=\"form-group row col-md-12\">\r\n                <div class=\"col-md-2\">\r\n                    <label for=\"fname\" class=\"text-center control-label col-form-label\">Nombres: </label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <input formControlName=\"FirstName\" type=\"text\" class=\"form-control\" id=\"fname\" placeholder=\"nombres del nuevo usuario\" [disabled]=\"!isEditing\">\r\n                    <small class=\"form-text text-danger\" *ngIf=\"!editUser.controls.FirstName.valid && (editUser.controls.FirstName.dirty || editUser.controls.FirstName.touched)\">Ingresa un Nombre</small>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <label for=\"lname\" class=\"col-lg-12 text-center control-label col-form-label\">Apellidos: </label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <input formControlName=\"LastName\" type=\"text\" class=\"form-control\" id=\"lname\" placeholder=\"apellidos del nuevo usuario\" [disabled]=\"!isEditing\">\r\n                    <small class=\"form-text text-danger\" *ngIf=\"!editUser.controls.LastName.valid && (editUser.controls.LastName.dirty || editUser.controls.LastName.touched)\">Ingresa los Apellidos</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row col-md-12\">\r\n                <div class=\"col-md-2\">\r\n                    <label for=\"email1\" class=\"col-lg-12 text-center control-label col-form-label\">Correo: </label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <input formControlName=\"Email\" type=\"email\" class=\"form-control\" id=\"email1\" placeholder=\"correo\">\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <label for=\"cono1\" class=\"col-lg-12 text-center control-label col-form-label\">Género: </label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                     <div *ngIf=\"!isEditing\" class=\"col-lg-12\">\r\n                        <input formControlName=\"GenFalso\" type=\"email\" class=\"form-control\" id=\"email1\" placeholder=\"genero\" [disabled]=\"!isEditing\">\r\n                    </div>\r\n                    <div *ngIf=\"isEditing\" class=\"col-lg-12\">\r\n                        <ng-multiselect-dropdown formControlName=\"Gen\" placeholder=\"Escoge un Género\" name=\"genero\" [data]=\"generos\" [(ngModel)]=\"singleselectedItems\" [settings]=\"singledropdownSettings\" (onSelect)=\"onItemSelect($event)\">\r\n\r\n                        </ng-multiselect-dropdown>\r\n                        <small class=\"form-text text-danger\" *ngIf=\"!editUser.controls.Gen.valid && (editUser.controls.Gen.dirty || editUser.controls.Gen.touched)\">Selecciona un Género</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n        <div class=\"card-body div-con-flex-col\">\r\n            <h4>Roles</h4>\r\n            <app-spinner *ngIf=\"isLoadingInEdition\"></app-spinner>\r\n            <div *ngIf=\"!isEditing && !isLoadingInEdition\" class=\"col-sm-9\">\r\n                <div *ngFor=\"let rol of rolesactuales\" class=\"card card-roles \">\r\n\r\n                    <div class=\"card-body card\" style=\"text-align: center;\">\r\n                        <h4 class=\"card-text\">{{rol.name}}</h4>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div *ngIf=\"isEditing\" class=\"col-sm-9\">\r\n                <h4 *ngIf=\"isCalculatingRoles\">.....CARGANDO....</h4>\r\n\r\n                <div  *ngFor=\"let rol of rolesModificados; let i=index\">\r\n                    <label>\r\n                        <!-- <input type=\"checkbox\" [(ngModel)]=\"rol.value\" (change)=\"onCheckChange($event)\"> -->\r\n                        <input type=\"checkbox\" [checked]= \"rol.value\" [value]=\"rol.rol.rol_id\" (change)=\"onCheckChange($event)\">\r\n                            {{rol.rol.name}}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"div-con-flex\">\r\n                <button [ngClass]=\"isEditing === true?'btn-hide':'btn-show'\" type=\"submit\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit\" (click)=\"startMod()\">Modificar</button>\r\n                <button [ngClass]=\"isEditing === false?'btn-hide':'btn-show'\" type=\"submit\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit\" (click)=\"saveUserChanges()\">Guardar Cambios</button>\r\n                <button [ngClass]=\"isEditing === false?'btn-hide':'btn-show'\" type=\"submit\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #modalDelete let-modal>\r\n\r\n    <div class=\"modal-header border-bottom-0\">\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeBtnClick()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n        <ng-container [ngSwitch]=\"IdUsertoDelete\">\r\n            <ng-container *ngSwitchCase=\"null\">\r\n                <h6>Cargando</h6>\r\n            </ng-container>\r\n            <ng-container *ngSwitchDefault>\r\n                <div class=\"row mb-2\">\r\n                    <div class=\"col-12\">\r\n                        <h4 class=\"ml-4\">¿Esta seguro de eliminar este registro?</h4>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"modal-footer border-top-0\">\r\n        <button type=\"button\" (click)=\"deleteUser()\" class=\"btn btn-danger mr-1 text-white\">Confirmar</button>\r\n        <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #modalChangePassword let-modal>\r\n\r\n    <div class=\"modal-header border-bottom-0\">\r\n        <h4 class=\"modal-title\">Cambiar contraseña</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeBtnClick()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n        <form class=\"form-horizontal\" [formGroup]=\"editPassword\">\r\n            <div class=\"form-group row\">\r\n                <label for=\"fname\" class=\"col-sm-3 text-right control-label col-form-label\">Nueva Contraseña:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <div class=\"input-group col-sm-12\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                <i class=\"fas fa-lock\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input formControlName=\"newPassword\" class=\"form-control\" id=\"realnew\" placeholder=\"nueva contraseña\" type=\"password\" autocomplete=\"current-password\"\r\n                        (keyup)=\"validate_auth0.checkPasswordRules($event.target.value)\"\r\n                        >\r\n                    </div>\r\n                    <small class=\"form-text text-danger\" *ngIf=\"!editPassword.controls.newPassword.valid && (editPassword.controls.newPassword.dirty || editPassword.controls.newPassword.touched)\">Ingresa una contraseña.</small>\r\n                    <div class=\"progress col-sm-12 mt-2\">\r\n                        <div id=\"password-strength\" class=\"progress-bar\"\r\n                            role=\"progressbar\" aria-valuenow=\"40\"\r\n                            aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                            [style]=\"validate_auth0.getProgress()\"\r\n                        >\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row col-sm-12 mt-2\" style=\"justify-content:flex-end; \">\r\n                        <label for=\"fname\" class=\"control-label\" [style]=\"validate_auth0.getProgress(true)\">{{validate_auth0.statusProgressBar}}</label>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <label for=\"lname\" class=\"col-sm-3 text-right control-label col-form-label\">Confirmar contraseña:</label>\r\n                <div class=\"col-sm-9\">\r\n                    <div class=\"input-group col-sm-12\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                <i class=\"fa fa-lock\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input formControlName=\"confirm\" class=\"form-control\" id=\"fconfirm\" placeholder=\"confirmar nueva contraseña\" type=\"password\">\r\n                    </div>\r\n                    <small class=\"form-text text-danger\" *ngIf=\"editPassword.controls.confirm.value != editPassword.controls.newPassword.value && !editPassword.controls.confirm.valid && (editPassword.controls.confirm.dirty || editPassword.controls.confirm.touched)\">Las contraseñas no coinciden.</small>\r\n                    <ul class=\"list-unstyled mt-5\">\r\n                        <li *ngFor=\"let item of validate_auth0.checkrules\">\r\n                            <span class=\"lower-upper-case\">\r\n                                <div style=\"font-size: 1rem;\">\r\n                                    <i  [ngClass]=\"item.status?'fas icon-check':'fas icon-close'\" [style]=\"item.status?'color:green;':'color: red;'\" aria-hidden=\"true\"></i>\r\n                                    {{item.rule}}\r\n                                </div>\r\n                            </span>\r\n                        </li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n\r\n    <div class=\"modal-footer border-top-0\">\r\n        <button [disabled]=\"!editPassword.valid || (validate_auth0.getRulesCorrect()==false)\" type=\"button\" (click)=\"changePassword()\" class=\"btn btn btn-info ml-auto h-25 btn-color-solucredit\">Cambiar</button>\r\n        <button type=\"button\" class=\"btn btn-raised mr-1 text-white  btn-color-solucredit-secondary\" (click)=\"closeBtnClick()\">Cancelar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\n\r\nimport { CommonModule,DatePipe } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserService } from './servicio/user.service';\r\nimport { UserComponent } from './user.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport {MultiselectComponent} from './multiselect/multiselect.component'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { NotifierModule} from 'angular-notifier';\r\nimport { PipesModule } from '../../pipes/pipes.module'\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { SharedModule } from '../../shared/shared.module'\r\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Usuarios',\r\n      urls: [\r\n        { title: 'Usuarios', url: '/usuarios' },\r\n        { title: 'Lista de usuarios' }\r\n      ]\r\n    },\r\n    component: UserComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [UserComponent,MultiselectComponent,SpinnerComponent],\r\n  imports: [NgxSpinnerModule, PipesModule, NotifierModule, FormsModule, ReactiveFormsModule, NgMultiSelectDropDownModule, NgbModule, SharedModule ,CommonModule, RouterModule.forChild(routes)],\r\n  exports: [NgMultiSelectDropDownModule,PipesModule],\r\n  providers: [\r\n    UserService,\r\n    DatePipe,\r\n\r\n  ]\r\n\r\n\r\n})\r\nexport class UserModule { }\r\n"],"sourceRoot":"webpack:///"}