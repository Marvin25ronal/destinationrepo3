{"version":3,"sources":["./src/app/pages/list-customer/list-customer.component.ts","./src/app/pages/list-customer/list-customer.component.html","./src/app/pages/list-customer/list-customer.module.ts"],"names":[],"mappings":"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","file":"pages-list-customer-list-customer-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MysqlService } from '../../services/mysql/mysql.service';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n@Component({\r\n  selector: \"app-list-customer\",\r\n  templateUrl: \"./list-customer.component.html\",\r\n  styleUrls: [\"./list-customer.component.css\"],\r\n})\r\nexport class ListCustomerComponent implements OnInit {\r\n  dataAllCustomer;\r\n  allData;\r\n  dataCountRequest;\r\n  page = 1;\r\n  pageSize = 10;\r\n  optionsCategories;\r\n  selectcategory;\r\n  tempdata;\r\n  selectUser;\r\n  totalData: number\r\n  search = new FormGroup({\r\n    q: new FormControl(null),\r\n  })\r\n  constructor(\r\n    private mysqlService: MysqlService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private autorization: AuthorizationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.selectUser = \"\";\r\n    this.GetListCustomer();\r\n    this.getCategories();\r\n  }\r\n  //METODOS PARA VERIFICACIONES DER PERMISOS\r\n  canSee(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"SEE\");\r\n  }\r\n  canCreate(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"CREATE\");\r\n  }\r\n  canAddRepresentative(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"ADD_REPRESENTATIVE\");\r\n  }\r\n  canEdit(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"EDIT\");\r\n  }\r\n  canList(): boolean {\r\n    let resource = \"CLIENT\";\r\n    return this.autorization.havePermission(resource, \"LIST\");\r\n  }\r\n\r\n  //----------\r\n\r\n  GetListCustomer() {\r\n    this.spinner.show()\r\n    this.mysqlService\r\n      .GetAllCustomer(\r\n        this.pageSize,\r\n        0,\r\n        this.selectUser\r\n      )\r\n      .toPromise()\r\n      .then((response) => {\r\n\r\n        this.allData = response.data.customer;\r\n        this.dataAllCustomer = this.allData\r\n        //console.log(response.data.customer);\r\n        this.dataCountRequest = response.data.count;\r\n        this.spinner.hide();\r\n        this.tempdata = response.data.customer;\r\n        this.totalData = response.data.totalData\r\n      })\r\n      .catch((error) => {\r\n        this.toastr.error(\"Problemas con la conexión al servidor.\", \"Oops!\");\r\n      });\r\n  }\r\n  searchTermM() {\r\n    this.getList(this.search.controls.q.value)\r\n  }\r\n  pageChange(e) {\r\n    this.getList(this.selectUser)\r\n  }\r\n  getList(search) {\r\n    this.spinner.show()\r\n    this.mysqlService\r\n      .GetAllCustomer(\r\n        this.pageSize,\r\n        (this.page - 1) * this.pageSize,\r\n        search\r\n      )\r\n      .toPromise()\r\n      .then((response) => {\r\n\r\n        this.allData = response.data.customer;\r\n        this.dataAllCustomer = this.allData\r\n        //console.log(response.data.customer);\r\n        this.dataCountRequest = response.data.count;\r\n        this.spinner.hide();\r\n        this.tempdata = response.data.customer;\r\n        this.totalData = response.data.totalData\r\n      })\r\n      .catch((error) => {\r\n        this.toastr.error(\"Problemas con la conexión al servidor.\", \"Oops!\");\r\n        this.spinner.hide()\r\n      });\r\n  }\r\n  ViewCliente(id: string) {\r\n    this.router.navigate([`/customer/cliente/${id}`]);\r\n  }\r\n\r\n  EditCliente(id: string) {\r\n    this.router.navigate([`/edit-customer/cliente/${id}`]);\r\n  }\r\n\r\n  NewCustomer() {\r\n    this.router.navigate([`/new-user`]);\r\n  }\r\n\r\n  //Searching..........\r\n  _searchTerm: string;\r\n  get searchTerm(): string {\r\n    return this._searchTerm;\r\n  }\r\n  set searchTerm(val: string) {\r\n    this._searchTerm = val;\r\n    this.dataAllCustomer = this.filter(val);\r\n  }\r\n\r\n  filter(v: string) {\r\n    console.log(v);\r\n    if (v !== \"\") {\r\n      this.dataAllCustomer = this.allData.filter(\r\n        (x) =>\r\n          x?.name?.toLowerCase().indexOf(v.toLowerCase()) !== -1\r\n        // x?.nit.toLowerCase().indexOf(v.toLowerCase()) !== -1 ||\r\n        // x?.address1?.toLowerCase().indexOf(v.toLowerCase()) !== -1\r\n        /*x.address2.toLowerCase().indexOf(v.toLowerCase()) !== -1*/\r\n      );\r\n      console.log(this.dataAllCustomer)\r\n    } else {\r\n      return this.GetListCustomer();\r\n    }\r\n  }\r\n\r\n  filtertest(v: number) {\r\n    this.dataAllCustomer = this.tempdata;\r\n    v = Number(v);\r\n    if (v != 0) {\r\n      this.spinner.show()\r\n      this.mysqlService\r\n        .GetAllCustomer(\r\n          this.pageSize,\r\n          (this.page - 1) * this.pageSize,\r\n          this.selectUser,\r\n          v\r\n        )\r\n        .toPromise()\r\n        .then((response) => {\r\n          this.allData = response.data.customer;\r\n          this.dataAllCustomer = this.allData\r\n          //console.log(response.data.customer);\r\n          this.dataCountRequest = response.data.count;\r\n          this.spinner.hide();\r\n          this.tempdata = response.data.customer;\r\n          this.totalData = response.data.totalData\r\n        })\r\n        .catch((error) => {\r\n          this.toastr.error(\"Problemas con la conexión al servidor.\", \"Oops!\");\r\n          this.spinner.hide()\r\n        });\r\n    } else if (v == 0) {\r\n      return this.GetListCustomer();\r\n    }\r\n  }\r\n\r\n  async getCategories() {\r\n    const res = this.mysqlService\r\n      .GetAllCustomerCategories()\r\n      .toPromise()\r\n      .then((response) => {\r\n        this.optionsCategories = response.data;\r\n        this.selectcategory = \"\";\r\n      });\r\n    return res;\r\n  }\r\n\r\n  onChangeCategory(deviceValue) {\r\n    this.filtertest(deviceValue);\r\n  }\r\n\r\n  addnewPerson(id: string) {\r\n    this.router.navigate([`/new-person/cliente/${id}`]);\r\n  }\r\n}\r\n","<div class=\"col-12\">\r\n    <div class=\"card card-body\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n        </ngx-spinner>\r\n        <div class=\"d-flex mb-3 mt-3\">\r\n            <form class=\"m-t-20\" [formGroup]=\"search\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-lg-6\">\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"input-group col-sm-12\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                        <i class=\"ti-search\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <input formControlName=\"q\" class=\"form-control\" placeholder=\"Buscar Cliente\" type=\"text\"\r\n                                    (change)=\"searchTermM()\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-lg-6\">\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"input-group col-sm-12\">\r\n                                <div _ngcontent-bpb-c164=\"\" class=\"input-group-prepend\"><label _ngcontent-bpb-c164=\"\"\r\n                                        for=\"inputGroupSelect01\" class=\"input-group-text\"><i\r\n                                            class=\"far fa-id-card\"></i></label></div>\r\n                                <select class=\"custom-select col-sm-12\" id=\"category\" name=\"category\"\r\n                                    [(ngModel)]=\"selectcategory\" (change)=\"onChangeCategory($event.target.value)\"\r\n                                    [ngModelOptions]=\"{standalone: true}\">\r\n                                    <option value=\"\" selected disabled>Selecionar Categoría</option>\r\n                                    <option value=\"0\">Todos</option>\r\n                                    <option *ngFor=\"let order of optionsCategories\" [value]=\"order.category_id\">\r\n                                        {{order.name}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <button *ngIf=\"canCreate()\" (click)=\"NewCustomer()\"\r\n                class=\"btn btn ml-auto h-25 text-white custom_btn1\">Nuevo prospecto</button>\r\n        </div>\r\n        <div *ngIf=\"canList()\" class=\"table-responsive table-hover\">\r\n            <table class=\"table table-responsive-lg no-wrap v-middle\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\" class=\"text-center\">Tipo de Cliente</th>\r\n                        <th scope=\"col\" class=\"text-center\">Nombre Completo</th>\r\n                        <!--<th scope=\"col\" width=\"160px\">NIT</th>-->\r\n                        <th scope=\"col\" class=\"text-center\">Dirección</th>\r\n                        <th scope=\"col\" class=\"text-center\">Categoría</th>\r\n                       \r\n                        <!-- <th scope=\"col\" class=\"text-center\">No. de Solicitudes</th> -->\r\n                        <th scope=\"col\" class=\"text-center\">Acciones</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr\r\n                        *ngFor=\"let user of dataAllCustomer\">\r\n                         <!--TIPO DE CLIENTE-->\r\n                         <td *ngIf=\"user.type === 0\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Individual\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.type === 1\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Jurídico\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <!--NOMBRE COMPLETO-->\r\n                        <td width=\"250px\">\r\n                            <div>\r\n                                <ngb-highlight *ngIf=\"user.type === 0\"\r\n                                    [result]=\"user.name\"\r\n                                    [term]=\"searchTerm\"></ngb-highlight>\r\n                                <ngb-highlight *ngIf=\"user.type === 1\" [result]=\"user.businessname\" [term]=\"searchTerm\">\r\n                                </ngb-highlight>\r\n                            </div>\r\n\r\n                        </td>\r\n                        <!-- <td>\r\n                            <ngb-highlight [result]=\"user.nit\" [term]=\"searchTerm\"></ngb-highlight>\r\n                        </td>-->\r\n                        <!--DIRECCIÓN-->\r\n                        <td>\r\n\r\n                            <div>\r\n                                <div class=\"text-left\">\r\n                                    <ngb-highlight [result]=\"(user.address1 === null ? 'No Registrada' : user.address1)\"\r\n                                        ngbTooltip=\"Dirección 1\" [term]=\"searchTerm\"></ngb-highlight>\r\n                                </div>\r\n                                <div class=\"text-left\">\r\n                                    <ngb-highlight [result]=\"user.address2\" ngbTooltip=\"Dirección 2\"></ngb-highlight>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <!--CATEGORIA-->\r\n                        <td *ngIf=\"user.category_id === 1\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Prospecto\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.category_id === 2\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"VIP\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.category_id === 3\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Tradicional\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.category_id === 4\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Otros\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                        <td *ngIf=\"user.category_id === 5\">\r\n                            <div class=\"text-center\">\r\n                                <ngb-highlight result=\"Cliente Tradicional\" [term]=\"searchTerm\"></ngb-highlight>\r\n                            </div>\r\n                        </td>\r\n                       \r\n                        <!--NO DE SOLICITUDES-->\r\n                        <!-- <td class=\"text-center\">\r\n                            <ngb-highlight [result]=\"dataCountRequest[user.customer_id]\"></ngb-highlight>\r\n                        </td> -->\r\n                        <!--BOTONES-->\r\n                        <td style=\"margin:auto;\">\r\n                            <div class=\"text-center\">\r\n                                <button *ngIf=\"canSee()\" class=\"btn text-white custom_btn1 text-center\" type=\"button\"\r\n                                    (click)=\"ViewCliente(user.customer_id)\"><span class=\"btn-label m-r-5\"><i\r\n                                            class=\"mdi mdi-eye-outline\"></i></span>Ver</button>\r\n                                <!-- <button *ngIf=\"canAddRepresentative()\" class=\"btn text-white custom_btn1\" type=\"button\" (click)=\"addnewPerson(user.customer_id)\"><i\r\n                                                        class=\"fas fa-user-plus text-white m-r-10\"></i> Agregar un nuevo\r\n                                                    representante.</button> -->\r\n                                <button *ngIf=\"canEdit()\" class=\"btn text-white custom_btn1\"\r\n                                    (click)=\"EditCliente(user.customer_id)\" type=\"button\"><span\r\n                                        class=\"btn-label m-r-5\"><i class=\" icon-pencil\"></i></span>Editar</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"d-flex justify-content-center p-2\">\r\n                <ngb-pagination *ngIf=\"dataAllCustomer\" [maxSize]=\"7\" [collectionSize]=\"this.totalData\"\r\n                    [(page)]=\"page\" [pageSize]=\"pageSize\"\r\n                    (pageChange)=\"pageChange($event)\"\r\n                    [boundaryLinks]=\"true\"\r\n                    >\r\n                </ngb-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { ListCustomerComponent } from \"./list-customer.component\";\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    data: {\r\n      title: \"Listado de clientes y prospetos\",\r\n      urls: [\r\n        { title: \"Clientes\", url: \"/list-customer\" },\r\n        { title: \"Información de clientes y prospecto\" },\r\n      ],\r\n    },\r\n    component: ListCustomerComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [ListCustomerComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class DashboardModule {}\r\n"],"sourceRoot":"webpack:///"}