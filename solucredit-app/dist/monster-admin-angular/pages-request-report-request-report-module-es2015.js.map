{"version":3,"sources":["./src/app/pages/request-report/request-report.component.ts","./src/app/pages/request-report/request-report.component.html","./src/app/pages/request-report/request-report.module.ts","./src/app/pages/request-report/servicio/request-report.service.ts"],"names":[],"mappings":"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","file":"pages-request-report-request-report-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { PaginationTableData } from '../../interfaces/ui/pagination-table.interface';\r\nimport { NgbDateStruct, NgbCalendar, NgbDateAdapter, NgbDateNativeAdapter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RequestService } from './servicio/request-report.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { MysqlService } from '../../services/mysql/mysql.service';\r\nimport { DatePipe } from '@angular/common'\r\n@Component({\r\n  selector: 'app-request-report',\r\n  templateUrl: './request-report.component.html',\r\n  styleUrls: ['./request-report.component.scss']\r\n})\r\nexport class RequestReportComponent implements OnInit {\r\n\r\n  constructor(private _service: RequestService, private spinner: NgxSpinnerService, private notifier: NotifierService, private mysqlService: MysqlService,public datepipe: DatePipe) { }\r\n\r\n  //-------FILTER-COMPONENT STUFFFF------\r\n  valores1: any[] = [\r\n    { value: 0, text: \"Factoraje Tradicional\" },\r\n    { value: 1, text: \"Factoraje Especial\" },\r\n    { value: 3, text: \"Especiales\" },\r\n    { value: 4, text: \"Pronto Pago\" },\r\n    \r\n  ];\r\n  valores2: any[] = [\r\n    { value: 'NIT', text: \"nit\" },\r\n    { value: 'NAME', text: \"nombre\" },\r\n    \r\n  ];\r\n  \r\n  \r\n  vals: any[] = ['','','','...',null,null,];\r\n\r\n  config = [\r\n    {\r\n      label: ' Filtrar por tipo de solicitud',\r\n      tipo: 'DROPDOWN',\r\n      range: false,\r\n      labelsAux:['Tipo:']\r\n      \r\n    },\r\n    {\r\n      label: 'Filtrar por usuario ',\r\n      tipo: 'DROP_TEXT',\r\n      range: true,\r\n      labelsAux: ['Filtro:','Palabra']\r\n\r\n    },\r\n    {\r\n      label: 'Rango de fechas',\r\n      tipo: 'DATE',\r\n      range: true,\r\n      labelsAux: ['Fecha inicio:', 'Fecha fin:']\r\n\r\n    },\r\n    {\r\n      \r\n      tipo: 'OPTIONS',\r\n      options: {\r\n        restart: true,\r\n        header:true\r\n        \r\n      }\r\n\r\n    }\r\n  ]\r\n  //-------------\r\n\r\n\r\n\r\n\r\n  //model: NgbDateStruct;\r\n  //model2: NgbDateStruct;\r\n  date: { year: number; month: number };\r\n\r\n  selectedRequestType: any = \"\";\r\n  selectedCustomerFilter: any = \"\";\r\n  selectCustomerSearch: any = \"\";\r\n\r\n  dataList: PaginationTableData = {\r\n    metadata: [\r\n      \"ID Cliente\",\r\n      \"Nombre\",\r\n      \"Nit\",\r\n      \"ID solicitud\",\r\n      \"Documentos\",\r\n      \"Garantias\",\r\n      \"Estado\",\r\n      \"Tipo\",\r\n      \"Fecha de creacion\",\r\n      \"Verificaciones\"\r\n\r\n\r\n    ],\r\n    data: []\r\n  };\r\n  pageSize = 10;\r\n  page = 1;\r\n  totalData = 0;\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this._service.getRequests(this.pageSize, 0, [], []).pipe(\r\n      map((data) => {\r\n        this.dataList.data = data.data;\r\n        this.totalData = data.count;\r\n        this.spinner.hide();\r\n\r\n\r\n\r\n      }),\r\n      catchError((err) => {\r\n        this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n        console.log(err);\r\n        this.spinner.hide();\r\n        return of();\r\n      })\r\n\r\n    ).subscribe((data) => {\r\n\r\n\r\n\r\n    })\r\n  }\r\n  onChangeCategory1(deviceValue) {\r\n\r\n    this.selectedRequestType = deviceValue;\r\n    /* if (this.selectUser != \"\") {\r\n      this.getLogs([this.selectUser]);\r\n    }\r\n    else {\r\n      this.getLogs(\"\");\r\n    } */\r\n\r\n  }\r\n  onChangeCategory2(deviceValue) {\r\n\r\n    this.selectedCustomerFilter = deviceValue;\r\n    /*  if (this.selectUser != \"\") {\r\n       this.getLogs([this.selectUser]);\r\n     }\r\n     else {\r\n       this.getLogs(\"\");\r\n     } */\r\n\r\n  }\r\n\r\n\r\n  async xlsxDownload(e){\r\n    /*let searchField = [];\r\n    let searchItem = [];\r\n    if (this.model && this.model2) {\r\n      searchField.push('FECINI');\r\n      let fecini = this.model.year + '-' + this.model.month + '-' + this.model.day + ' 00:00:00';\r\n      searchItem.push(fecini);\r\n      searchField.push('FECEND');\r\n      let fecend = this.model2.year + '-' + this.model2.month + '-' + this.model2.day + ' 23:59:59';\r\n      searchItem.push(fecend);\r\n    }\r\n\r\n\r\n    if (this.selectedRequestType != \"\") {\r\n      searchField.push('TYPE');\r\n      searchItem.push(this.selectedRequestType);\r\n    }\r\n    if (this.selectedCustomerFilter != \"\" && this.selectCustomerSearch != \"\") {\r\n      searchField.push(this.selectedCustomerFilter);\r\n      searchItem.push('%' + this.selectCustomerSearch + '%');\r\n    }*/\r\n    \r\n\r\n    let searchField = [];\r\n    let searchItem = [];\r\n    console.log('SEARCH:: ');\r\n    console.log(e);\r\n    if (this.vals[4] && this.vals[5]) {\r\n      searchField.push('FECINI');\r\n      let fecini = this.vals[4].year + '-' + this.vals[4].month + '-' + this.vals[4].day + ' 00:00:00';\r\n      searchItem.push(fecini);\r\n      searchField.push('FECEND');\r\n      let fecend = this.vals[5].year + '-' + this.vals[5].month + '-' + this.vals[5].day + ' 23:59:59';\r\n      searchItem.push(fecend);\r\n    }\r\n\r\n\r\n    if (this.vals[0] != \"\" ) {\r\n      searchField.push('TYPE');\r\n      searchItem.push(this.vals[0]);\r\n    }\r\n    if (this.vals[2] != \"\" && this.vals[3] != \"\") {\r\n      searchField.push(this.vals[2]);\r\n      searchItem.push('%' + this.vals[3] + '%');\r\n    }\r\n    \r\n    let date= new Date();\r\n    let datestring =this.datepipe.transform(date, 'yyyy-MM-dd HH:MM:ss');\r\n    await this.mysqlService\r\n      .DownloadXlsx('ReporteSolicitudes'+datestring, searchItem, searchField);\r\n\r\n  }\r\n\r\n  search(e) {\r\n    let searchField = [];\r\n    let searchItem = [];\r\n    console.log('SEARCH:: ');\r\n    console.log(e);\r\n    if (this.vals[4] && this.vals[5]) {\r\n      searchField.push('FECINI');\r\n      let fecini = this.vals[4].year + '-' + this.vals[4].month + '-' + this.vals[4].day + ' 00:00:00';\r\n      searchItem.push(fecini);\r\n      searchField.push('FECEND');\r\n      let fecend = this.vals[5].year + '-' + this.vals[5].month + '-' + this.vals[5].day + ' 23:59:59';\r\n      searchItem.push(fecend);\r\n    }\r\n\r\n\r\n    if (this.vals[0] != \"\" ) {\r\n      searchField.push('TYPE');\r\n      searchItem.push(this.vals[0]);\r\n    }\r\n    if (this.vals[2] != \"\" && this.vals[3] != \"\") {\r\n      searchField.push(this.vals[2]);\r\n      searchItem.push('%' + this.vals[3] + '%');\r\n    }\r\n\r\n    this._service.getRequests(this.pageSize, (this.page - 1) * this.pageSize, searchItem, searchField).pipe(\r\n      map((data) => {\r\n        this.dataList.data = data.data;\r\n        this.totalData = data.count;\r\n        this.spinner.hide();\r\n\r\n\r\n\r\n      }),\r\n      catchError((err) => {\r\n        this.notifier.notify('error', 'Ocurrio un problema con la conexion' + err);\r\n        console.log(err);\r\n        this.spinner.hide();\r\n        return of();\r\n      })\r\n\r\n    ).subscribe((data) => {\r\n\r\n\r\n\r\n    })\r\n\r\n  }\r\n  pageChange(e) {\r\n    //console.log(e);\r\n\r\n    this.search(e);\r\n  }\r\n\r\n  onfilterChange1(e) { \r\n    console.log('onfilterChange1:' + e);\r\n    console.log(this.vals);\r\n  }\r\n  onfilterChange2(e) {\r\n    console.log('onfilterChange2:' + e);\r\n    console.log(this.vals);\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#759ee0\" type=\"ball-scale-multiple\">\r\n            <p style=\"font-size: 20px; color:#fff\">Cargando Información...</p>\r\n        </ngx-spinner>\r\n        <!--- pagination Table -->\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n\r\n                <app-reportfilters (onFilter)=\"search($event)\" (onCreateExcel)=\"xlsxDownload($event)\" [config]=\"config\" [(vals)]=\"vals\" [dataset1]='valores1' [dataset3]='valores2' (onChange1)=\"onfilterChange1($event)\" (onChange3)=\"onfilterChange2($event)\"></app-reportfilters>\r\n\r\n                <table class=\"table table-striped border mt-4\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th *ngFor=\"let header of dataList.metadata\">\r\n                                <div class=\"text-center\">\r\n                                    {{header}}\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let req of dataList.data\">\r\n                            <td>\r\n                                <div class=\"text-center\">\r\n                                    {{req.customer_id}}\r\n                                </div>\r\n                            </td>\r\n                            <td>{{req.name}}</td>\r\n                            <td>\r\n                                <div class=\"text-center\">\r\n                                    {{req.nit}}\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"text-center\">\r\n                                    {{req.request_id}}\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"text-center\">\r\n                                    {{req.documents | reqreportdocs}}\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"text-center\">    \r\n                                    {{req.warranties |reqreportdocs}}\r\n                                </div>        \r\n                            </td>\r\n                            <td>\r\n                                    <div class=\"text-center\">\r\n                                    {{req.status| reqreportstatus }}\r\n                                    </div>\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"text-center\">\r\n                                    {{req.type | reqreporttype}}\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"text-center\">\r\n                                    {{req.create_date | date: 'dd/MM/yyyy'}}\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"text-center\">        \r\n                                    {{req.verifications |reqreportdocs}}\r\n                                </div>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div class=\"d-flex justify-content-center p-2\">\r\n                    <ngb-pagination [collectionSize]=\"this.totalData\" [pageSize]=\"pageSize\" [(page)]=\"page\" aria-label=\"Default pagination\" (pageChange)=\"pageChange($event)\" [boundaryLinks]=\"true\" [maxSize]=\"7\"></ngb-pagination>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--- End pagination Table -->\r\n\r\n    </div>\r\n</div>\r\n<notifier-container></notifier-container>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RequestReportComponent } from './request-report.component';\r\n//import { ComponentsModule } from '../../component/component.module';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n//import { UserModule } from '../user/user.module'\r\nimport { NotifierModule } from 'angular-notifier';\r\nimport { PipesModule } from '../../pipes/pipes.module'\r\nimport { RequestService } from './servicio/request-report.service'\r\nimport { SharedModule } from '../../shared/shared.module'\r\n\r\nconst routes: Routes = [\r\n\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'Reporte de solicitudes',\r\n            urls: [\r\n                { title: 'Reporte solicitudes', url: '/solicitudes-reporte' },\r\n                { title: 'Reporte solicitudes' }\r\n            ]\r\n        },\r\n        component: RequestReportComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [FormsModule, CommonModule, NgbModule, NgxSpinnerModule, NotifierModule, PipesModule, SharedModule,RouterModule.forChild(routes)],\r\n    declarations: [RequestReportComponent],\r\n    providers: [RequestService]\r\n})\r\nexport class RequestReporteModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { GetRequestReportResponse, RequestReportResponse } from '../../../interfaces/request-report.interface';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders(\r\n        {\r\n            'Content-Type': 'application/json',\r\n            /* 'Access-Control-Allow-Credentials': 'true' */\r\n        }),\r\n    responseType: 'json' as const,\r\n    //withCredentials: true as const,  \r\n    observe: 'response' as const\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RequestService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getRequests(limit: number, offset: number, searchItem: string[], searchField: string[]): Observable<RequestReportResponse> {\r\n\r\n        let uri = `${environment.urlRequest}?limit=${limit}&offset=${offset}`;\r\n        if (searchItem.length != 0) { for (let i = 0; i < searchItem.length; i++) { uri = uri + `&searchItem=${searchItem[i]}`; } }\r\n        if (searchField.length != 0) { for (let i = 0; i < searchField.length; i++) { uri = uri + `&searchField=${searchField[i]}`; } }\r\n        return this.http.get<GetRequestReportResponse>(uri, httpOptions).pipe(\r\n            map((response) => {\r\n\r\n                return response.body.data;\r\n\r\n            })\r\n        )\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}